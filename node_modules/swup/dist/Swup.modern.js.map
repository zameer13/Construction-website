{"version":3,"file":"Swup.modern.js","sources":["../src/helpers/classify.ts","../src/helpers/getCurrentUrl.ts","../src/helpers/history.ts","../src/helpers/delegateEvent.ts","../src/helpers/Location.ts","../src/helpers/matchPath.ts","../src/modules/fetchPage.ts","../src/modules/Cache.ts","../src/utils/index.ts","../src/modules/Classes.ts","../src/modules/Visit.ts","../src/modules/Hooks.ts","../src/modules/getAnchorElement.ts","../src/modules/awaitAnimations.ts","../src/modules/navigate.ts","../src/modules/animatePageOut.ts","../src/modules/replaceContent.ts","../src/modules/scrollToContent.ts","../src/modules/animatePageIn.ts","../src/modules/renderPage.ts","../src/modules/plugins.ts","../src/modules/resolveUrl.ts","../src/Swup.ts"],"sourcesContent":["/** Turn a string into a slug by lowercasing and replacing whitespace. */\nexport const classify = (text: string, fallback?: string): string => {\n\tconst output = String(text)\n\t\t.toLowerCase()\n\t\t// .normalize('NFD') // split an accented letter in the base letter and the acent\n\t\t// .replace(/[\\u0300-\\u036f]/g, '') // remove all previously split accents\n\t\t.replace(/[\\s/_.]+/g, '-') // replace spaces and _./ with '-'\n\t\t.replace(/[^\\w-]+/g, '') // remove all non-word chars\n\t\t.replace(/--+/g, '-') // replace repeating '-' with single '-'\n\t\t.replace(/^-+|-+$/g, ''); // trim '-' from edges\n\treturn output || fallback || '';\n};\n","/** Get the current page URL: path name + query params. Optionally including hash. */\nexport const getCurrentUrl = ({ hash }: { hash?: boolean } = {}): string => {\n\treturn location.pathname + location.search + (hash ? location.hash : '');\n};\n","import { getCurrentUrl } from './getCurrentUrl.js';\n\nexport interface HistoryState {\n\turl: string;\n\tsource: 'swup';\n\trandom: number;\n\tindex?: number;\n\t[key: string]: unknown;\n}\n\ntype HistoryData = Record<string, unknown>;\n\n/** Create a new history record with a custom swup identifier. */\nexport const createHistoryRecord = (url: string, data: HistoryData = {}): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst state: HistoryState = {\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...data\n\t};\n\thistory.pushState(state, '', url);\n};\n\n/** Update the current history record with a custom swup identifier. */\nexport const updateHistoryRecord = (url: string | null = null, data: HistoryData = {}): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst currentState = (history.state as HistoryState) || {};\n\tconst state: HistoryState = {\n\t\t...currentState,\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...data\n\t};\n\thistory.replaceState(state, '', url);\n};\n","import delegate, {\n\ttype DelegateEventHandler,\n\ttype DelegateOptions,\n\ttype EventType\n} from 'delegate-it';\nimport type { ParseSelector } from 'typed-query-selector/parser.js';\n\nexport type DelegateEventUnsubscribe = {\n\tdestroy: () => void;\n};\n\n/** Register a delegated event listener. */\nexport const delegateEvent = <\n\tSelector extends string,\n\tTElement extends Element = ParseSelector<Selector, HTMLElement>,\n\tTEvent extends EventType = EventType\n>(\n\tselector: Selector,\n\ttype: TEvent,\n\tcallback: DelegateEventHandler<GlobalEventHandlersEventMap[TEvent], TElement>,\n\toptions?: DelegateOptions\n): DelegateEventUnsubscribe => {\n\tconst controller = new AbortController();\n\toptions = { ...options, signal: controller.signal };\n\tdelegate<Selector, TElement, TEvent>(selector, type, callback, options);\n\treturn { destroy: () => controller.abort() };\n};\n","/**\n * A helper for creating a Location from either an element\n * or a URL object/string\n *\n */\nexport class Location extends URL {\n\tconstructor(url: URL | string, base: string = document.baseURI) {\n\t\tsuper(url.toString(), base);\n\t\t// Fix Safari bug with extending native classes\n\t\tObject.setPrototypeOf(this, Location.prototype);\n\t}\n\n\t/**\n\t * The full local path including query params.\n\t */\n\tget url(): string {\n\t\treturn this.pathname + this.search;\n\t}\n\n\t/**\n\t * Instantiate a Location from an element's href attribute\n\t * @param el\n\t * @returns new Location instance\n\t */\n\tstatic fromElement(el: Element): Location {\n\t\tconst href = el.getAttribute('href') || el.getAttribute('xlink:href') || '';\n\t\treturn new Location(href);\n\t}\n\n\t/**\n\t * Instantiate a Location from a URL object or string\n\t * @param url\n\t * @returns new Location instance\n\t */\n\tstatic fromUrl(url: URL | string): Location {\n\t\treturn new Location(url);\n\t}\n}\n","import { match } from 'path-to-regexp';\n\nimport type {\n\tPath,\n\tParseOptions,\n\tTokensToRegexpOptions,\n\tRegexpToFunctionOptions,\n\tMatchFunction\n} from 'path-to-regexp';\n\nexport { type Path };\n\n/** Create a match function from a path pattern that checks if a URLs matches it. */\nexport const matchPath = <P extends object = object>(\n\tpath: Path,\n\toptions?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions\n): MatchFunction<P> => {\n\ttry {\n\t\treturn match<P>(path, options);\n\t} catch (error) {\n\t\tthrow new Error(`[swup] Error parsing path \"${String(path)}\":\\n${String(error)}`);\n\t}\n};\n","import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\nimport type { Visit } from './Visit.js';\n\n/** A page object as used by swup and its cache. */\nexport interface PageData {\n\t/** The URL of the page */\n\turl: string;\n\t/** The complete HTML response received from the server */\n\thtml: string;\n}\n\n/** Define how a page is fetched. */\nexport interface FetchOptions extends Omit<RequestInit, 'cache'> {\n\t/** The request method. */\n\tmethod?: 'GET' | 'POST';\n\t/** The body of the request: raw string, form data object or URL params. */\n\tbody?: string | FormData | URLSearchParams;\n\t/** The request timeout in milliseconds. */\n\ttimeout?: number;\n\t/** Optional visit object with additional context. @internal */\n\tvisit?: Visit;\n}\n\nexport class FetchError extends Error {\n\turl: string;\n\tstatus?: number;\n\taborted: boolean;\n\ttimedOut: boolean;\n\tconstructor(\n\t\tmessage: string,\n\t\tdetails: { url: string; status?: number; aborted?: boolean; timedOut?: boolean }\n\t) {\n\t\tsuper(message);\n\t\tthis.name = 'FetchError';\n\t\tthis.url = details.url;\n\t\tthis.status = details.status;\n\t\tthis.aborted = details.aborted || false;\n\t\tthis.timedOut = details.timedOut || false;\n\t}\n}\n\n/**\n * Fetch a page from the server, return it and cache it.\n */\nexport async function fetchPage(\n\tthis: Swup,\n\turl: URL | string,\n\toptions: FetchOptions = {}\n): Promise<PageData> {\n\turl = Location.fromUrl(url).url;\n\n\tconst { visit = this.visit } = options;\n\tconst headers = { ...this.options.requestHeaders, ...options.headers };\n\tconst timeout = options.timeout ?? this.options.timeout;\n\tconst controller = new AbortController();\n\tconst { signal } = controller;\n\toptions = { ...options, headers, signal };\n\n\tlet timedOut = false;\n\tlet timeoutId: ReturnType<typeof setTimeout> | null = null;\n\tif (timeout && timeout > 0) {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimedOut = true;\n\t\t\tcontroller.abort('timeout');\n\t\t}, timeout);\n\t}\n\n\t// Allow hooking before this and returning a custom response-like object (e.g. custom fetch implementation)\n\tlet response: Response;\n\ttry {\n\t\tresponse = await this.hooks.call(\n\t\t\t'fetch:request',\n\t\t\tvisit,\n\t\t\t{ url, options },\n\t\t\t(visit, { url, options }) => fetch(url, options)\n\t\t);\n\t\tif (timeoutId) {\n\t\t\tclearTimeout(timeoutId);\n\t\t}\n\t} catch (error) {\n\t\tif (timedOut) {\n\t\t\tthis.hooks.call('fetch:timeout', visit, { url });\n\t\t\tthrow new FetchError(`Request timed out: ${url}`, { url, timedOut });\n\t\t}\n\t\tif ((error as Error)?.name === 'AbortError' || signal.aborted) {\n\t\t\tthrow new FetchError(`Request aborted: ${url}`, { url, aborted: true });\n\t\t}\n\t\tthrow error;\n\t}\n\n\tconst { status, url: responseUrl } = response;\n\tconst html = await response.text();\n\n\tif (status === 500) {\n\t\tthis.hooks.call('fetch:error', visit, { status, response, url: responseUrl });\n\t\tthrow new FetchError(`Server error: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\tif (!html) {\n\t\tthrow new FetchError(`Empty response: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\t// Resolve real url after potential redirect\n\tconst { url: finalUrl } = Location.fromUrl(responseUrl);\n\tconst page = { url: finalUrl, html };\n\n\t// Write to cache for safe methods and non-redirects\n\tif (visit.cache.write && (!options.method || options.method === 'GET') && url === finalUrl) {\n\t\tthis.cache.set(page.url, page);\n\t}\n\n\treturn page;\n}\n","import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\nimport { type PageData } from './fetchPage.js';\n\nexport interface CacheData extends PageData {}\n\n/**\n * In-memory page cache.\n */\nexport class Cache {\n\t/** Swup instance this cache belongs to */\n\tprotected swup: Swup;\n\n\t/** Cached pages, indexed by URL */\n\tprotected pages: Map<string, CacheData> = new Map();\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\t/** Number of cached pages in memory. */\n\tget size(): number {\n\t\treturn this.pages.size;\n\t}\n\n\t/** All cached pages. */\n\tget all() {\n\t\tconst copy = new Map();\n\t\tthis.pages.forEach((page, key) => {\n\t\t\tcopy.set(key, { ...page });\n\t\t});\n\t\treturn copy;\n\t}\n\n\t/** Check if the given URL has been cached. */\n\thas(url: string): boolean {\n\t\treturn this.pages.has(this.resolve(url));\n\t}\n\n\t/** Return a shallow copy of the cached page object if available. */\n\tget(url: string): CacheData | undefined {\n\t\tconst result = this.pages.get(this.resolve(url));\n\t\tif (!result) return result;\n\t\treturn { ...result };\n\t}\n\n\t/** Create a cache record for the specified URL. */\n\tset(url: string, page: CacheData) {\n\t\turl = this.resolve(url);\n\t\tpage = { ...page, url };\n\t\tthis.pages.set(url, page);\n\t\tthis.swup.hooks.callSync('cache:set', undefined, { page });\n\t}\n\n\t/** Update a cache record, overwriting or adding custom data. */\n\tupdate(url: string, payload: object) {\n\t\turl = this.resolve(url);\n\t\tconst page = { ...this.get(url), ...payload, url } as CacheData;\n\t\tthis.pages.set(url, page);\n\t}\n\n\t/** Delete a cache record. */\n\tdelete(url: string): void {\n\t\tthis.pages.delete(this.resolve(url));\n\t}\n\n\t/** Empty the cache. */\n\tclear(): void {\n\t\tthis.pages.clear();\n\t\tthis.swup.hooks.callSync('cache:clear', undefined, undefined);\n\t}\n\n\t/** Remove all cache entries that return true for a given predicate function.  */\n\tprune(predicate: (url: string, page: CacheData) => boolean): void {\n\t\tthis.pages.forEach((page, url) => {\n\t\t\tif (predicate(url, page)) {\n\t\t\t\tthis.delete(url);\n\t\t\t}\n\t\t});\n\t}\n\n\t/** Resolve URLs by making them local and letting swup resolve them. */\n\tprotected resolve(urlToResolve: string): string {\n\t\tconst { url } = Location.fromUrl(urlToResolve);\n\t\treturn this.swup.resolveUrl(url);\n\t}\n}\n","/** Find an element by selector. */\nexport const query = (selector: string, context: Document | Element = document) => {\n\treturn context.querySelector<HTMLElement>(selector);\n};\n\n/** Find a set of elements by selector. */\nexport const queryAll = (\n\tselector: string,\n\tcontext: Document | Element = document\n): HTMLElement[] => {\n\treturn Array.from(context.querySelectorAll(selector));\n};\n\n/** Return a Promise that resolves after the next event loop. */\nexport const nextTick = (): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\trequestAnimationFrame(() => {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t});\n};\n\n/** Check if an object is a Promise or a Thenable */\nexport function isPromise<T>(obj: unknown): obj is PromiseLike<T> {\n\treturn (\n\t\t!!obj &&\n\t\t(typeof obj === 'object' || typeof obj === 'function') &&\n\t\ttypeof (obj as Record<string, unknown>).then === 'function'\n\t);\n}\n\n/** Call a function as a Promise. Resolves with the returned Promsise or immediately. */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nexport function runAsPromise(func: Function, args: unknown[] = []): Promise<unknown> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst result: unknown = func(...args);\n\t\tif (isPromise(result)) {\n\t\t\tresult.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n}\n\n/**\n * Force a layout reflow, e.g. after adding classnames\n * @returns The offset height, just here so it doesn't get optimized away by the JS engine\n * @see https://stackoverflow.com/a/21665117/3759615\n */\nexport function forceReflow(element?: HTMLElement) {\n\telement = element || document.body;\n\treturn element?.offsetHeight;\n}\n\n/** Escape a string with special chars to not break CSS selectors. */\nexport const escapeCssIdentifier = (ident: string) => {\n\t// @ts-ignore this is for support check, so it's correct that TS complains\n\tif (window.CSS && window.CSS.escape) {\n\t\treturn CSS.escape(ident);\n\t}\n\treturn ident;\n};\n\n/** Fix for Chrome below v61 formatting CSS floats with comma in some locales. */\nexport const toMs = (s: string) => {\n\treturn Number(s.slice(0, -1).replace(',', '.')) * 1000;\n};\n","import type Swup from '../Swup.js';\nimport { queryAll } from '../utils.js';\n\nexport class Classes {\n\tprotected swup: Swup;\n\tprotected swupClasses = [\n\t\t'to-',\n\t\t'is-changing',\n\t\t'is-rendering',\n\t\t'is-popstate',\n\t\t'is-animating',\n\t\t'is-leaving'\n\t];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\tprotected get selectors(): string[] {\n\t\tconst { scope } = this.swup.visit.animation;\n\t\tif (scope === 'containers') return this.swup.visit.containers;\n\t\tif (scope === 'html') return ['html'];\n\t\tif (Array.isArray(scope)) return scope;\n\t\treturn [];\n\t}\n\n\tprotected get selector(): string {\n\t\treturn this.selectors.join(',');\n\t}\n\n\tprotected get targets(): HTMLElement[] {\n\t\tif (!this.selector.trim()) return [];\n\t\treturn queryAll(this.selector);\n\t}\n\n\tadd(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.add(...classes));\n\t}\n\n\tremove(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.remove(...classes));\n\t}\n\n\tclear(): void {\n\t\tthis.targets.forEach((target) => {\n\t\t\tconst remove = target.className.split(' ').filter((c) => this.isSwupClass(c));\n\t\t\ttarget.classList.remove(...remove);\n\t\t});\n\t}\n\n\tprotected isSwupClass(className: string): boolean {\n\t\treturn this.swupClasses.some((c) => className.startsWith(c));\n\t}\n}\n","import type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\nimport type { HistoryAction, HistoryDirection } from './navigate.js';\n\n/** See below for the class Visit {} definition */\n// export interface Visit {}\n\nexport interface VisitFrom {\n\t/** The URL of the previous page */\n\turl: string;\n}\n\nexport interface VisitTo {\n\t/** The URL of the next page */\n\turl: string;\n\t/** The hash of the next page */\n\thash?: string;\n\t/** The HTML content of the next page */\n\thtml?: string;\n}\n\nexport interface VisitAnimation {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate: boolean;\n\t/** Whether to wait for the next page to load before starting the animation. Default: `false` */\n\twait: boolean;\n\t/** Name of a custom animation to run. */\n\tname?: string;\n\t/** Whether this animation uses the native browser ViewTransition API. Default: `false` */\n\tnative: boolean;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tscope: 'html' | 'containers' | string[];\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tselector: Options['animationSelector'];\n}\n\nexport interface VisitScroll {\n\t/** Whether to reset the scroll position after the visit. Default: `true` */\n\treset: boolean;\n\t/** Anchor element to scroll to on the next page. */\n\ttarget?: string | false;\n}\n\nexport interface VisitTrigger {\n\t/** DOM element that triggered this visit. */\n\tel?: Element;\n\t/** DOM event that triggered this visit. */\n\tevent?: Event;\n}\n\nexport interface VisitCache {\n\t/** Whether this visit will try to load the requested page from cache. */\n\tread: boolean;\n\t/** Whether this visit will save the loaded page in cache. */\n\twrite: boolean;\n}\n\nexport interface VisitHistory {\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\taction: HistoryAction;\n\t/** Whether this visit was triggered by a browser history navigation. */\n\tpopstate: boolean;\n\t/** The direction of travel in case of a browser history navigation: backward or forward. */\n\tdirection: HistoryDirection | undefined;\n}\n\nexport interface VisitInitOptions {\n\tto: string;\n\tfrom?: string;\n\thash?: string;\n\tel?: Element;\n\tevent?: Event;\n}\n\n/** @internal */\nexport const VisitState = {\n\tCREATED: 1,\n\tQUEUED: 2,\n\tSTARTED: 3,\n\tLEAVING: 4,\n\tLOADED: 5,\n\tENTERING: 6,\n\tCOMPLETED: 7,\n\tABORTED: 8,\n\tFAILED: 9\n} as const;\n\n/** @internal */\nexport type VisitState = (typeof VisitState)[keyof typeof VisitState];\n\n/** An object holding details about the current visit. */\nexport class Visit {\n\t/** A unique ID to identify this visit */\n\tid: number;\n\t/** The current state of this visit @internal */\n\tstate: VisitState;\n\t/** The previous page, about to leave */\n\tfrom: VisitFrom;\n\t/** The next page, about to enter */\n\tto: VisitTo;\n\t/** The content containers, about to be replaced */\n\tcontainers: Options['containers'];\n\t/** Information about animated page transitions */\n\tanimation: VisitAnimation;\n\t/** What triggered this visit */\n\ttrigger: VisitTrigger;\n\t/** Cache behavior for this visit */\n\tcache: VisitCache;\n\t/** Browser history behavior on this visit */\n\thistory: VisitHistory;\n\t/** Scroll behavior on this visit */\n\tscroll: VisitScroll;\n\n\tconstructor(swup: Swup, options: VisitInitOptions) {\n\t\tconst { to, from = swup.currentPageUrl, hash, el, event } = options;\n\n\t\tthis.id = Math.random();\n\t\tthis.state = VisitState.CREATED;\n\t\tthis.from = { url: from };\n\t\tthis.to = { url: to, hash };\n\t\tthis.containers = swup.options.containers;\n\t\tthis.animation = {\n\t\t\tanimate: true,\n\t\t\twait: false,\n\t\t\tname: undefined,\n\t\t\tnative: swup.options.native,\n\t\t\tscope: swup.options.animationScope,\n\t\t\tselector: swup.options.animationSelector\n\t\t};\n\t\tthis.trigger = { el, event };\n\t\tthis.cache = {\n\t\t\tread: swup.options.cache,\n\t\t\twrite: swup.options.cache\n\t\t};\n\t\tthis.history = {\n\t\t\taction: 'push',\n\t\t\tpopstate: false,\n\t\t\tdirection: undefined\n\t\t};\n\t\tthis.scroll = {\n\t\t\treset: true,\n\t\t\ttarget: undefined\n\t\t};\n\t}\n\t/** @internal */\n\tadvance(state: VisitState) {\n\t\tif (this.state < state) {\n\t\t\tthis.state = state;\n\t\t}\n\t}\n\n\t/** @internal */\n\tabort() {\n\t\tthis.state = VisitState.ABORTED;\n\t}\n\n\t/** Is this visit done, i.e. completed, failed, or aborted? */\n\tget done(): boolean {\n\t\treturn this.state >= VisitState.COMPLETED;\n\t}\n}\n\n/** Create a new visit object. */\nexport function createVisit(this: Swup, options: VisitInitOptions): Visit {\n\treturn new Visit(this, options);\n}\n","import type { DelegateEvent } from 'delegate-it';\n\nimport type Swup from '../Swup.js';\nimport { isPromise, runAsPromise } from '../utils.js';\nimport { Visit } from './Visit.js';\nimport type { FetchOptions, PageData } from './fetchPage.js';\n\nexport interface HookDefinitions {\n\t'animation:out:start': undefined;\n\t'animation:out:await': { skip: boolean };\n\t'animation:out:end': undefined;\n\t'animation:in:start': undefined;\n\t'animation:in:await': { skip: boolean };\n\t'animation:in:end': undefined;\n\t'animation:skip': undefined;\n\t'cache:clear': undefined;\n\t'cache:set': { page: PageData };\n\t'content:replace': { page: PageData };\n\t'content:scroll': undefined;\n\t'enable': undefined;\n\t'disable': undefined;\n\t'fetch:request': { url: string; options: FetchOptions };\n\t'fetch:error': { url: string; status: number; response: Response };\n\t'fetch:timeout': { url: string };\n\t'history:popstate': { event: PopStateEvent };\n\t'link:click': { el: HTMLAnchorElement; event: DelegateEvent<MouseEvent> };\n\t'link:self': undefined;\n\t'link:anchor': { hash: string };\n\t'link:newtab': { href: string };\n\t'page:load': { page?: PageData; cache?: boolean; options: FetchOptions };\n\t'page:view': { url: string; title: string };\n\t'scroll:top': { options: ScrollIntoViewOptions };\n\t'scroll:anchor': { hash: string; options: ScrollIntoViewOptions };\n\t'visit:start': undefined;\n\t'visit:transition': undefined;\n\t'visit:abort': undefined;\n\t'visit:end': undefined;\n}\n\nexport interface HookReturnValues {\n\t'content:scroll': Promise<boolean> | boolean;\n\t'fetch:request': Promise<Response>;\n\t'page:load': Promise<PageData>;\n\t'scroll:top': boolean;\n\t'scroll:anchor': boolean;\n}\n\nexport type HookArguments<T extends HookName> = HookDefinitions[T];\n\nexport type HookName = keyof HookDefinitions;\n\n/** A generic hook handler. */\nexport type HookHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>\n) => Promise<unknown> | unknown;\n\n/** A default hook handler with an expected return type. */\nexport type HookDefaultHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>,\n\t/** Default handler to be executed. Available if replacing an internal hook handler. */\n\tdefaultHandler?: HookDefaultHandler<T>\n) => T extends keyof HookReturnValues ? HookReturnValues[T] : Promise<unknown> | unknown;\n\nexport type Handlers = {\n\t[K in HookName]: HookHandler<K>[];\n};\n\n/** Unregister a previously registered hook handler. */\nexport type HookUnregister = () => void;\n\n/** Define when and how a hook handler is executed. */\nexport type HookOptions = {\n\t/** Execute the hook once, then remove the handler */\n\tonce?: boolean;\n\t/** Execute the hook before the internal default handler */\n\tbefore?: boolean;\n\t/** Set a priority for when to execute this hook. Lower numbers execute first. Default: `0` */\n\tpriority?: number;\n\t/** Replace the internal default handler with this hook handler */\n\treplace?: boolean;\n};\n\nexport type HookRegistration<\n\tT extends HookName,\n\tH extends HookHandler<T> | HookDefaultHandler<T> = HookHandler<T>\n> = {\n\tid: number;\n\thook: T;\n\thandler: H;\n\tdefaultHandler?: HookDefaultHandler<T>;\n} & HookOptions;\n\ntype HookEventDetail = {\n\thook: HookName;\n\targs: unknown;\n\tvisit: Visit;\n};\n\nexport type HookEvent = CustomEvent<HookEventDetail>;\n\ntype HookLedger<T extends HookName> = Map<HookHandler<T>, HookRegistration<T>>;\n\ninterface HookRegistry extends Map<HookName, HookLedger<HookName>> {\n\tget<K extends HookName>(key: K): HookLedger<K> | undefined;\n\tset<K extends HookName>(key: K, value: HookLedger<K>): this;\n}\n\n/**\n * Hook registry.\n *\n * Create, trigger and handle hooks.\n *\n */\nexport class Hooks {\n\t/** Swup instance this registry belongs to */\n\tprotected swup: Swup;\n\n\t/** Map of all registered hook handlers. */\n\tprotected registry: HookRegistry = new Map();\n\n\t// Can we deduplicate this somehow? Or make it error when not in sync with HookDefinitions?\n\t// https://stackoverflow.com/questions/53387838/how-to-ensure-an-arrays-values-the-keys-of-a-typescript-interface/53395649\n\tprotected readonly hooks: HookName[] = [\n\t\t'animation:out:start',\n\t\t'animation:out:await',\n\t\t'animation:out:end',\n\t\t'animation:in:start',\n\t\t'animation:in:await',\n\t\t'animation:in:end',\n\t\t'animation:skip',\n\t\t'cache:clear',\n\t\t'cache:set',\n\t\t'content:replace',\n\t\t'content:scroll',\n\t\t'enable',\n\t\t'disable',\n\t\t'fetch:request',\n\t\t'fetch:error',\n\t\t'fetch:timeout',\n\t\t'history:popstate',\n\t\t'link:click',\n\t\t'link:self',\n\t\t'link:anchor',\n\t\t'link:newtab',\n\t\t'page:load',\n\t\t'page:view',\n\t\t'scroll:top',\n\t\t'scroll:anchor',\n\t\t'visit:start',\n\t\t'visit:transition',\n\t\t'visit:abort',\n\t\t'visit:end'\n\t];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Create ledgers for all core hooks.\n\t */\n\tprotected init() {\n\t\tthis.hooks.forEach((hook) => this.create(hook));\n\t}\n\n\t/**\n\t * Create a new hook type.\n\t */\n\tcreate(hook: string) {\n\t\tif (!this.registry.has(hook as HookName)) {\n\t\t\tthis.registry.set(hook as HookName, new Map());\n\t\t}\n\t}\n\n\t/**\n\t * Check if a hook type exists.\n\t */\n\texists(hook: HookName): boolean {\n\t\treturn this.registry.has(hook);\n\t}\n\n\t/**\n\t * Get the ledger with all registrations for a hook.\n\t */\n\tprotected get<T extends HookName>(hook: T): HookLedger<T> | undefined {\n\t\tconst ledger = this.registry.get(hook);\n\t\tif (ledger) {\n\t\t\treturn ledger;\n\t\t}\n\t\tconsole.error(`Unknown hook '${hook}'`);\n\t}\n\n\t/**\n\t * Remove all handlers of all hooks.\n\t */\n\tclear() {\n\t\tthis.registry.forEach((ledger) => ledger.clear());\n\t}\n\n\t/**\n\t * Register a new hook handler.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Object to specify how and when the handler is executed\n\t *                Available options:\n\t *                - `once`: Only execute the handler once\n\t *                - `before`: Execute the handler before the default handler\n\t *                - `priority`: Specify the order in which the handlers are executed\n\t *                - `replace`: Replace the default handler with this handler\n\t * @returns A function to unregister the handler\n\t */\n\n\t// Overload: replacing default handler\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookDefaultHandler<T>, options: O & { replace: true }): HookUnregister; // prettier-ignore\n\t// Overload: passed in handler options\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookHandler<T>, options: O): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\ton<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\ton<T extends HookName, O extends HookOptions>(\n\t\thook: T,\n\t\thandler: O['replace'] extends true ? HookDefaultHandler<T> : HookHandler<T>,\n\t\toptions: Partial<O> = {}\n\t): HookUnregister {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\tconsole.warn(`Hook '${hook}' not found.`);\n\t\t\treturn () => {};\n\t\t}\n\n\t\tconst id = ledger.size + 1;\n\t\tconst registration: HookRegistration<T> = { ...options, id, hook, handler };\n\t\tledger.set(handler, registration);\n\n\t\treturn () => this.off(hook, handler);\n\t}\n\n\t/**\n\t * Register a new hook handler to run before the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { before: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tbefore<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, before: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to replace the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { replace: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute instead of the default handler\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\treplace<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookDefaultHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, replace: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to run once.\n\t * Shortcut for `hooks.on(hook, handler, { once: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tonce<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, once: true });\n\t}\n\n\t/**\n\t * Unregister a hook handler.\n\t * @param hook Name of the hook the handler is registered for\n\t * @param handler The handler function that was registered.\n\t *                If omitted, all handlers for the hook will be removed.\n\t */\n\t// Overload: unregister a specific handler\n\toff<T extends HookName>(hook: T, handler: HookHandler<T> | HookDefaultHandler<T>): void;\n\t// Overload: unregister all handlers\n\toff<T extends HookName>(hook: T): void;\n\t// Implementation\n\toff<T extends HookName>(hook: T, handler?: HookHandler<T> | HookDefaultHandler<T>): void {\n\t\tconst ledger = this.get(hook);\n\t\tif (ledger && handler) {\n\t\t\tconst deleted = ledger.delete(handler);\n\t\t\tif (!deleted) {\n\t\t\t\tconsole.warn(`Handler for hook '${hook}' not found.`);\n\t\t\t}\n\t\t} else if (ledger) {\n\t\t\tledger.clear();\n\t\t}\n\t}\n\n\t/**\n\t * Trigger a hook asynchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order and `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param visit The visit object this hook belongs to\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The resolved return value of the executed default handler\n\t */\n\t// Overload: default order of arguments\n\tasync call<T extends HookName>(hook: T, visit: Visit | undefined, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>>; // prettier-ignore\n\t// Overload: legacy order of arguments, with visit missing\n\tasync call<T extends HookName>(hook: T, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>>; // prettier-ignore\n\t// Implementation\n\tasync call<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T>,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>> {\n\t\tconst [visit, args, defaultHandler] = this.parseCallArgs(hook, arg1, arg2, arg3);\n\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tawait this.run(before, visit, args);\n\t\tconst [result] = await this.run(handler, visit, args);\n\t\tawait this.run(after, visit, args);\n\t\tthis.dispatchDomEvent(hook, visit, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Trigger a hook synchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order, but will **not** `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param visit The visit object this hook belongs to\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The (possibly unresolved) return value of the executed default handler\n\t */\n\t// Overload: default order of arguments\n\tcallSync<T extends HookName>(hook: T, visit: Visit | undefined, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): ReturnType<HookDefaultHandler<T>>; // prettier-ignore\n\t// Overload: legacy order of arguments, with visit missing\n\tcallSync<T extends HookName>(hook: T, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): ReturnType<HookDefaultHandler<T>>; // prettier-ignore\n\t// Implementation\n\tcallSync<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T>,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): ReturnType<HookDefaultHandler<T>> {\n\t\tconst [visit, args, defaultHandler] = this.parseCallArgs(hook, arg1, arg2, arg3);\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tthis.runSync(before, visit, args);\n\t\tconst [result] = this.runSync(handler, visit, args);\n\t\tthis.runSync(after, visit, args);\n\t\tthis.dispatchDomEvent(hook, visit, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Parse the call arguments for call() and callSync() to allow legacy argument order.\n\t */\n\tprotected parseCallArgs<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T> | undefined,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): [Visit | undefined, HookArguments<T>, HookDefaultHandler<T> | undefined] {\n\t\tconst isLegacyOrder =\n\t\t\t!(arg1 instanceof Visit) && (typeof arg1 === 'object' || typeof arg2 === 'function');\n\t\tif (isLegacyOrder) {\n\t\t\t// Legacy positioning: arguments in second or handler passed in third place\n\t\t\treturn [undefined, arg1 as HookArguments<T>, arg2 as HookDefaultHandler<T>];\n\t\t} else {\n\t\t\t// Default positioning: visit passed in as first argument\n\t\t\treturn [arg1, arg2 as HookArguments<T>, arg3];\n\t\t}\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, as `Promise`s that will be `await`ed.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], visit: Visit | undefined, args: HookArguments<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>[]>; // prettier-ignore\n\t// Overload:  running user handler: expect no specific type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T>[], visit: Visit | undefined, args: HookArguments<T>): Promise<unknown[]>; // prettier-ignore\n\t// Implementation\n\tprotected async run<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\tvisit: Visit | undefined,\n\t\targs: HookArguments<T>\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>> | unknown[]> {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tif (visit?.done) continue;\n\t\t\tif (once) this.off(hook, handler);\n\t\t\tconst result = await runAsPromise(handler, [\n\t\t\t\tvisit || this.swup.visit,\n\t\t\t\targs,\n\t\t\t\tdefaultHandler\n\t\t\t]);\n\t\t\tresults.push(result);\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, without `await`ing any returned `Promise`s.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], visit: Visit | undefined, args: HookArguments<T> ): ReturnType<HookDefaultHandler<T>>[]; // prettier-ignore\n\t// Overload: running user handler: expect no specific type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T>[], visit: Visit | undefined, args: HookArguments<T>): unknown[]; // prettier-ignore\n\t// Implementation\n\tprotected runSync<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\tvisit: Visit | undefined,\n\t\targs: HookArguments<T>\n\t): (ReturnType<HookDefaultHandler<T>> | unknown)[] {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tif (visit?.done) continue;\n\t\t\tif (once) this.off(hook, handler);\n\t\t\tconst result = (handler as HookDefaultHandler<T>)(visit || this.swup.visit, args, defaultHandler); // prettier-ignore\n\t\t\tresults.push(result);\n\t\t\tif (isPromise(result)) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Promise returned from handler for synchronous hook '${hook}'.` +\n\t\t\t\t\t\t`Swup will not wait for it to resolve.`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Get all registered handlers for a hook, sorted by priority and registration order.\n\t * @param hook Name of the hook\n\t * @param defaultHandler The optional default handler of this hook\n\t * @returns An object with the handlers sorted into `before` and `after` arrays,\n\t *          as well as a flag indicating if the original handler was replaced\n\t */\n\tprotected getHandlers<T extends HookName>(hook: T, defaultHandler?: HookDefaultHandler<T>) {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\treturn { found: false, before: [], handler: [], after: [], replaced: false };\n\t\t}\n\n\t\tconst registrations = Array.from(ledger.values());\n\n\t\t// Let TypeScript know that replaced handlers are default handlers by filtering to true\n\t\tconst def = (T: HookRegistration<T>): T is HookRegistration<T, HookDefaultHandler<T>> => true; // prettier-ignore\n\t\tconst sort = this.sortRegistrations;\n\n\t\t// Filter into before, after, and replace handlers\n\t\tconst before = registrations.filter(({ before, replace }) => before && !replace).sort(sort);\n\t\tconst replace = registrations.filter(({ replace }) => replace).filter(def).sort(sort); // prettier-ignore\n\t\tconst after = registrations.filter(({ before, replace }) => !before && !replace).sort(sort);\n\t\tconst replaced = replace.length > 0;\n\n\t\t// Define main handler registration\n\t\t// Created as HookRegistration[] array to allow passing it into hooks.run() directly\n\t\tlet handler: HookRegistration<T, HookDefaultHandler<T>>[] = [];\n\t\tif (defaultHandler) {\n\t\t\thandler = [{ id: 0, hook, handler: defaultHandler }];\n\t\t\tif (replaced) {\n\t\t\t\tconst index = replace.length - 1;\n\t\t\t\tconst replacingHandler = replace[index].handler;\n\t\t\t\tconst createDefaultHandler = (index: number): HookDefaultHandler<T> | undefined => {\n\t\t\t\t\tconst next = replace[index - 1];\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\treturn (visit, args) =>\n\t\t\t\t\t\t\tnext.handler(visit, args, createDefaultHandler(index - 1));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn defaultHandler;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst nestedDefaultHandler = createDefaultHandler(index);\n\t\t\t\thandler = [\n\t\t\t\t\t{ id: 0, hook, handler: replacingHandler, defaultHandler: nestedDefaultHandler }\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn { found: true, before, handler, after, replaced };\n\t}\n\n\t/**\n\t * Sort two hook registrations by priority and registration order.\n\t * @param a The registration object to compare\n\t * @param b The other registration object to compare with\n\t * @returns The sort direction\n\t */\n\tprotected sortRegistrations<T extends HookName>(\n\t\ta: HookRegistration<T>,\n\t\tb: HookRegistration<T>\n\t): number {\n\t\tconst priority = (a.priority ?? 0) - (b.priority ?? 0);\n\t\tconst id = a.id - b.id;\n\t\treturn priority || id || 0;\n\t}\n\n\t/**\n\t * Dispatch a custom event on the `document` for a hook. Prefixed with `swup:`\n\t * @param hook Name of the hook.\n\t */\n\tprotected dispatchDomEvent<T extends HookName>(\n\t\thook: T,\n\t\tvisit: Visit | undefined,\n\t\targs?: HookArguments<T>\n\t): void {\n\t\tif (visit?.done) return;\n\n\t\tconst detail: HookEventDetail = { hook, args, visit: visit || this.swup.visit };\n\t\tdocument.dispatchEvent(\n\t\t\tnew CustomEvent<HookEventDetail>(`swup:any`, { detail, bubbles: true })\n\t\t);\n\t\tdocument.dispatchEvent(\n\t\t\tnew CustomEvent<HookEventDetail>(`swup:${hook}`, { detail, bubbles: true })\n\t\t);\n\t}\n}\n","import { escapeCssIdentifier as escape, query } from '../utils.js';\n\n/**\n * Find the anchor element for a given hash.\n *\n * @param hash Hash with or without leading '#'\n * @returns The element, if found, or null.\n *\n * @see https://html.spec.whatwg.org/#find-a-potential-indicated-element\n */\nexport const getAnchorElement = (hash?: string): Element | null => {\n\tif (hash && hash.charAt(0) === '#') {\n\t\thash = hash.substring(1);\n\t}\n\n\tif (!hash) {\n\t\treturn null;\n\t}\n\n\tconst decoded = decodeURIComponent(hash);\n\tlet element =\n\t\tdocument.getElementById(hash) ||\n\t\tdocument.getElementById(decoded) ||\n\t\tquery(`a[name='${escape(hash)}']`) ||\n\t\tquery(`a[name='${escape(decoded)}']`);\n\n\tif (!element && hash === 'top') {\n\t\telement = document.body;\n\t}\n\n\treturn element;\n};\n","import { queryAll, toMs } from '../utils.js';\nimport type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\n\nconst TRANSITION = 'transition';\nconst ANIMATION = 'animation';\n\ntype AnimationTypes = typeof TRANSITION | typeof ANIMATION;\ntype AnimationProperties = 'Delay' | 'Duration';\ntype AnimationStyleKeys = `${AnimationTypes}${AnimationProperties}` | 'transitionProperty';\ntype AnimationStyleDeclarations = Pick<CSSStyleDeclaration, AnimationStyleKeys>;\n\nexport type AnimationDirection = 'in' | 'out';\n\n/**\n * Return a Promise that resolves when all CSS animations and transitions\n * are done on the page. Filters by selector or takes elements directly.\n */\nexport async function awaitAnimations(\n\tthis: Swup,\n\t{\n\t\telements,\n\t\tselector\n\t}: {\n\t\tselector: Options['animationSelector'];\n\t\telements?: NodeListOf<HTMLElement> | HTMLElement[];\n\t}\n): Promise<void> {\n\t// Allow usage of swup without animations: { animationSelector: false }\n\tif (selector === false && !elements) {\n\t\treturn;\n\t}\n\n\t// Allow passing in elements\n\tlet animatedElements: HTMLElement[] = [];\n\tif (elements) {\n\t\tanimatedElements = Array.from(elements);\n\t} else if (selector) {\n\t\tanimatedElements = queryAll(selector, document.body);\n\t\t// Warn if no elements match the selector, but keep things going\n\t\tif (!animatedElements.length) {\n\t\t\tconsole.warn(`[swup] No elements found matching animationSelector \\`${selector}\\``);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst awaitedAnimations = animatedElements.map((el) => awaitAnimationsOnElement(el));\n\tconst hasAnimations = awaitedAnimations.filter(Boolean).length > 0;\n\tif (!hasAnimations) {\n\t\tif (selector) {\n\t\t\tconsole.warn(\n\t\t\t\t`[swup] No CSS animation duration defined on elements matching \\`${selector}\\``\n\t\t\t);\n\t\t}\n\t\treturn;\n\t}\n\n\tawait Promise.all(awaitedAnimations);\n}\n\nfunction awaitAnimationsOnElement(element: Element): Promise<void> | false {\n\tconst { type, timeout, propCount } = getTransitionInfo(element);\n\n\t// Resolve immediately if no transition defined\n\tif (!type || !timeout) {\n\t\treturn false;\n\t}\n\n\treturn new Promise((resolve) => {\n\t\tconst endEvent = `${type}end`;\n\t\tconst startTime = performance.now();\n\t\tlet propsTransitioned = 0;\n\n\t\tconst end = () => {\n\t\t\telement.removeEventListener(endEvent, onEnd);\n\t\t\tresolve();\n\t\t};\n\n\t\tconst onEnd: EventListener = (event) => {\n\t\t\t// Skip transitions on child elements\n\t\t\tif (event.target !== element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isTransitionOrAnimationEvent(event)) {\n\t\t\t\tthrow new Error('Not a transition or animation event.');\n\t\t\t}\n\n\t\t\t// Skip transitions that happened before we started listening\n\t\t\tconst elapsedTime = (performance.now() - startTime) / 1000;\n\t\t\tif (elapsedTime < event.elapsedTime) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// End if all properties have transitioned\n\t\t\tif (++propsTransitioned >= propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t};\n\n\t\tsetTimeout(() => {\n\t\t\tif (propsTransitioned < propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t}, timeout + 1);\n\n\t\telement.addEventListener(endEvent, onEnd);\n\t});\n}\n\nexport function getTransitionInfo(element: Element, expectedType?: AnimationTypes) {\n\tconst styles = window.getComputedStyle(element) as AnimationStyleDeclarations;\n\n\tconst transitionDelays = getStyleProperties(styles, `${TRANSITION}Delay`);\n\tconst transitionDurations = getStyleProperties(styles, `${TRANSITION}Duration`);\n\tconst transitionTimeout = calculateTimeout(transitionDelays, transitionDurations);\n\tconst animationDelays = getStyleProperties(styles, `${ANIMATION}Delay`);\n\tconst animationDurations = getStyleProperties(styles, `${ANIMATION}Duration`);\n\tconst animationTimeout = calculateTimeout(animationDelays, animationDurations);\n\n\tlet type: AnimationTypes | null = null;\n\tlet timeout = 0;\n\tlet propCount = 0;\n\n\tif (expectedType === TRANSITION) {\n\t\tif (transitionTimeout > 0) {\n\t\t\ttype = TRANSITION;\n\t\t\ttimeout = transitionTimeout;\n\t\t\tpropCount = transitionDurations.length;\n\t\t}\n\t} else if (expectedType === ANIMATION) {\n\t\tif (animationTimeout > 0) {\n\t\t\ttype = ANIMATION;\n\t\t\ttimeout = animationTimeout;\n\t\t\tpropCount = animationDurations.length;\n\t\t}\n\t} else {\n\t\ttimeout = Math.max(transitionTimeout, animationTimeout);\n\t\ttype = timeout > 0 ? (transitionTimeout > animationTimeout ? TRANSITION : ANIMATION) : null;\n\t\tpropCount = type\n\t\t\t? type === TRANSITION\n\t\t\t\t? transitionDurations.length\n\t\t\t\t: animationDurations.length\n\t\t\t: 0;\n\t}\n\n\treturn {\n\t\ttype,\n\t\ttimeout,\n\t\tpropCount\n\t};\n}\n\nfunction isTransitionOrAnimationEvent(event: Event): event is TransitionEvent | AnimationEvent {\n\treturn [`${TRANSITION}end`, `${ANIMATION}end`].includes(event.type);\n}\n\nfunction getStyleProperties(styles: AnimationStyleDeclarations, key: AnimationStyleKeys): string[] {\n\treturn (styles[key] || '').split(', ');\n}\n\nfunction calculateTimeout(delays: string[], durations: string[]): number {\n\twhile (delays.length < durations.length) {\n\t\tdelays = delays.concat(delays);\n\t}\n\n\treturn Math.max(...durations.map((duration, i) => toMs(duration) + toMs(delays[i])));\n}\n","import type Swup from '../Swup.js';\nimport { FetchError, type FetchOptions, type PageData } from './fetchPage.js';\nimport { type VisitInitOptions, type Visit, VisitState } from './Visit.js';\nimport {\n\tcreateHistoryRecord,\n\tupdateHistoryRecord,\n\tgetCurrentUrl,\n\tLocation,\n\tclassify\n} from '../helpers.js';\n\nexport type HistoryAction = 'push' | 'replace';\nexport type HistoryDirection = 'forwards' | 'backwards';\nexport type NavigationToSelfAction = 'scroll' | 'navigate';\nexport type CacheControl = Partial<{ read: boolean; write: boolean }>;\n\n/** Define how to navigate to a page. */\ntype NavigationOptions = {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate?: boolean;\n\t/** Name of a custom animation to run. */\n\tanimation?: string;\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\thistory?: HistoryAction;\n\t/** Whether this visit should read from or write to the cache. */\n\tcache?: CacheControl;\n};\n\n/**\n * Navigate to a new URL.\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport function navigate(\n\tthis: Swup,\n\turl: string,\n\toptions: NavigationOptions & FetchOptions = {},\n\tinit: Omit<VisitInitOptions, 'to'> = {}\n) {\n\tif (typeof url !== 'string') {\n\t\tthrow new Error(`swup.navigate() requires a URL parameter`);\n\t}\n\n\t// Check if the visit should be ignored\n\tif (this.shouldIgnoreVisit(url, { el: init.el, event: init.event })) {\n\t\twindow.location.href = url;\n\t\treturn;\n\t}\n\n\tconst { url: to, hash } = Location.fromUrl(url);\n\n\tconst visit = this.createVisit({ ...init, to, hash });\n\tthis.performNavigation(visit, options);\n}\n\n/**\n * Start a visit to a new URL.\n *\n * Internal method that assumes the visit context has already been created.\n *\n * As a user, you should call `swup.navigate(url)` instead.\n *\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport async function performNavigation(\n\tthis: Swup,\n\tvisit: Visit,\n\toptions: NavigationOptions & FetchOptions = {}\n): Promise<void> {\n\tif (this.navigating) {\n\t\tif (this.visit.state >= VisitState.ENTERING) {\n\t\t\t// Currently navigating and content already loaded? Finish and queue\n\t\t\tvisit.state = VisitState.QUEUED;\n\t\t\tthis.onVisitEnd = () => this.performNavigation(visit, options);\n\t\t\treturn;\n\t\t} else {\n\t\t\t// Currently navigating and content not loaded? Abort running visit\n\t\t\tawait this.hooks.call('visit:abort', this.visit, undefined);\n\t\t\tthis.visit.state = VisitState.ABORTED;\n\t\t}\n\t}\n\n\tthis.navigating = true;\n\tthis.visit = visit;\n\n\tconst { el } = visit.trigger;\n\toptions.referrer = options.referrer || this.currentPageUrl;\n\n\tif (options.animate === false) {\n\t\tvisit.animation.animate = false;\n\t}\n\n\t// Clean up old animation classes\n\tif (!visit.animation.animate) {\n\t\tthis.classes.clear();\n\t}\n\n\t// Get history action from option or attribute on trigger element\n\tconst history = options.history || el?.getAttribute('data-swup-history') || undefined;\n\tif (history && ['push', 'replace'].includes(history)) {\n\t\tvisit.history.action = history as HistoryAction;\n\t}\n\n\t// Get custom animation name from option or attribute on trigger element\n\tconst animation = options.animation || el?.getAttribute('data-swup-animation') || undefined;\n\tif (animation) {\n\t\tvisit.animation.name = animation;\n\t}\n\n\t// Sanitize cache option\n\tif (typeof options.cache === 'object') {\n\t\tvisit.cache.read = options.cache.read ?? visit.cache.read;\n\t\tvisit.cache.write = options.cache.write ?? visit.cache.write;\n\t} else if (options.cache !== undefined) {\n\t\tvisit.cache = { read: !!options.cache, write: !!options.cache };\n\t}\n\t// Delete this so that window.fetch doesn't mis-interpret it\n\tdelete options.cache;\n\n\ttry {\n\t\tawait this.hooks.call('visit:start', visit, undefined);\n\t\tvisit.state = VisitState.STARTED;\n\n\t\t// Begin loading page\n\t\tconst page = this.hooks.call('page:load', visit, { options }, async (visit, args) => {\n\t\t\t// Read from cache\n\t\t\tlet cachedPage: PageData | undefined;\n\t\t\tif (visit.cache.read) {\n\t\t\t\tcachedPage = this.cache.get(visit.to.url);\n\t\t\t}\n\n\t\t\targs.page = cachedPage || (await this.fetchPage(visit.to.url, args.options));\n\t\t\targs.cache = !!cachedPage;\n\n\t\t\treturn args.page;\n\t\t});\n\n\t\t// When page loaded: mark visit as loaded, save html into visit object\n\t\tpage.then(({ html }) => {\n\t\t\tvisit.advance(VisitState.LOADED);\n\t\t\tvisit.to.html = html;\n\t\t});\n\n\t\t// Create/update history record if this is not a popstate call or leads to the same URL\n\t\tif (!visit.history.popstate) {\n\t\t\t// Add the hash directly from the trigger element\n\t\t\tconst newUrl = visit.to.url + visit.to.hash;\n\t\t\tif (visit.history.action === 'replace' || visit.to.url === this.currentPageUrl) {\n\t\t\t\tupdateHistoryRecord(newUrl);\n\t\t\t} else {\n\t\t\t\tthis.currentHistoryIndex++;\n\t\t\t\tcreateHistoryRecord(newUrl, { index: this.currentHistoryIndex });\n\t\t\t}\n\t\t}\n\n\t\tthis.currentPageUrl = getCurrentUrl();\n\n\t\t// Mark visit type with classes\n\t\tif (visit.history.popstate) {\n\t\t\tthis.classes.add('is-popstate');\n\t\t}\n\t\tif (visit.animation.name) {\n\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t}\n\n\t\t// Wait for page before starting to animate out?\n\t\tif (visit.animation.wait) {\n\t\t\tawait page;\n\t\t}\n\n\t\t// Check if failed/aborted in the meantime\n\t\tif (visit.done) return;\n\n\t\t// Perform the actual transition: animate and replace content\n\t\tawait this.hooks.call('visit:transition', visit, undefined, async () => {\n\t\t\t// No animation? Just await page and render\n\t\t\tif (!visit.animation.animate) {\n\t\t\t\tawait this.hooks.call('animation:skip', undefined);\n\t\t\t\tawait this.renderPage(visit, await page);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Animate page out, render page, animate page in\n\t\t\tvisit.advance(VisitState.LEAVING);\n\t\t\tawait this.animatePageOut(visit);\n\t\t\tif (visit.animation.native && document.startViewTransition) {\n\t\t\t\tawait document.startViewTransition(\n\t\t\t\t\tasync () => await this.renderPage(visit, await page)\n\t\t\t\t).finished;\n\t\t\t} else {\n\t\t\t\tawait this.renderPage(visit, await page);\n\t\t\t}\n\t\t\tawait this.animatePageIn(visit);\n\t\t});\n\n\t\t// Check if failed/aborted in the meantime\n\t\tif (visit.done) return;\n\n\t\t// Finalize visit\n\t\tawait this.hooks.call('visit:end', visit, undefined, () => this.classes.clear());\n\t\tvisit.state = VisitState.COMPLETED;\n\t\tthis.navigating = false;\n\n\t\t/** Run eventually queued function */\n\t\tif (this.onVisitEnd) {\n\t\t\tthis.onVisitEnd();\n\t\t\tthis.onVisitEnd = undefined;\n\t\t}\n\t} catch (error) {\n\t\t// Return early if error is undefined or signals an aborted request\n\t\tif (!error || (error as FetchError)?.aborted) {\n\t\t\tvisit.state = VisitState.ABORTED;\n\t\t\treturn;\n\t\t}\n\n\t\tvisit.state = VisitState.FAILED;\n\n\t\t// Log to console as we swallow almost all hook errors\n\t\tconsole.error(error);\n\n\t\t// Rewrite `skipPopStateHandling` to redirect manually when `history.go` is processed\n\t\tthis.options.skipPopStateHandling = () => {\n\t\t\twindow.location.href = visit.to.url + visit.to.hash;\n\t\t\treturn true;\n\t\t};\n\n\t\t// Go back to the actual page we're still at\n\t\twindow.history.go(-1);\n\t}\n}\n","import type Swup from '../Swup.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Perform the out/leave animation of the current page.\n * @returns Promise<void>\n */\nexport const animatePageOut = async function (this: Swup, visit: Visit) {\n\tawait this.hooks.call('animation:out:start', visit, undefined, () => {\n\t\tthis.classes.add('is-changing', 'is-animating', 'is-leaving');\n\t});\n\n\tawait this.hooks.call('animation:out:await', visit, { skip: false }, (visit, { skip }) => {\n\t\tif (skip) return;\n\t\treturn this.awaitAnimations({ selector: visit.animation.selector });\n\t});\n\n\tawait this.hooks.call('animation:out:end', visit, undefined);\n};\n","import type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\nimport { query, queryAll } from '../utils.js';\nimport type { PageData } from './fetchPage.js';\n\n/**\n * Perform the replacement of content after loading a page.\n *\n * It takes an object with the page data as returned from `fetchPage` and a list\n * of container selectors to replace.\n *\n * @returns Whether all containers were replaced.\n */\nexport const replaceContent = function (\n\tthis: Swup,\n\t{ html }: PageData,\n\t{ containers }: { containers: Options['containers'] } = this.options\n): boolean {\n\tconst incomingDocument = new DOMParser().parseFromString(html, 'text/html');\n\n\t// Update browser title\n\tconst title = incomingDocument.querySelector('title')?.innerText || '';\n\tdocument.title = title;\n\n\t// Save persisted elements\n\tconst persistedElements = queryAll('[data-swup-persist]:not([data-swup-persist=\"\"])');\n\n\t// Update content containers\n\tconst replaced = containers\n\t\t.map((selector) => {\n\t\t\tconst currentEl = document.querySelector(selector);\n\t\t\tconst incomingEl = incomingDocument.querySelector(selector);\n\t\t\tif (currentEl && incomingEl) {\n\t\t\t\tcurrentEl.replaceWith(incomingEl);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!currentEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in current document: ${selector}`);\n\t\t\t}\n\t\t\tif (!incomingEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in incoming document: ${selector}`);\n\t\t\t}\n\t\t\treturn false;\n\t\t})\n\t\t.filter(Boolean);\n\n\t// Restore persisted elements\n\tpersistedElements.forEach((existing) => {\n\t\tconst key = existing.getAttribute('data-swup-persist');\n\t\tconst replacement = query(`[data-swup-persist=\"${key}\"]`);\n\t\tif (replacement && replacement !== existing) {\n\t\t\treplacement.replaceWith(existing);\n\t\t}\n\t});\n\n\t// Return true if all containers were replaced\n\treturn replaced.length === containers.length;\n};\n","import type Swup from '../Swup.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Update the scroll position after page render.\n * @returns Promise<boolean>\n */\nexport const scrollToContent = function (this: Swup, visit: Visit): boolean {\n\tconst options: ScrollIntoViewOptions = { behavior: 'auto' };\n\tconst { target, reset } = visit.scroll;\n\tconst scrollTarget = target ?? visit.to.hash;\n\n\tlet scrolled = false;\n\n\tif (scrollTarget) {\n\t\tscrolled = this.hooks.callSync(\n\t\t\t'scroll:anchor',\n\t\t\tvisit,\n\t\t\t{ hash: scrollTarget, options },\n\t\t\t(visit, { hash, options }) => {\n\t\t\t\tconst anchor = this.getAnchorElement(hash);\n\t\t\t\tif (anchor) {\n\t\t\t\t\tanchor.scrollIntoView(options);\n\t\t\t\t}\n\t\t\t\treturn !!anchor;\n\t\t\t}\n\t\t);\n\t}\n\n\tif (reset && !scrolled) {\n\t\tscrolled = this.hooks.callSync('scroll:top', visit, { options }, (visit, { options }) => {\n\t\t\twindow.scrollTo({ top: 0, left: 0, ...options });\n\t\t\treturn true;\n\t\t});\n\t}\n\n\treturn scrolled;\n};\n","import type Swup from '../Swup.js';\nimport { nextTick } from '../utils.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Perform the in/enter animation of the next page.\n * @returns Promise<void>\n */\nexport const animatePageIn = async function (this: Swup, visit: Visit) {\n\t// Check if failed/aborted in the meantime\n\tif (visit.done) return;\n\n\tconst animation = this.hooks.call(\n\t\t'animation:in:await',\n\t\tvisit,\n\t\t{ skip: false },\n\t\t(visit, { skip }) => {\n\t\t\tif (skip) return;\n\t\t\treturn this.awaitAnimations({ selector: visit.animation.selector });\n\t\t}\n\t);\n\n\tawait nextTick();\n\n\tawait this.hooks.call('animation:in:start', visit, undefined, () => {\n\t\tthis.classes.remove('is-animating');\n\t});\n\n\tawait animation;\n\n\tawait this.hooks.call('animation:in:end', visit, undefined);\n};\n","import { updateHistoryRecord, getCurrentUrl, classify } from '../helpers.js';\nimport type Swup from '../Swup.js';\nimport type { PageData } from './fetchPage.js';\nimport { VisitState, type Visit } from './Visit.js';\n\n/**\n * Render the next page: replace the content and update scroll position.\n */\nexport const renderPage = async function (this: Swup, visit: Visit, page: PageData): Promise<void> {\n\t// Check if failed/aborted in the meantime\n\tif (visit.done) return;\n\n\tvisit.advance(VisitState.ENTERING);\n\n\tconst { url } = page;\n\n\tthis.classes.remove('is-leaving');\n\n\t// update state if the url was redirected\n\tif (!this.isSameResolvedUrl(getCurrentUrl(), url)) {\n\t\tupdateHistoryRecord(url);\n\t\tthis.currentPageUrl = getCurrentUrl();\n\t\tvisit.to.url = this.currentPageUrl;\n\t}\n\n\t// only add for animated page loads\n\tif (visit.animation.animate) {\n\t\tthis.classes.add('is-rendering');\n\t}\n\n\t// replace content: allow handlers and plugins to overwrite paga data and containers\n\tawait this.hooks.call('content:replace', visit, { page }, (visit, { page }) => {\n\t\tconst success = this.replaceContent(page, { containers: visit.containers });\n\t\tif (!success) {\n\t\t\tthrow new Error('[swup] Container mismatch, aborting');\n\t\t}\n\t\tif (visit.animation.animate) {\n\t\t\t// Make sure to add these classes to new containers as well\n\t\t\tthis.classes.add('is-changing', 'is-animating', 'is-rendering');\n\t\t\tif (visit.animation.name) {\n\t\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t\t}\n\t\t}\n\t});\n\n\t// scroll into view: either anchor or top of page\n\tawait this.hooks.call('content:scroll', visit, undefined, () => {\n\t\treturn this.scrollToContent(visit);\n\t});\n\n\tawait this.hooks.call('page:view', visit, { url: this.currentPageUrl, title: document.title });\n};\n","import type Swup from '../Swup.js';\n\nexport type Plugin = {\n\t/** Identify as a swup plugin */\n\tisSwupPlugin: true;\n\t/** Name of this plugin */\n\tname: string;\n\t/** Version of this plugin. Currently not in use, defined here for backward compatiblity. */\n\tversion?: string;\n\t/** The swup instance that mounted this plugin */\n\tswup?: Swup;\n\t/** Version requirements of this plugin. Example: `{ swup: '>=4' }` */\n\trequires?: Record<string, string | string[]>;\n\t/** Run on mount */\n\tmount: () => void;\n\t/** Run on unmount */\n\tunmount: () => void;\n\t_beforeMount?: () => void;\n\t_afterUnmount?: () => void;\n\t_checkRequirements?: () => boolean;\n};\n\nconst isSwupPlugin = (maybeInvalidPlugin: unknown): maybeInvalidPlugin is Plugin => {\n\t// @ts-ignore: this might be anything, object or no\n\treturn Boolean(maybeInvalidPlugin?.isSwupPlugin);\n};\n\n/** Install a plugin. */\nexport const use = function (this: Swup, plugin: unknown) {\n\tif (!isSwupPlugin(plugin)) {\n\t\tconsole.error('Not a swup plugin instance', plugin);\n\t\treturn;\n\t}\n\n\tplugin.swup = this;\n\tif (plugin._checkRequirements) {\n\t\tif (!plugin._checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\t}\n\tif (plugin._beforeMount) {\n\t\tplugin._beforeMount();\n\t}\n\tplugin.mount();\n\n\tthis.plugins.push(plugin);\n\n\treturn this.plugins;\n};\n\n/** Uninstall a plugin. */\nexport function unuse(this: Swup, pluginOrName: Plugin | string) {\n\tconst plugin = this.findPlugin(pluginOrName);\n\tif (!plugin) {\n\t\tconsole.error('No such plugin', plugin);\n\t\treturn;\n\t}\n\n\tplugin.unmount();\n\tif (plugin._afterUnmount) {\n\t\tplugin._afterUnmount();\n\t}\n\n\tthis.plugins = this.plugins.filter((p) => p !== plugin);\n\n\treturn this.plugins;\n}\n\n/** Find a plugin by name or reference. */\nexport function findPlugin(this: Swup, pluginOrName: Plugin | string) {\n\treturn this.plugins.find(\n\t\t(plugin) =>\n\t\t\tplugin === pluginOrName ||\n\t\t\tplugin.name === pluginOrName ||\n\t\t\tplugin.name === `Swup${String(pluginOrName)}`\n\t);\n}\n","import type Swup from '../Swup.js';\n\n/**\n * Utility function to validate and run the global option 'resolveUrl'\n * @param {string} url\n * @returns {string} the resolved url\n */\nexport function resolveUrl(this: Swup, url: string): string {\n\tif (typeof this.options.resolveUrl !== 'function') {\n\t\tconsole.warn(`[swup] options.resolveUrl expects a callback function.`);\n\t\treturn url;\n\t}\n\tconst result = this.options.resolveUrl(url);\n\tif (!result || typeof result !== 'string') {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a url`);\n\t\treturn url;\n\t}\n\tif (result.startsWith('//') || result.startsWith('http')) {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a relative url`);\n\t\treturn url;\n\t}\n\treturn result;\n}\n\n/**\n * Compares the resolved version of two paths and returns true if they are the same\n * @param {string} url1\n * @param {string} url2\n * @returns {boolean}\n */\nexport function isSameResolvedUrl(this: Swup, url1: string, url2: string): boolean {\n\treturn this.resolveUrl(url1) === this.resolveUrl(url2);\n}\n","import { type DelegateEvent } from 'delegate-it';\n\nimport version from './config/version.js';\n\nimport { delegateEvent, getCurrentUrl, Location, updateHistoryRecord } from './helpers.js';\nimport { type DelegateEventUnsubscribe } from './helpers/delegateEvent.js';\n\nimport { Cache } from './modules/Cache.js';\nimport { Classes } from './modules/Classes.js';\nimport { type Visit, createVisit } from './modules/Visit.js';\nimport { Hooks } from './modules/Hooks.js';\nimport { getAnchorElement } from './modules/getAnchorElement.js';\nimport { awaitAnimations } from './modules/awaitAnimations.js';\nimport { navigate, performNavigation, type NavigationToSelfAction } from './modules/navigate.js';\nimport { fetchPage } from './modules/fetchPage.js';\nimport { animatePageOut } from './modules/animatePageOut.js';\nimport { replaceContent } from './modules/replaceContent.js';\nimport { scrollToContent } from './modules/scrollToContent.js';\nimport { animatePageIn } from './modules/animatePageIn.js';\nimport { renderPage } from './modules/renderPage.js';\nimport { use, unuse, findPlugin, type Plugin } from './modules/plugins.js';\nimport { isSameResolvedUrl, resolveUrl } from './modules/resolveUrl.js';\nimport { nextTick } from './utils.js';\nimport { type HistoryState } from './helpers/history.js';\n\n/** Options for customizing swup's behavior. */\nexport type Options = {\n\t/** Whether history visits are animated. Default: `false` */\n\tanimateHistoryBrowsing: boolean;\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tanimationSelector: string | false;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tanimationScope: 'html' | 'containers';\n\t/** Enable in-memory page cache. Default: `true` */\n\tcache: boolean;\n\t/** Content containers to be replaced on page visits. Default: `['#swup']` */\n\tcontainers: string[];\n\t/** Callback for ignoring visits. Receives the element and event that triggered the visit. */\n\tignoreVisit: (url: string, { el, event }: { el?: Element; event?: Event }) => boolean;\n\t/** Selector for links that trigger visits. Default: `'a[href]'` */\n\tlinkSelector: string;\n\t/** How swup handles links to the same page. Default: `scroll` */\n\tlinkToSelf: NavigationToSelfAction;\n\t/** Enable native animations using the View Transitions API. */\n\tnative: boolean;\n\t/** Plugins to register on startup. */\n\tplugins: Plugin[];\n\t/** Custom headers sent along with fetch requests. */\n\trequestHeaders: Record<string, string>;\n\t/** Rewrite URLs before loading them. */\n\tresolveUrl: (url: string) => string;\n\t/** Callback for telling swup to ignore certain popstate events.  */\n\tskipPopStateHandling: (event: PopStateEvent) => boolean;\n\t/** Request timeout in milliseconds. */\n\ttimeout: number;\n};\n\nconst defaults: Options = {\n\tanimateHistoryBrowsing: false,\n\tanimationSelector: '[class*=\"transition-\"]',\n\tanimationScope: 'html',\n\tcache: true,\n\tcontainers: ['#swup'],\n\tignoreVisit: (url, { el } = {}) => !!el?.closest('[data-no-swup]'),\n\tlinkSelector: 'a[href]',\n\tlinkToSelf: 'scroll',\n\tnative: false,\n\tplugins: [],\n\tresolveUrl: (url) => url,\n\trequestHeaders: {\n\t\t'X-Requested-With': 'swup',\n\t\t'Accept': 'text/html, application/xhtml+xml'\n\t},\n\tskipPopStateHandling: (event) => (event.state as HistoryState)?.source !== 'swup',\n\ttimeout: 0\n};\n\n/** Swup page transition library. */\nexport default class Swup {\n\t/** Library version */\n\treadonly version: string = version;\n\t/** Options passed into the instance */\n\toptions: Options;\n\t/** Default options before merging user options */\n\treadonly defaults: Options = defaults;\n\t/** Registered plugin instances */\n\tplugins: Plugin[] = [];\n\t/** Data about the current visit */\n\tvisit: Visit;\n\t/** Cache instance */\n\treadonly cache: Cache;\n\t/** Hook registry */\n\treadonly hooks: Hooks;\n\t/** Animation class manager */\n\treadonly classes: Classes;\n\t/** URL of the currently visible page */\n\tcurrentPageUrl: string = getCurrentUrl();\n\t/** Index of the current history entry */\n\tprotected currentHistoryIndex: number;\n\t/** Delegated event subscription handle */\n\tprotected clickDelegate?: DelegateEventUnsubscribe;\n\t/** Navigation status */\n\tprotected navigating: boolean = false;\n\t/** Run anytime a visit ends */\n\tprotected onVisitEnd?: () => Promise<unknown>;\n\n\t/** Install a plugin */\n\tuse = use;\n\t/** Uninstall a plugin */\n\tunuse = unuse;\n\t/** Find a plugin by name or instance */\n\tfindPlugin = findPlugin;\n\n\t/** Log a message. Has no effect unless debug plugin is installed */\n\tlog: (message: string, context?: unknown) => void = () => {};\n\n\t/** Navigate to a new URL */\n\tnavigate = navigate;\n\t/** Actually perform a navigation */\n\tprotected performNavigation = performNavigation;\n\t/** Create a new context for this visit */\n\tprotected createVisit = createVisit;\n\t/** Register a delegated event listener */\n\tdelegateEvent = delegateEvent;\n\t/** Fetch a page from the server */\n\tfetchPage = fetchPage;\n\t/** Resolve when animations on the page finish */\n\tawaitAnimations = awaitAnimations;\n\tprotected renderPage = renderPage;\n\t/** Replace the content after page load */\n\treplaceContent = replaceContent;\n\tprotected animatePageIn = animatePageIn;\n\tprotected animatePageOut = animatePageOut;\n\tprotected scrollToContent = scrollToContent;\n\t/** Find the anchor element for a given hash */\n\tgetAnchorElement = getAnchorElement;\n\n\t/** Get the current page URL */\n\tgetCurrentUrl = getCurrentUrl;\n\t/** Resolve a URL to its final location */\n\tresolveUrl = resolveUrl;\n\t/** Check if two URLs resolve to the same location */\n\tprotected isSameResolvedUrl = isSameResolvedUrl;\n\n\tconstructor(options: Partial<Options> = {}) {\n\t\t// Merge defaults and options\n\t\tthis.options = { ...this.defaults, ...options };\n\n\t\tthis.handleLinkClick = this.handleLinkClick.bind(this);\n\t\tthis.handlePopState = this.handlePopState.bind(this);\n\n\t\tthis.cache = new Cache(this);\n\t\tthis.classes = new Classes(this);\n\t\tthis.hooks = new Hooks(this);\n\t\tthis.visit = this.createVisit({ to: '' });\n\n\t\tthis.currentHistoryIndex = (history.state as HistoryState)?.index ?? 1;\n\n\t\tif (!this.checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.enable();\n\t}\n\n\tprotected checkRequirements() {\n\t\tif (typeof Promise === 'undefined') {\n\t\t\tconsole.warn('Promise is not supported');\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/** Enable this instance, adding listeners and classnames. */\n\tasync enable() {\n\t\t// Add event listener\n\t\tconst { linkSelector } = this.options;\n\t\tthis.clickDelegate = this.delegateEvent(linkSelector, 'click', this.handleLinkClick);\n\n\t\twindow.addEventListener('popstate', this.handlePopState);\n\n\t\t// Set scroll restoration to manual if animating history visits\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\twindow.history.scrollRestoration = 'manual';\n\t\t}\n\n\t\t// Initial save to cache\n\t\tif (this.options.cache) {\n\t\t\t// Disabled to avoid caching modified dom state: logic moved to preload plugin\n\t\t\t// https://github.com/swup/swup/issues/475\n\t\t}\n\n\t\t// Sanitize/check native option\n\t\tthis.options.native = this.options.native && !!document.startViewTransition;\n\n\t\t// Mount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.use(plugin));\n\n\t\t// Create initial history record\n\t\tif ((history.state as HistoryState)?.source !== 'swup') {\n\t\t\tupdateHistoryRecord(null, { index: this.currentHistoryIndex });\n\t\t}\n\n\t\t// Give consumers a chance to hook into enable\n\t\tawait nextTick();\n\n\t\t// Trigger enable hook\n\t\tawait this.hooks.call('enable', undefined, undefined, () => {\n\t\t\tconst html = document.documentElement;\n\t\t\thtml.classList.add('swup-enabled');\n\t\t\thtml.classList.toggle('swup-native', this.options.native);\n\t\t});\n\t}\n\n\t/** Disable this instance, removing listeners and classnames. */\n\tasync destroy() {\n\t\t// remove delegated listener\n\t\tthis.clickDelegate!.destroy();\n\n\t\t// remove popstate listener\n\t\twindow.removeEventListener('popstate', this.handlePopState);\n\n\t\t// empty cache\n\t\tthis.cache.clear();\n\n\t\t// unmount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.unuse(plugin));\n\n\t\t// trigger disable hook\n\t\tawait this.hooks.call('disable', undefined, undefined, () => {\n\t\t\tconst html = document.documentElement;\n\t\t\thtml.classList.remove('swup-enabled');\n\t\t\thtml.classList.remove('swup-native');\n\t\t});\n\n\t\t// remove handlers\n\t\tthis.hooks.clear();\n\t}\n\n\t/** Determine if a visit should be ignored by swup, based on URL or trigger element. */\n\tshouldIgnoreVisit(href: string, { el, event }: { el?: Element; event?: Event } = {}) {\n\t\tconst { origin, url, hash } = Location.fromUrl(href);\n\n\t\t// Ignore if the new origin doesn't match the current one\n\t\tif (origin !== window.location.origin) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the link/form would open a new window (or none at all)\n\t\tif (el && this.triggerWillOpenNewWindow(el)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the visit should be ignored as per user options\n\t\tif (this.options.ignoreVisit(url + hash, { el, event })) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Finally, allow the visit\n\t\treturn false;\n\t}\n\n\tprotected handleLinkClick(event: DelegateEvent<MouseEvent>) {\n\t\tconst el = event.delegateTarget as HTMLAnchorElement;\n\t\tconst { href, url, hash } = Location.fromElement(el);\n\n\t\t// Exit early if the link should be ignored\n\t\tif (this.shouldIgnoreVisit(href, { el, event })) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore if swup is currently navigating towards the link's URL\n\t\tif (this.navigating && url === this.visit.to.url) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tconst visit = this.createVisit({ to: url, hash, el, event });\n\n\t\t// Exit early if control key pressed\n\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) {\n\t\t\tthis.hooks.callSync('link:newtab', visit, { href });\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if other than left mouse button\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hooks.callSync('link:click', visit, { el, event }, () => {\n\t\t\tconst from = visit.from.url ?? '';\n\n\t\t\tevent.preventDefault();\n\n\t\t\t// Handle links to the same page\n\t\t\tif (!url || url === from) {\n\t\t\t\tif (hash) {\n\t\t\t\t\t// With hash: scroll to anchor\n\t\t\t\t\tthis.hooks.callSync('link:anchor', visit, { hash }, () => {\n\t\t\t\t\t\tupdateHistoryRecord(url + hash);\n\t\t\t\t\t\tthis.scrollToContent(visit);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Without hash: scroll to top or load/reload page\n\t\t\t\t\tthis.hooks.callSync('link:self', visit, undefined, () => {\n\t\t\t\t\t\tif (this.options.linkToSelf === 'navigate') {\n\t\t\t\t\t\t\tthis.performNavigation(visit);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tupdateHistoryRecord(url);\n\t\t\t\t\t\t\tthis.scrollToContent(visit);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Exit early if the resolved path hasn't changed\n\t\t\tif (this.isSameResolvedUrl(url, from)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Finally, proceed with loading the page\n\t\t\tthis.performNavigation(visit);\n\t\t});\n\t}\n\n\tprotected handlePopState(event: PopStateEvent) {\n\t\tconst href: string = (event.state as HistoryState)?.url ?? location.href;\n\n\t\t// Exit early if this event should be ignored\n\t\tif (this.options.skipPopStateHandling(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if the resolved path hasn't changed\n\t\tif (this.isSameResolvedUrl(getCurrentUrl(), this.currentPageUrl)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { url, hash } = Location.fromUrl(href);\n\n\t\tconst visit = this.createVisit({ to: url, hash, event });\n\n\t\t// Mark as history visit\n\t\tvisit.history.popstate = true;\n\n\t\t// Determine direction of history visit\n\t\tconst index = (event.state as HistoryState)?.index ?? 0;\n\t\tif (index && index !== this.currentHistoryIndex) {\n\t\t\tconst direction = index - this.currentHistoryIndex > 0 ? 'forwards' : 'backwards';\n\t\t\tvisit.history.direction = direction;\n\t\t\tthis.currentHistoryIndex = index;\n\t\t}\n\n\t\t// Disable animation & scrolling for history visits\n\t\tvisit.animation.animate = false;\n\t\tvisit.scroll.reset = false;\n\t\tvisit.scroll.target = false;\n\n\t\t// Animated history visit: re-enable animation & scroll reset\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\tvisit.animation.animate = true;\n\t\t\tvisit.scroll.reset = true;\n\t\t}\n\n\t\tthis.hooks.callSync('history:popstate', visit, { event }, () => {\n\t\t\tthis.performNavigation(visit);\n\t\t});\n\t}\n\n\t/** Determine whether an element will open a new tab when clicking/activating. */\n\tprotected triggerWillOpenNewWindow(triggerEl: Element) {\n\t\tif (triggerEl.matches('[download], [target=\"_blank\"]')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n"],"names":["classify","text","fallback","String","toLowerCase","replace","getCurrentUrl","hash","location","pathname","search","createHistoryRecord","url","data","state","_extends","random","Math","source","history","pushState","updateHistoryRecord","replaceState","delegateEvent","selector","type","callback","options","controller","AbortController","signal","delegate","destroy","abort","Location","URL","constructor","base","document","baseURI","super","toString","Object","setPrototypeOf","this","prototype","fromElement","el","href","getAttribute","fromUrl","matchPath","path","match","error","Error","FetchError","message","details","status","aborted","timedOut","name","async","fetchPage","_options$timeout","visit","headers","requestHeaders","timeout","response","timeoutId","setTimeout","hooks","call","fetch","clearTimeout","responseUrl","html","finalUrl","page","cache","write","method","set","Cache","swup","pages","Map","size","all","copy","forEach","key","has","resolve","get","result","callSync","undefined","update","payload","delete","clear","prune","predicate","urlToResolve","resolveUrl","query","context","querySelector","queryAll","Array","from","querySelectorAll","nextTick","Promise","requestAnimationFrame","isPromise","obj","then","runAsPromise","func","args","reject","forceReflow","element","_element","body","offsetHeight","escapeCssIdentifier","ident","window","CSS","escape","toMs","s","Number","slice","Classes","swupClasses","selectors","scope","animation","containers","isArray","join","targets","trim","add","classes","target","classList","remove","className","split","filter","c","isSwupClass","some","startsWith","Visit","id","to","trigger","scroll","currentPageUrl","event","animate","wait","native","animationScope","animationSelector","read","action","popstate","direction","reset","advance","done","createVisit","Hooks","registry","init","hook","create","exists","ledger","console","on","handler","warn","registration","off","before","once","arg1","arg2","arg3","defaultHandler","parseCallArgs","after","getHandlers","run","dispatchDomEvent","runSync","registrations","results","push","found","replaced","values","sort","sortRegistrations","T","length","index","createDefaultHandler","next","a","b","_a$priority","_b$priority","priority","detail","dispatchEvent","CustomEvent","bubbles","getAnchorElement","charAt","substring","decoded","decodeURIComponent","getElementById","TRANSITION","ANIMATION","awaitAnimations","elements","animatedElements","awaitedAnimations","map","propCount","expectedType","styles","getComputedStyle","transitionDelays","getStyleProperties","transitionDurations","transitionTimeout","calculateTimeout","animationDelays","animationDurations","animationTimeout","max","getTransitionInfo","endEvent","startTime","performance","now","propsTransitioned","end","removeEventListener","onEnd","includes","isTransitionOrAnimationEvent","elapsedTime","addEventListener","awaitAnimationsOnElement","Boolean","delays","durations","concat","duration","i","navigate","shouldIgnoreVisit","performNavigation","navigating","onVisitEnd","referrer","_options$cache$read","_options$cache$write","cachedPage","newUrl","currentHistoryIndex","renderPage","animatePageOut","startViewTransition","finished","animatePageIn","skipPopStateHandling","go","skip","replaceContent","_incomingDocument$que","incomingDocument","DOMParser","parseFromString","title","innerText","persistedElements","currentEl","incomingEl","replaceWith","existing","replacement","scrollToContent","behavior","scrollTarget","scrolled","anchor","scrollIntoView","scrollTo","top","left","isSameResolvedUrl","use","plugin","maybeInvalidPlugin","isSwupPlugin","_checkRequirements","_beforeMount","mount","plugins","unuse","pluginOrName","findPlugin","unmount","_afterUnmount","p","find","url1","url2","defaults","animateHistoryBrowsing","ignoreVisit","closest","linkSelector","linkToSelf","Accept","_event$state","Swup","_history$state$index","_history$state","version","clickDelegate","log","handleLinkClick","bind","handlePopState","checkRequirements","enable","_history$state2","scrollRestoration","documentElement","toggle","origin","triggerWillOpenNewWindow","delegateTarget","preventDefault","metaKey","ctrlKey","shiftKey","altKey","button","_visit$from$url","_event$state$url","_event$state2","_event$state$index","_event$state3","triggerEl","matches"],"mappings":"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"}