{"version":3,"file":"Swup.module.js","sources":["../src/helpers/classify.ts","../src/helpers/getCurrentUrl.ts","../src/helpers/history.ts","../src/helpers/delegateEvent.ts","../src/helpers/Location.ts","../src/helpers/matchPath.ts","../src/modules/fetchPage.ts","../src/modules/Cache.ts","../src/utils/index.ts","../src/modules/Classes.ts","../src/modules/Visit.ts","../src/modules/Hooks.ts","../src/modules/getAnchorElement.ts","../src/modules/awaitAnimations.ts","../src/modules/navigate.ts","../src/modules/animatePageOut.ts","../src/modules/replaceContent.ts","../src/modules/scrollToContent.ts","../src/modules/animatePageIn.ts","../src/modules/renderPage.ts","../src/modules/plugins.ts","../src/modules/resolveUrl.ts","../src/Swup.ts"],"sourcesContent":["/** Turn a string into a slug by lowercasing and replacing whitespace. */\nexport const classify = (text: string, fallback?: string): string => {\n\tconst output = String(text)\n\t\t.toLowerCase()\n\t\t// .normalize('NFD') // split an accented letter in the base letter and the acent\n\t\t// .replace(/[\\u0300-\\u036f]/g, '') // remove all previously split accents\n\t\t.replace(/[\\s/_.]+/g, '-') // replace spaces and _./ with '-'\n\t\t.replace(/[^\\w-]+/g, '') // remove all non-word chars\n\t\t.replace(/--+/g, '-') // replace repeating '-' with single '-'\n\t\t.replace(/^-+|-+$/g, ''); // trim '-' from edges\n\treturn output || fallback || '';\n};\n","/** Get the current page URL: path name + query params. Optionally including hash. */\nexport const getCurrentUrl = ({ hash }: { hash?: boolean } = {}): string => {\n\treturn location.pathname + location.search + (hash ? location.hash : '');\n};\n","import { getCurrentUrl } from './getCurrentUrl.js';\n\nexport interface HistoryState {\n\turl: string;\n\tsource: 'swup';\n\trandom: number;\n\tindex?: number;\n\t[key: string]: unknown;\n}\n\ntype HistoryData = Record<string, unknown>;\n\n/** Create a new history record with a custom swup identifier. */\nexport const createHistoryRecord = (url: string, data: HistoryData = {}): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst state: HistoryState = {\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...data\n\t};\n\thistory.pushState(state, '', url);\n};\n\n/** Update the current history record with a custom swup identifier. */\nexport const updateHistoryRecord = (url: string | null = null, data: HistoryData = {}): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst currentState = (history.state as HistoryState) || {};\n\tconst state: HistoryState = {\n\t\t...currentState,\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...data\n\t};\n\thistory.replaceState(state, '', url);\n};\n","import delegate, {\n\ttype DelegateEventHandler,\n\ttype DelegateOptions,\n\ttype EventType\n} from 'delegate-it';\nimport type { ParseSelector } from 'typed-query-selector/parser.js';\n\nexport type DelegateEventUnsubscribe = {\n\tdestroy: () => void;\n};\n\n/** Register a delegated event listener. */\nexport const delegateEvent = <\n\tSelector extends string,\n\tTElement extends Element = ParseSelector<Selector, HTMLElement>,\n\tTEvent extends EventType = EventType\n>(\n\tselector: Selector,\n\ttype: TEvent,\n\tcallback: DelegateEventHandler<GlobalEventHandlersEventMap[TEvent], TElement>,\n\toptions?: DelegateOptions\n): DelegateEventUnsubscribe => {\n\tconst controller = new AbortController();\n\toptions = { ...options, signal: controller.signal };\n\tdelegate<Selector, TElement, TEvent>(selector, type, callback, options);\n\treturn { destroy: () => controller.abort() };\n};\n","/**\n * A helper for creating a Location from either an element\n * or a URL object/string\n *\n */\nexport class Location extends URL {\n\tconstructor(url: URL | string, base: string = document.baseURI) {\n\t\tsuper(url.toString(), base);\n\t\t// Fix Safari bug with extending native classes\n\t\tObject.setPrototypeOf(this, Location.prototype);\n\t}\n\n\t/**\n\t * The full local path including query params.\n\t */\n\tget url(): string {\n\t\treturn this.pathname + this.search;\n\t}\n\n\t/**\n\t * Instantiate a Location from an element's href attribute\n\t * @param el\n\t * @returns new Location instance\n\t */\n\tstatic fromElement(el: Element): Location {\n\t\tconst href = el.getAttribute('href') || el.getAttribute('xlink:href') || '';\n\t\treturn new Location(href);\n\t}\n\n\t/**\n\t * Instantiate a Location from a URL object or string\n\t * @param url\n\t * @returns new Location instance\n\t */\n\tstatic fromUrl(url: URL | string): Location {\n\t\treturn new Location(url);\n\t}\n}\n","import { match } from 'path-to-regexp';\n\nimport type {\n\tPath,\n\tParseOptions,\n\tTokensToRegexpOptions,\n\tRegexpToFunctionOptions,\n\tMatchFunction\n} from 'path-to-regexp';\n\nexport { type Path };\n\n/** Create a match function from a path pattern that checks if a URLs matches it. */\nexport const matchPath = <P extends object = object>(\n\tpath: Path,\n\toptions?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions\n): MatchFunction<P> => {\n\ttry {\n\t\treturn match<P>(path, options);\n\t} catch (error) {\n\t\tthrow new Error(`[swup] Error parsing path \"${String(path)}\":\\n${String(error)}`);\n\t}\n};\n","import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\nimport type { Visit } from './Visit.js';\n\n/** A page object as used by swup and its cache. */\nexport interface PageData {\n\t/** The URL of the page */\n\turl: string;\n\t/** The complete HTML response received from the server */\n\thtml: string;\n}\n\n/** Define how a page is fetched. */\nexport interface FetchOptions extends Omit<RequestInit, 'cache'> {\n\t/** The request method. */\n\tmethod?: 'GET' | 'POST';\n\t/** The body of the request: raw string, form data object or URL params. */\n\tbody?: string | FormData | URLSearchParams;\n\t/** The request timeout in milliseconds. */\n\ttimeout?: number;\n\t/** Optional visit object with additional context. @internal */\n\tvisit?: Visit;\n}\n\nexport class FetchError extends Error {\n\turl: string;\n\tstatus?: number;\n\taborted: boolean;\n\ttimedOut: boolean;\n\tconstructor(\n\t\tmessage: string,\n\t\tdetails: { url: string; status?: number; aborted?: boolean; timedOut?: boolean }\n\t) {\n\t\tsuper(message);\n\t\tthis.name = 'FetchError';\n\t\tthis.url = details.url;\n\t\tthis.status = details.status;\n\t\tthis.aborted = details.aborted || false;\n\t\tthis.timedOut = details.timedOut || false;\n\t}\n}\n\n/**\n * Fetch a page from the server, return it and cache it.\n */\nexport async function fetchPage(\n\tthis: Swup,\n\turl: URL | string,\n\toptions: FetchOptions = {}\n): Promise<PageData> {\n\turl = Location.fromUrl(url).url;\n\n\tconst { visit = this.visit } = options;\n\tconst headers = { ...this.options.requestHeaders, ...options.headers };\n\tconst timeout = options.timeout ?? this.options.timeout;\n\tconst controller = new AbortController();\n\tconst { signal } = controller;\n\toptions = { ...options, headers, signal };\n\n\tlet timedOut = false;\n\tlet timeoutId: ReturnType<typeof setTimeout> | null = null;\n\tif (timeout && timeout > 0) {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimedOut = true;\n\t\t\tcontroller.abort('timeout');\n\t\t}, timeout);\n\t}\n\n\t// Allow hooking before this and returning a custom response-like object (e.g. custom fetch implementation)\n\tlet response: Response;\n\ttry {\n\t\tresponse = await this.hooks.call(\n\t\t\t'fetch:request',\n\t\t\tvisit,\n\t\t\t{ url, options },\n\t\t\t(visit, { url, options }) => fetch(url, options)\n\t\t);\n\t\tif (timeoutId) {\n\t\t\tclearTimeout(timeoutId);\n\t\t}\n\t} catch (error) {\n\t\tif (timedOut) {\n\t\t\tthis.hooks.call('fetch:timeout', visit, { url });\n\t\t\tthrow new FetchError(`Request timed out: ${url}`, { url, timedOut });\n\t\t}\n\t\tif ((error as Error)?.name === 'AbortError' || signal.aborted) {\n\t\t\tthrow new FetchError(`Request aborted: ${url}`, { url, aborted: true });\n\t\t}\n\t\tthrow error;\n\t}\n\n\tconst { status, url: responseUrl } = response;\n\tconst html = await response.text();\n\n\tif (status === 500) {\n\t\tthis.hooks.call('fetch:error', visit, { status, response, url: responseUrl });\n\t\tthrow new FetchError(`Server error: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\tif (!html) {\n\t\tthrow new FetchError(`Empty response: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\t// Resolve real url after potential redirect\n\tconst { url: finalUrl } = Location.fromUrl(responseUrl);\n\tconst page = { url: finalUrl, html };\n\n\t// Write to cache for safe methods and non-redirects\n\tif (visit.cache.write && (!options.method || options.method === 'GET') && url === finalUrl) {\n\t\tthis.cache.set(page.url, page);\n\t}\n\n\treturn page;\n}\n","import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\nimport { type PageData } from './fetchPage.js';\n\nexport interface CacheData extends PageData {}\n\n/**\n * In-memory page cache.\n */\nexport class Cache {\n\t/** Swup instance this cache belongs to */\n\tprotected swup: Swup;\n\n\t/** Cached pages, indexed by URL */\n\tprotected pages: Map<string, CacheData> = new Map();\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\t/** Number of cached pages in memory. */\n\tget size(): number {\n\t\treturn this.pages.size;\n\t}\n\n\t/** All cached pages. */\n\tget all() {\n\t\tconst copy = new Map();\n\t\tthis.pages.forEach((page, key) => {\n\t\t\tcopy.set(key, { ...page });\n\t\t});\n\t\treturn copy;\n\t}\n\n\t/** Check if the given URL has been cached. */\n\thas(url: string): boolean {\n\t\treturn this.pages.has(this.resolve(url));\n\t}\n\n\t/** Return a shallow copy of the cached page object if available. */\n\tget(url: string): CacheData | undefined {\n\t\tconst result = this.pages.get(this.resolve(url));\n\t\tif (!result) return result;\n\t\treturn { ...result };\n\t}\n\n\t/** Create a cache record for the specified URL. */\n\tset(url: string, page: CacheData) {\n\t\turl = this.resolve(url);\n\t\tpage = { ...page, url };\n\t\tthis.pages.set(url, page);\n\t\tthis.swup.hooks.callSync('cache:set', undefined, { page });\n\t}\n\n\t/** Update a cache record, overwriting or adding custom data. */\n\tupdate(url: string, payload: object) {\n\t\turl = this.resolve(url);\n\t\tconst page = { ...this.get(url), ...payload, url } as CacheData;\n\t\tthis.pages.set(url, page);\n\t}\n\n\t/** Delete a cache record. */\n\tdelete(url: string): void {\n\t\tthis.pages.delete(this.resolve(url));\n\t}\n\n\t/** Empty the cache. */\n\tclear(): void {\n\t\tthis.pages.clear();\n\t\tthis.swup.hooks.callSync('cache:clear', undefined, undefined);\n\t}\n\n\t/** Remove all cache entries that return true for a given predicate function.  */\n\tprune(predicate: (url: string, page: CacheData) => boolean): void {\n\t\tthis.pages.forEach((page, url) => {\n\t\t\tif (predicate(url, page)) {\n\t\t\t\tthis.delete(url);\n\t\t\t}\n\t\t});\n\t}\n\n\t/** Resolve URLs by making them local and letting swup resolve them. */\n\tprotected resolve(urlToResolve: string): string {\n\t\tconst { url } = Location.fromUrl(urlToResolve);\n\t\treturn this.swup.resolveUrl(url);\n\t}\n}\n","/** Find an element by selector. */\nexport const query = (selector: string, context: Document | Element = document) => {\n\treturn context.querySelector<HTMLElement>(selector);\n};\n\n/** Find a set of elements by selector. */\nexport const queryAll = (\n\tselector: string,\n\tcontext: Document | Element = document\n): HTMLElement[] => {\n\treturn Array.from(context.querySelectorAll(selector));\n};\n\n/** Return a Promise that resolves after the next event loop. */\nexport const nextTick = (): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\trequestAnimationFrame(() => {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t});\n};\n\n/** Check if an object is a Promise or a Thenable */\nexport function isPromise<T>(obj: unknown): obj is PromiseLike<T> {\n\treturn (\n\t\t!!obj &&\n\t\t(typeof obj === 'object' || typeof obj === 'function') &&\n\t\ttypeof (obj as Record<string, unknown>).then === 'function'\n\t);\n}\n\n/** Call a function as a Promise. Resolves with the returned Promsise or immediately. */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nexport function runAsPromise(func: Function, args: unknown[] = []): Promise<unknown> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst result: unknown = func(...args);\n\t\tif (isPromise(result)) {\n\t\t\tresult.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n}\n\n/**\n * Force a layout reflow, e.g. after adding classnames\n * @returns The offset height, just here so it doesn't get optimized away by the JS engine\n * @see https://stackoverflow.com/a/21665117/3759615\n */\nexport function forceReflow(element?: HTMLElement) {\n\telement = element || document.body;\n\treturn element?.offsetHeight;\n}\n\n/** Escape a string with special chars to not break CSS selectors. */\nexport const escapeCssIdentifier = (ident: string) => {\n\t// @ts-ignore this is for support check, so it's correct that TS complains\n\tif (window.CSS && window.CSS.escape) {\n\t\treturn CSS.escape(ident);\n\t}\n\treturn ident;\n};\n\n/** Fix for Chrome below v61 formatting CSS floats with comma in some locales. */\nexport const toMs = (s: string) => {\n\treturn Number(s.slice(0, -1).replace(',', '.')) * 1000;\n};\n","import type Swup from '../Swup.js';\nimport { queryAll } from '../utils.js';\n\nexport class Classes {\n\tprotected swup: Swup;\n\tprotected swupClasses = [\n\t\t'to-',\n\t\t'is-changing',\n\t\t'is-rendering',\n\t\t'is-popstate',\n\t\t'is-animating',\n\t\t'is-leaving'\n\t];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\tprotected get selectors(): string[] {\n\t\tconst { scope } = this.swup.visit.animation;\n\t\tif (scope === 'containers') return this.swup.visit.containers;\n\t\tif (scope === 'html') return ['html'];\n\t\tif (Array.isArray(scope)) return scope;\n\t\treturn [];\n\t}\n\n\tprotected get selector(): string {\n\t\treturn this.selectors.join(',');\n\t}\n\n\tprotected get targets(): HTMLElement[] {\n\t\tif (!this.selector.trim()) return [];\n\t\treturn queryAll(this.selector);\n\t}\n\n\tadd(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.add(...classes));\n\t}\n\n\tremove(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.remove(...classes));\n\t}\n\n\tclear(): void {\n\t\tthis.targets.forEach((target) => {\n\t\t\tconst remove = target.className.split(' ').filter((c) => this.isSwupClass(c));\n\t\t\ttarget.classList.remove(...remove);\n\t\t});\n\t}\n\n\tprotected isSwupClass(className: string): boolean {\n\t\treturn this.swupClasses.some((c) => className.startsWith(c));\n\t}\n}\n","import type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\nimport type { HistoryAction, HistoryDirection } from './navigate.js';\n\n/** See below for the class Visit {} definition */\n// export interface Visit {}\n\nexport interface VisitFrom {\n\t/** The URL of the previous page */\n\turl: string;\n}\n\nexport interface VisitTo {\n\t/** The URL of the next page */\n\turl: string;\n\t/** The hash of the next page */\n\thash?: string;\n\t/** The HTML content of the next page */\n\thtml?: string;\n}\n\nexport interface VisitAnimation {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate: boolean;\n\t/** Whether to wait for the next page to load before starting the animation. Default: `false` */\n\twait: boolean;\n\t/** Name of a custom animation to run. */\n\tname?: string;\n\t/** Whether this animation uses the native browser ViewTransition API. Default: `false` */\n\tnative: boolean;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tscope: 'html' | 'containers' | string[];\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tselector: Options['animationSelector'];\n}\n\nexport interface VisitScroll {\n\t/** Whether to reset the scroll position after the visit. Default: `true` */\n\treset: boolean;\n\t/** Anchor element to scroll to on the next page. */\n\ttarget?: string | false;\n}\n\nexport interface VisitTrigger {\n\t/** DOM element that triggered this visit. */\n\tel?: Element;\n\t/** DOM event that triggered this visit. */\n\tevent?: Event;\n}\n\nexport interface VisitCache {\n\t/** Whether this visit will try to load the requested page from cache. */\n\tread: boolean;\n\t/** Whether this visit will save the loaded page in cache. */\n\twrite: boolean;\n}\n\nexport interface VisitHistory {\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\taction: HistoryAction;\n\t/** Whether this visit was triggered by a browser history navigation. */\n\tpopstate: boolean;\n\t/** The direction of travel in case of a browser history navigation: backward or forward. */\n\tdirection: HistoryDirection | undefined;\n}\n\nexport interface VisitInitOptions {\n\tto: string;\n\tfrom?: string;\n\thash?: string;\n\tel?: Element;\n\tevent?: Event;\n}\n\n/** @internal */\nexport const VisitState = {\n\tCREATED: 1,\n\tQUEUED: 2,\n\tSTARTED: 3,\n\tLEAVING: 4,\n\tLOADED: 5,\n\tENTERING: 6,\n\tCOMPLETED: 7,\n\tABORTED: 8,\n\tFAILED: 9\n} as const;\n\n/** @internal */\nexport type VisitState = (typeof VisitState)[keyof typeof VisitState];\n\n/** An object holding details about the current visit. */\nexport class Visit {\n\t/** A unique ID to identify this visit */\n\tid: number;\n\t/** The current state of this visit @internal */\n\tstate: VisitState;\n\t/** The previous page, about to leave */\n\tfrom: VisitFrom;\n\t/** The next page, about to enter */\n\tto: VisitTo;\n\t/** The content containers, about to be replaced */\n\tcontainers: Options['containers'];\n\t/** Information about animated page transitions */\n\tanimation: VisitAnimation;\n\t/** What triggered this visit */\n\ttrigger: VisitTrigger;\n\t/** Cache behavior for this visit */\n\tcache: VisitCache;\n\t/** Browser history behavior on this visit */\n\thistory: VisitHistory;\n\t/** Scroll behavior on this visit */\n\tscroll: VisitScroll;\n\n\tconstructor(swup: Swup, options: VisitInitOptions) {\n\t\tconst { to, from = swup.currentPageUrl, hash, el, event } = options;\n\n\t\tthis.id = Math.random();\n\t\tthis.state = VisitState.CREATED;\n\t\tthis.from = { url: from };\n\t\tthis.to = { url: to, hash };\n\t\tthis.containers = swup.options.containers;\n\t\tthis.animation = {\n\t\t\tanimate: true,\n\t\t\twait: false,\n\t\t\tname: undefined,\n\t\t\tnative: swup.options.native,\n\t\t\tscope: swup.options.animationScope,\n\t\t\tselector: swup.options.animationSelector\n\t\t};\n\t\tthis.trigger = { el, event };\n\t\tthis.cache = {\n\t\t\tread: swup.options.cache,\n\t\t\twrite: swup.options.cache\n\t\t};\n\t\tthis.history = {\n\t\t\taction: 'push',\n\t\t\tpopstate: false,\n\t\t\tdirection: undefined\n\t\t};\n\t\tthis.scroll = {\n\t\t\treset: true,\n\t\t\ttarget: undefined\n\t\t};\n\t}\n\t/** @internal */\n\tadvance(state: VisitState) {\n\t\tif (this.state < state) {\n\t\t\tthis.state = state;\n\t\t}\n\t}\n\n\t/** @internal */\n\tabort() {\n\t\tthis.state = VisitState.ABORTED;\n\t}\n\n\t/** Is this visit done, i.e. completed, failed, or aborted? */\n\tget done(): boolean {\n\t\treturn this.state >= VisitState.COMPLETED;\n\t}\n}\n\n/** Create a new visit object. */\nexport function createVisit(this: Swup, options: VisitInitOptions): Visit {\n\treturn new Visit(this, options);\n}\n","import type { DelegateEvent } from 'delegate-it';\n\nimport type Swup from '../Swup.js';\nimport { isPromise, runAsPromise } from '../utils.js';\nimport { Visit } from './Visit.js';\nimport type { FetchOptions, PageData } from './fetchPage.js';\n\nexport interface HookDefinitions {\n\t'animation:out:start': undefined;\n\t'animation:out:await': { skip: boolean };\n\t'animation:out:end': undefined;\n\t'animation:in:start': undefined;\n\t'animation:in:await': { skip: boolean };\n\t'animation:in:end': undefined;\n\t'animation:skip': undefined;\n\t'cache:clear': undefined;\n\t'cache:set': { page: PageData };\n\t'content:replace': { page: PageData };\n\t'content:scroll': undefined;\n\t'enable': undefined;\n\t'disable': undefined;\n\t'fetch:request': { url: string; options: FetchOptions };\n\t'fetch:error': { url: string; status: number; response: Response };\n\t'fetch:timeout': { url: string };\n\t'history:popstate': { event: PopStateEvent };\n\t'link:click': { el: HTMLAnchorElement; event: DelegateEvent<MouseEvent> };\n\t'link:self': undefined;\n\t'link:anchor': { hash: string };\n\t'link:newtab': { href: string };\n\t'page:load': { page?: PageData; cache?: boolean; options: FetchOptions };\n\t'page:view': { url: string; title: string };\n\t'scroll:top': { options: ScrollIntoViewOptions };\n\t'scroll:anchor': { hash: string; options: ScrollIntoViewOptions };\n\t'visit:start': undefined;\n\t'visit:transition': undefined;\n\t'visit:abort': undefined;\n\t'visit:end': undefined;\n}\n\nexport interface HookReturnValues {\n\t'content:scroll': Promise<boolean> | boolean;\n\t'fetch:request': Promise<Response>;\n\t'page:load': Promise<PageData>;\n\t'scroll:top': boolean;\n\t'scroll:anchor': boolean;\n}\n\nexport type HookArguments<T extends HookName> = HookDefinitions[T];\n\nexport type HookName = keyof HookDefinitions;\n\n/** A generic hook handler. */\nexport type HookHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>\n) => Promise<unknown> | unknown;\n\n/** A default hook handler with an expected return type. */\nexport type HookDefaultHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>,\n\t/** Default handler to be executed. Available if replacing an internal hook handler. */\n\tdefaultHandler?: HookDefaultHandler<T>\n) => T extends keyof HookReturnValues ? HookReturnValues[T] : Promise<unknown> | unknown;\n\nexport type Handlers = {\n\t[K in HookName]: HookHandler<K>[];\n};\n\n/** Unregister a previously registered hook handler. */\nexport type HookUnregister = () => void;\n\n/** Define when and how a hook handler is executed. */\nexport type HookOptions = {\n\t/** Execute the hook once, then remove the handler */\n\tonce?: boolean;\n\t/** Execute the hook before the internal default handler */\n\tbefore?: boolean;\n\t/** Set a priority for when to execute this hook. Lower numbers execute first. Default: `0` */\n\tpriority?: number;\n\t/** Replace the internal default handler with this hook handler */\n\treplace?: boolean;\n};\n\nexport type HookRegistration<\n\tT extends HookName,\n\tH extends HookHandler<T> | HookDefaultHandler<T> = HookHandler<T>\n> = {\n\tid: number;\n\thook: T;\n\thandler: H;\n\tdefaultHandler?: HookDefaultHandler<T>;\n} & HookOptions;\n\ntype HookEventDetail = {\n\thook: HookName;\n\targs: unknown;\n\tvisit: Visit;\n};\n\nexport type HookEvent = CustomEvent<HookEventDetail>;\n\ntype HookLedger<T extends HookName> = Map<HookHandler<T>, HookRegistration<T>>;\n\ninterface HookRegistry extends Map<HookName, HookLedger<HookName>> {\n\tget<K extends HookName>(key: K): HookLedger<K> | undefined;\n\tset<K extends HookName>(key: K, value: HookLedger<K>): this;\n}\n\n/**\n * Hook registry.\n *\n * Create, trigger and handle hooks.\n *\n */\nexport class Hooks {\n\t/** Swup instance this registry belongs to */\n\tprotected swup: Swup;\n\n\t/** Map of all registered hook handlers. */\n\tprotected registry: HookRegistry = new Map();\n\n\t// Can we deduplicate this somehow? Or make it error when not in sync with HookDefinitions?\n\t// https://stackoverflow.com/questions/53387838/how-to-ensure-an-arrays-values-the-keys-of-a-typescript-interface/53395649\n\tprotected readonly hooks: HookName[] = [\n\t\t'animation:out:start',\n\t\t'animation:out:await',\n\t\t'animation:out:end',\n\t\t'animation:in:start',\n\t\t'animation:in:await',\n\t\t'animation:in:end',\n\t\t'animation:skip',\n\t\t'cache:clear',\n\t\t'cache:set',\n\t\t'content:replace',\n\t\t'content:scroll',\n\t\t'enable',\n\t\t'disable',\n\t\t'fetch:request',\n\t\t'fetch:error',\n\t\t'fetch:timeout',\n\t\t'history:popstate',\n\t\t'link:click',\n\t\t'link:self',\n\t\t'link:anchor',\n\t\t'link:newtab',\n\t\t'page:load',\n\t\t'page:view',\n\t\t'scroll:top',\n\t\t'scroll:anchor',\n\t\t'visit:start',\n\t\t'visit:transition',\n\t\t'visit:abort',\n\t\t'visit:end'\n\t];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Create ledgers for all core hooks.\n\t */\n\tprotected init() {\n\t\tthis.hooks.forEach((hook) => this.create(hook));\n\t}\n\n\t/**\n\t * Create a new hook type.\n\t */\n\tcreate(hook: string) {\n\t\tif (!this.registry.has(hook as HookName)) {\n\t\t\tthis.registry.set(hook as HookName, new Map());\n\t\t}\n\t}\n\n\t/**\n\t * Check if a hook type exists.\n\t */\n\texists(hook: HookName): boolean {\n\t\treturn this.registry.has(hook);\n\t}\n\n\t/**\n\t * Get the ledger with all registrations for a hook.\n\t */\n\tprotected get<T extends HookName>(hook: T): HookLedger<T> | undefined {\n\t\tconst ledger = this.registry.get(hook);\n\t\tif (ledger) {\n\t\t\treturn ledger;\n\t\t}\n\t\tconsole.error(`Unknown hook '${hook}'`);\n\t}\n\n\t/**\n\t * Remove all handlers of all hooks.\n\t */\n\tclear() {\n\t\tthis.registry.forEach((ledger) => ledger.clear());\n\t}\n\n\t/**\n\t * Register a new hook handler.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Object to specify how and when the handler is executed\n\t *                Available options:\n\t *                - `once`: Only execute the handler once\n\t *                - `before`: Execute the handler before the default handler\n\t *                - `priority`: Specify the order in which the handlers are executed\n\t *                - `replace`: Replace the default handler with this handler\n\t * @returns A function to unregister the handler\n\t */\n\n\t// Overload: replacing default handler\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookDefaultHandler<T>, options: O & { replace: true }): HookUnregister; // prettier-ignore\n\t// Overload: passed in handler options\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookHandler<T>, options: O): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\ton<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\ton<T extends HookName, O extends HookOptions>(\n\t\thook: T,\n\t\thandler: O['replace'] extends true ? HookDefaultHandler<T> : HookHandler<T>,\n\t\toptions: Partial<O> = {}\n\t): HookUnregister {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\tconsole.warn(`Hook '${hook}' not found.`);\n\t\t\treturn () => {};\n\t\t}\n\n\t\tconst id = ledger.size + 1;\n\t\tconst registration: HookRegistration<T> = { ...options, id, hook, handler };\n\t\tledger.set(handler, registration);\n\n\t\treturn () => this.off(hook, handler);\n\t}\n\n\t/**\n\t * Register a new hook handler to run before the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { before: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tbefore<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, before: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to replace the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { replace: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute instead of the default handler\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\treplace<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookDefaultHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, replace: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to run once.\n\t * Shortcut for `hooks.on(hook, handler, { once: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tonce<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, once: true });\n\t}\n\n\t/**\n\t * Unregister a hook handler.\n\t * @param hook Name of the hook the handler is registered for\n\t * @param handler The handler function that was registered.\n\t *                If omitted, all handlers for the hook will be removed.\n\t */\n\t// Overload: unregister a specific handler\n\toff<T extends HookName>(hook: T, handler: HookHandler<T> | HookDefaultHandler<T>): void;\n\t// Overload: unregister all handlers\n\toff<T extends HookName>(hook: T): void;\n\t// Implementation\n\toff<T extends HookName>(hook: T, handler?: HookHandler<T> | HookDefaultHandler<T>): void {\n\t\tconst ledger = this.get(hook);\n\t\tif (ledger && handler) {\n\t\t\tconst deleted = ledger.delete(handler);\n\t\t\tif (!deleted) {\n\t\t\t\tconsole.warn(`Handler for hook '${hook}' not found.`);\n\t\t\t}\n\t\t} else if (ledger) {\n\t\t\tledger.clear();\n\t\t}\n\t}\n\n\t/**\n\t * Trigger a hook asynchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order and `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param visit The visit object this hook belongs to\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The resolved return value of the executed default handler\n\t */\n\t// Overload: default order of arguments\n\tasync call<T extends HookName>(hook: T, visit: Visit | undefined, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>>; // prettier-ignore\n\t// Overload: legacy order of arguments, with visit missing\n\tasync call<T extends HookName>(hook: T, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>>; // prettier-ignore\n\t// Implementation\n\tasync call<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T>,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>> {\n\t\tconst [visit, args, defaultHandler] = this.parseCallArgs(hook, arg1, arg2, arg3);\n\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tawait this.run(before, visit, args);\n\t\tconst [result] = await this.run(handler, visit, args);\n\t\tawait this.run(after, visit, args);\n\t\tthis.dispatchDomEvent(hook, visit, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Trigger a hook synchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order, but will **not** `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param visit The visit object this hook belongs to\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The (possibly unresolved) return value of the executed default handler\n\t */\n\t// Overload: default order of arguments\n\tcallSync<T extends HookName>(hook: T, visit: Visit | undefined, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): ReturnType<HookDefaultHandler<T>>; // prettier-ignore\n\t// Overload: legacy order of arguments, with visit missing\n\tcallSync<T extends HookName>(hook: T, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): ReturnType<HookDefaultHandler<T>>; // prettier-ignore\n\t// Implementation\n\tcallSync<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T>,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): ReturnType<HookDefaultHandler<T>> {\n\t\tconst [visit, args, defaultHandler] = this.parseCallArgs(hook, arg1, arg2, arg3);\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tthis.runSync(before, visit, args);\n\t\tconst [result] = this.runSync(handler, visit, args);\n\t\tthis.runSync(after, visit, args);\n\t\tthis.dispatchDomEvent(hook, visit, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Parse the call arguments for call() and callSync() to allow legacy argument order.\n\t */\n\tprotected parseCallArgs<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T> | undefined,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): [Visit | undefined, HookArguments<T>, HookDefaultHandler<T> | undefined] {\n\t\tconst isLegacyOrder =\n\t\t\t!(arg1 instanceof Visit) && (typeof arg1 === 'object' || typeof arg2 === 'function');\n\t\tif (isLegacyOrder) {\n\t\t\t// Legacy positioning: arguments in second or handler passed in third place\n\t\t\treturn [undefined, arg1 as HookArguments<T>, arg2 as HookDefaultHandler<T>];\n\t\t} else {\n\t\t\t// Default positioning: visit passed in as first argument\n\t\t\treturn [arg1, arg2 as HookArguments<T>, arg3];\n\t\t}\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, as `Promise`s that will be `await`ed.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], visit: Visit | undefined, args: HookArguments<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>[]>; // prettier-ignore\n\t// Overload:  running user handler: expect no specific type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T>[], visit: Visit | undefined, args: HookArguments<T>): Promise<unknown[]>; // prettier-ignore\n\t// Implementation\n\tprotected async run<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\tvisit: Visit | undefined,\n\t\targs: HookArguments<T>\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>> | unknown[]> {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tif (visit?.done) continue;\n\t\t\tif (once) this.off(hook, handler);\n\t\t\tconst result = await runAsPromise(handler, [\n\t\t\t\tvisit || this.swup.visit,\n\t\t\t\targs,\n\t\t\t\tdefaultHandler\n\t\t\t]);\n\t\t\tresults.push(result);\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, without `await`ing any returned `Promise`s.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], visit: Visit | undefined, args: HookArguments<T> ): ReturnType<HookDefaultHandler<T>>[]; // prettier-ignore\n\t// Overload: running user handler: expect no specific type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T>[], visit: Visit | undefined, args: HookArguments<T>): unknown[]; // prettier-ignore\n\t// Implementation\n\tprotected runSync<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\tvisit: Visit | undefined,\n\t\targs: HookArguments<T>\n\t): (ReturnType<HookDefaultHandler<T>> | unknown)[] {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tif (visit?.done) continue;\n\t\t\tif (once) this.off(hook, handler);\n\t\t\tconst result = (handler as HookDefaultHandler<T>)(visit || this.swup.visit, args, defaultHandler); // prettier-ignore\n\t\t\tresults.push(result);\n\t\t\tif (isPromise(result)) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Promise returned from handler for synchronous hook '${hook}'.` +\n\t\t\t\t\t\t`Swup will not wait for it to resolve.`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Get all registered handlers for a hook, sorted by priority and registration order.\n\t * @param hook Name of the hook\n\t * @param defaultHandler The optional default handler of this hook\n\t * @returns An object with the handlers sorted into `before` and `after` arrays,\n\t *          as well as a flag indicating if the original handler was replaced\n\t */\n\tprotected getHandlers<T extends HookName>(hook: T, defaultHandler?: HookDefaultHandler<T>) {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\treturn { found: false, before: [], handler: [], after: [], replaced: false };\n\t\t}\n\n\t\tconst registrations = Array.from(ledger.values());\n\n\t\t// Let TypeScript know that replaced handlers are default handlers by filtering to true\n\t\tconst def = (T: HookRegistration<T>): T is HookRegistration<T, HookDefaultHandler<T>> => true; // prettier-ignore\n\t\tconst sort = this.sortRegistrations;\n\n\t\t// Filter into before, after, and replace handlers\n\t\tconst before = registrations.filter(({ before, replace }) => before && !replace).sort(sort);\n\t\tconst replace = registrations.filter(({ replace }) => replace).filter(def).sort(sort); // prettier-ignore\n\t\tconst after = registrations.filter(({ before, replace }) => !before && !replace).sort(sort);\n\t\tconst replaced = replace.length > 0;\n\n\t\t// Define main handler registration\n\t\t// Created as HookRegistration[] array to allow passing it into hooks.run() directly\n\t\tlet handler: HookRegistration<T, HookDefaultHandler<T>>[] = [];\n\t\tif (defaultHandler) {\n\t\t\thandler = [{ id: 0, hook, handler: defaultHandler }];\n\t\t\tif (replaced) {\n\t\t\t\tconst index = replace.length - 1;\n\t\t\t\tconst replacingHandler = replace[index].handler;\n\t\t\t\tconst createDefaultHandler = (index: number): HookDefaultHandler<T> | undefined => {\n\t\t\t\t\tconst next = replace[index - 1];\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\treturn (visit, args) =>\n\t\t\t\t\t\t\tnext.handler(visit, args, createDefaultHandler(index - 1));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn defaultHandler;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst nestedDefaultHandler = createDefaultHandler(index);\n\t\t\t\thandler = [\n\t\t\t\t\t{ id: 0, hook, handler: replacingHandler, defaultHandler: nestedDefaultHandler }\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn { found: true, before, handler, after, replaced };\n\t}\n\n\t/**\n\t * Sort two hook registrations by priority and registration order.\n\t * @param a The registration object to compare\n\t * @param b The other registration object to compare with\n\t * @returns The sort direction\n\t */\n\tprotected sortRegistrations<T extends HookName>(\n\t\ta: HookRegistration<T>,\n\t\tb: HookRegistration<T>\n\t): number {\n\t\tconst priority = (a.priority ?? 0) - (b.priority ?? 0);\n\t\tconst id = a.id - b.id;\n\t\treturn priority || id || 0;\n\t}\n\n\t/**\n\t * Dispatch a custom event on the `document` for a hook. Prefixed with `swup:`\n\t * @param hook Name of the hook.\n\t */\n\tprotected dispatchDomEvent<T extends HookName>(\n\t\thook: T,\n\t\tvisit: Visit | undefined,\n\t\targs?: HookArguments<T>\n\t): void {\n\t\tif (visit?.done) return;\n\n\t\tconst detail: HookEventDetail = { hook, args, visit: visit || this.swup.visit };\n\t\tdocument.dispatchEvent(\n\t\t\tnew CustomEvent<HookEventDetail>(`swup:any`, { detail, bubbles: true })\n\t\t);\n\t\tdocument.dispatchEvent(\n\t\t\tnew CustomEvent<HookEventDetail>(`swup:${hook}`, { detail, bubbles: true })\n\t\t);\n\t}\n}\n","import { escapeCssIdentifier as escape, query } from '../utils.js';\n\n/**\n * Find the anchor element for a given hash.\n *\n * @param hash Hash with or without leading '#'\n * @returns The element, if found, or null.\n *\n * @see https://html.spec.whatwg.org/#find-a-potential-indicated-element\n */\nexport const getAnchorElement = (hash?: string): Element | null => {\n\tif (hash && hash.charAt(0) === '#') {\n\t\thash = hash.substring(1);\n\t}\n\n\tif (!hash) {\n\t\treturn null;\n\t}\n\n\tconst decoded = decodeURIComponent(hash);\n\tlet element =\n\t\tdocument.getElementById(hash) ||\n\t\tdocument.getElementById(decoded) ||\n\t\tquery(`a[name='${escape(hash)}']`) ||\n\t\tquery(`a[name='${escape(decoded)}']`);\n\n\tif (!element && hash === 'top') {\n\t\telement = document.body;\n\t}\n\n\treturn element;\n};\n","import { queryAll, toMs } from '../utils.js';\nimport type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\n\nconst TRANSITION = 'transition';\nconst ANIMATION = 'animation';\n\ntype AnimationTypes = typeof TRANSITION | typeof ANIMATION;\ntype AnimationProperties = 'Delay' | 'Duration';\ntype AnimationStyleKeys = `${AnimationTypes}${AnimationProperties}` | 'transitionProperty';\ntype AnimationStyleDeclarations = Pick<CSSStyleDeclaration, AnimationStyleKeys>;\n\nexport type AnimationDirection = 'in' | 'out';\n\n/**\n * Return a Promise that resolves when all CSS animations and transitions\n * are done on the page. Filters by selector or takes elements directly.\n */\nexport async function awaitAnimations(\n\tthis: Swup,\n\t{\n\t\telements,\n\t\tselector\n\t}: {\n\t\tselector: Options['animationSelector'];\n\t\telements?: NodeListOf<HTMLElement> | HTMLElement[];\n\t}\n): Promise<void> {\n\t// Allow usage of swup without animations: { animationSelector: false }\n\tif (selector === false && !elements) {\n\t\treturn;\n\t}\n\n\t// Allow passing in elements\n\tlet animatedElements: HTMLElement[] = [];\n\tif (elements) {\n\t\tanimatedElements = Array.from(elements);\n\t} else if (selector) {\n\t\tanimatedElements = queryAll(selector, document.body);\n\t\t// Warn if no elements match the selector, but keep things going\n\t\tif (!animatedElements.length) {\n\t\t\tconsole.warn(`[swup] No elements found matching animationSelector \\`${selector}\\``);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst awaitedAnimations = animatedElements.map((el) => awaitAnimationsOnElement(el));\n\tconst hasAnimations = awaitedAnimations.filter(Boolean).length > 0;\n\tif (!hasAnimations) {\n\t\tif (selector) {\n\t\t\tconsole.warn(\n\t\t\t\t`[swup] No CSS animation duration defined on elements matching \\`${selector}\\``\n\t\t\t);\n\t\t}\n\t\treturn;\n\t}\n\n\tawait Promise.all(awaitedAnimations);\n}\n\nfunction awaitAnimationsOnElement(element: Element): Promise<void> | false {\n\tconst { type, timeout, propCount } = getTransitionInfo(element);\n\n\t// Resolve immediately if no transition defined\n\tif (!type || !timeout) {\n\t\treturn false;\n\t}\n\n\treturn new Promise((resolve) => {\n\t\tconst endEvent = `${type}end`;\n\t\tconst startTime = performance.now();\n\t\tlet propsTransitioned = 0;\n\n\t\tconst end = () => {\n\t\t\telement.removeEventListener(endEvent, onEnd);\n\t\t\tresolve();\n\t\t};\n\n\t\tconst onEnd: EventListener = (event) => {\n\t\t\t// Skip transitions on child elements\n\t\t\tif (event.target !== element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isTransitionOrAnimationEvent(event)) {\n\t\t\t\tthrow new Error('Not a transition or animation event.');\n\t\t\t}\n\n\t\t\t// Skip transitions that happened before we started listening\n\t\t\tconst elapsedTime = (performance.now() - startTime) / 1000;\n\t\t\tif (elapsedTime < event.elapsedTime) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// End if all properties have transitioned\n\t\t\tif (++propsTransitioned >= propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t};\n\n\t\tsetTimeout(() => {\n\t\t\tif (propsTransitioned < propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t}, timeout + 1);\n\n\t\telement.addEventListener(endEvent, onEnd);\n\t});\n}\n\nexport function getTransitionInfo(element: Element, expectedType?: AnimationTypes) {\n\tconst styles = window.getComputedStyle(element) as AnimationStyleDeclarations;\n\n\tconst transitionDelays = getStyleProperties(styles, `${TRANSITION}Delay`);\n\tconst transitionDurations = getStyleProperties(styles, `${TRANSITION}Duration`);\n\tconst transitionTimeout = calculateTimeout(transitionDelays, transitionDurations);\n\tconst animationDelays = getStyleProperties(styles, `${ANIMATION}Delay`);\n\tconst animationDurations = getStyleProperties(styles, `${ANIMATION}Duration`);\n\tconst animationTimeout = calculateTimeout(animationDelays, animationDurations);\n\n\tlet type: AnimationTypes | null = null;\n\tlet timeout = 0;\n\tlet propCount = 0;\n\n\tif (expectedType === TRANSITION) {\n\t\tif (transitionTimeout > 0) {\n\t\t\ttype = TRANSITION;\n\t\t\ttimeout = transitionTimeout;\n\t\t\tpropCount = transitionDurations.length;\n\t\t}\n\t} else if (expectedType === ANIMATION) {\n\t\tif (animationTimeout > 0) {\n\t\t\ttype = ANIMATION;\n\t\t\ttimeout = animationTimeout;\n\t\t\tpropCount = animationDurations.length;\n\t\t}\n\t} else {\n\t\ttimeout = Math.max(transitionTimeout, animationTimeout);\n\t\ttype = timeout > 0 ? (transitionTimeout > animationTimeout ? TRANSITION : ANIMATION) : null;\n\t\tpropCount = type\n\t\t\t? type === TRANSITION\n\t\t\t\t? transitionDurations.length\n\t\t\t\t: animationDurations.length\n\t\t\t: 0;\n\t}\n\n\treturn {\n\t\ttype,\n\t\ttimeout,\n\t\tpropCount\n\t};\n}\n\nfunction isTransitionOrAnimationEvent(event: Event): event is TransitionEvent | AnimationEvent {\n\treturn [`${TRANSITION}end`, `${ANIMATION}end`].includes(event.type);\n}\n\nfunction getStyleProperties(styles: AnimationStyleDeclarations, key: AnimationStyleKeys): string[] {\n\treturn (styles[key] || '').split(', ');\n}\n\nfunction calculateTimeout(delays: string[], durations: string[]): number {\n\twhile (delays.length < durations.length) {\n\t\tdelays = delays.concat(delays);\n\t}\n\n\treturn Math.max(...durations.map((duration, i) => toMs(duration) + toMs(delays[i])));\n}\n","import type Swup from '../Swup.js';\nimport { FetchError, type FetchOptions, type PageData } from './fetchPage.js';\nimport { type VisitInitOptions, type Visit, VisitState } from './Visit.js';\nimport {\n\tcreateHistoryRecord,\n\tupdateHistoryRecord,\n\tgetCurrentUrl,\n\tLocation,\n\tclassify\n} from '../helpers.js';\n\nexport type HistoryAction = 'push' | 'replace';\nexport type HistoryDirection = 'forwards' | 'backwards';\nexport type NavigationToSelfAction = 'scroll' | 'navigate';\nexport type CacheControl = Partial<{ read: boolean; write: boolean }>;\n\n/** Define how to navigate to a page. */\ntype NavigationOptions = {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate?: boolean;\n\t/** Name of a custom animation to run. */\n\tanimation?: string;\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\thistory?: HistoryAction;\n\t/** Whether this visit should read from or write to the cache. */\n\tcache?: CacheControl;\n};\n\n/**\n * Navigate to a new URL.\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport function navigate(\n\tthis: Swup,\n\turl: string,\n\toptions: NavigationOptions & FetchOptions = {},\n\tinit: Omit<VisitInitOptions, 'to'> = {}\n) {\n\tif (typeof url !== 'string') {\n\t\tthrow new Error(`swup.navigate() requires a URL parameter`);\n\t}\n\n\t// Check if the visit should be ignored\n\tif (this.shouldIgnoreVisit(url, { el: init.el, event: init.event })) {\n\t\twindow.location.href = url;\n\t\treturn;\n\t}\n\n\tconst { url: to, hash } = Location.fromUrl(url);\n\n\tconst visit = this.createVisit({ ...init, to, hash });\n\tthis.performNavigation(visit, options);\n}\n\n/**\n * Start a visit to a new URL.\n *\n * Internal method that assumes the visit context has already been created.\n *\n * As a user, you should call `swup.navigate(url)` instead.\n *\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport async function performNavigation(\n\tthis: Swup,\n\tvisit: Visit,\n\toptions: NavigationOptions & FetchOptions = {}\n): Promise<void> {\n\tif (this.navigating) {\n\t\tif (this.visit.state >= VisitState.ENTERING) {\n\t\t\t// Currently navigating and content already loaded? Finish and queue\n\t\t\tvisit.state = VisitState.QUEUED;\n\t\t\tthis.onVisitEnd = () => this.performNavigation(visit, options);\n\t\t\treturn;\n\t\t} else {\n\t\t\t// Currently navigating and content not loaded? Abort running visit\n\t\t\tawait this.hooks.call('visit:abort', this.visit, undefined);\n\t\t\tthis.visit.state = VisitState.ABORTED;\n\t\t}\n\t}\n\n\tthis.navigating = true;\n\tthis.visit = visit;\n\n\tconst { el } = visit.trigger;\n\toptions.referrer = options.referrer || this.currentPageUrl;\n\n\tif (options.animate === false) {\n\t\tvisit.animation.animate = false;\n\t}\n\n\t// Clean up old animation classes\n\tif (!visit.animation.animate) {\n\t\tthis.classes.clear();\n\t}\n\n\t// Get history action from option or attribute on trigger element\n\tconst history = options.history || el?.getAttribute('data-swup-history') || undefined;\n\tif (history && ['push', 'replace'].includes(history)) {\n\t\tvisit.history.action = history as HistoryAction;\n\t}\n\n\t// Get custom animation name from option or attribute on trigger element\n\tconst animation = options.animation || el?.getAttribute('data-swup-animation') || undefined;\n\tif (animation) {\n\t\tvisit.animation.name = animation;\n\t}\n\n\t// Sanitize cache option\n\tif (typeof options.cache === 'object') {\n\t\tvisit.cache.read = options.cache.read ?? visit.cache.read;\n\t\tvisit.cache.write = options.cache.write ?? visit.cache.write;\n\t} else if (options.cache !== undefined) {\n\t\tvisit.cache = { read: !!options.cache, write: !!options.cache };\n\t}\n\t// Delete this so that window.fetch doesn't mis-interpret it\n\tdelete options.cache;\n\n\ttry {\n\t\tawait this.hooks.call('visit:start', visit, undefined);\n\t\tvisit.state = VisitState.STARTED;\n\n\t\t// Begin loading page\n\t\tconst page = this.hooks.call('page:load', visit, { options }, async (visit, args) => {\n\t\t\t// Read from cache\n\t\t\tlet cachedPage: PageData | undefined;\n\t\t\tif (visit.cache.read) {\n\t\t\t\tcachedPage = this.cache.get(visit.to.url);\n\t\t\t}\n\n\t\t\targs.page = cachedPage || (await this.fetchPage(visit.to.url, args.options));\n\t\t\targs.cache = !!cachedPage;\n\n\t\t\treturn args.page;\n\t\t});\n\n\t\t// When page loaded: mark visit as loaded, save html into visit object\n\t\tpage.then(({ html }) => {\n\t\t\tvisit.advance(VisitState.LOADED);\n\t\t\tvisit.to.html = html;\n\t\t});\n\n\t\t// Create/update history record if this is not a popstate call or leads to the same URL\n\t\tif (!visit.history.popstate) {\n\t\t\t// Add the hash directly from the trigger element\n\t\t\tconst newUrl = visit.to.url + visit.to.hash;\n\t\t\tif (visit.history.action === 'replace' || visit.to.url === this.currentPageUrl) {\n\t\t\t\tupdateHistoryRecord(newUrl);\n\t\t\t} else {\n\t\t\t\tthis.currentHistoryIndex++;\n\t\t\t\tcreateHistoryRecord(newUrl, { index: this.currentHistoryIndex });\n\t\t\t}\n\t\t}\n\n\t\tthis.currentPageUrl = getCurrentUrl();\n\n\t\t// Mark visit type with classes\n\t\tif (visit.history.popstate) {\n\t\t\tthis.classes.add('is-popstate');\n\t\t}\n\t\tif (visit.animation.name) {\n\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t}\n\n\t\t// Wait for page before starting to animate out?\n\t\tif (visit.animation.wait) {\n\t\t\tawait page;\n\t\t}\n\n\t\t// Check if failed/aborted in the meantime\n\t\tif (visit.done) return;\n\n\t\t// Perform the actual transition: animate and replace content\n\t\tawait this.hooks.call('visit:transition', visit, undefined, async () => {\n\t\t\t// No animation? Just await page and render\n\t\t\tif (!visit.animation.animate) {\n\t\t\t\tawait this.hooks.call('animation:skip', undefined);\n\t\t\t\tawait this.renderPage(visit, await page);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Animate page out, render page, animate page in\n\t\t\tvisit.advance(VisitState.LEAVING);\n\t\t\tawait this.animatePageOut(visit);\n\t\t\tif (visit.animation.native && document.startViewTransition) {\n\t\t\t\tawait document.startViewTransition(\n\t\t\t\t\tasync () => await this.renderPage(visit, await page)\n\t\t\t\t).finished;\n\t\t\t} else {\n\t\t\t\tawait this.renderPage(visit, await page);\n\t\t\t}\n\t\t\tawait this.animatePageIn(visit);\n\t\t});\n\n\t\t// Check if failed/aborted in the meantime\n\t\tif (visit.done) return;\n\n\t\t// Finalize visit\n\t\tawait this.hooks.call('visit:end', visit, undefined, () => this.classes.clear());\n\t\tvisit.state = VisitState.COMPLETED;\n\t\tthis.navigating = false;\n\n\t\t/** Run eventually queued function */\n\t\tif (this.onVisitEnd) {\n\t\t\tthis.onVisitEnd();\n\t\t\tthis.onVisitEnd = undefined;\n\t\t}\n\t} catch (error) {\n\t\t// Return early if error is undefined or signals an aborted request\n\t\tif (!error || (error as FetchError)?.aborted) {\n\t\t\tvisit.state = VisitState.ABORTED;\n\t\t\treturn;\n\t\t}\n\n\t\tvisit.state = VisitState.FAILED;\n\n\t\t// Log to console as we swallow almost all hook errors\n\t\tconsole.error(error);\n\n\t\t// Rewrite `skipPopStateHandling` to redirect manually when `history.go` is processed\n\t\tthis.options.skipPopStateHandling = () => {\n\t\t\twindow.location.href = visit.to.url + visit.to.hash;\n\t\t\treturn true;\n\t\t};\n\n\t\t// Go back to the actual page we're still at\n\t\twindow.history.go(-1);\n\t}\n}\n","import type Swup from '../Swup.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Perform the out/leave animation of the current page.\n * @returns Promise<void>\n */\nexport const animatePageOut = async function (this: Swup, visit: Visit) {\n\tawait this.hooks.call('animation:out:start', visit, undefined, () => {\n\t\tthis.classes.add('is-changing', 'is-animating', 'is-leaving');\n\t});\n\n\tawait this.hooks.call('animation:out:await', visit, { skip: false }, (visit, { skip }) => {\n\t\tif (skip) return;\n\t\treturn this.awaitAnimations({ selector: visit.animation.selector });\n\t});\n\n\tawait this.hooks.call('animation:out:end', visit, undefined);\n};\n","import type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\nimport { query, queryAll } from '../utils.js';\nimport type { PageData } from './fetchPage.js';\n\n/**\n * Perform the replacement of content after loading a page.\n *\n * It takes an object with the page data as returned from `fetchPage` and a list\n * of container selectors to replace.\n *\n * @returns Whether all containers were replaced.\n */\nexport const replaceContent = function (\n\tthis: Swup,\n\t{ html }: PageData,\n\t{ containers }: { containers: Options['containers'] } = this.options\n): boolean {\n\tconst incomingDocument = new DOMParser().parseFromString(html, 'text/html');\n\n\t// Update browser title\n\tconst title = incomingDocument.querySelector('title')?.innerText || '';\n\tdocument.title = title;\n\n\t// Save persisted elements\n\tconst persistedElements = queryAll('[data-swup-persist]:not([data-swup-persist=\"\"])');\n\n\t// Update content containers\n\tconst replaced = containers\n\t\t.map((selector) => {\n\t\t\tconst currentEl = document.querySelector(selector);\n\t\t\tconst incomingEl = incomingDocument.querySelector(selector);\n\t\t\tif (currentEl && incomingEl) {\n\t\t\t\tcurrentEl.replaceWith(incomingEl);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!currentEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in current document: ${selector}`);\n\t\t\t}\n\t\t\tif (!incomingEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in incoming document: ${selector}`);\n\t\t\t}\n\t\t\treturn false;\n\t\t})\n\t\t.filter(Boolean);\n\n\t// Restore persisted elements\n\tpersistedElements.forEach((existing) => {\n\t\tconst key = existing.getAttribute('data-swup-persist');\n\t\tconst replacement = query(`[data-swup-persist=\"${key}\"]`);\n\t\tif (replacement && replacement !== existing) {\n\t\t\treplacement.replaceWith(existing);\n\t\t}\n\t});\n\n\t// Return true if all containers were replaced\n\treturn replaced.length === containers.length;\n};\n","import type Swup from '../Swup.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Update the scroll position after page render.\n * @returns Promise<boolean>\n */\nexport const scrollToContent = function (this: Swup, visit: Visit): boolean {\n\tconst options: ScrollIntoViewOptions = { behavior: 'auto' };\n\tconst { target, reset } = visit.scroll;\n\tconst scrollTarget = target ?? visit.to.hash;\n\n\tlet scrolled = false;\n\n\tif (scrollTarget) {\n\t\tscrolled = this.hooks.callSync(\n\t\t\t'scroll:anchor',\n\t\t\tvisit,\n\t\t\t{ hash: scrollTarget, options },\n\t\t\t(visit, { hash, options }) => {\n\t\t\t\tconst anchor = this.getAnchorElement(hash);\n\t\t\t\tif (anchor) {\n\t\t\t\t\tanchor.scrollIntoView(options);\n\t\t\t\t}\n\t\t\t\treturn !!anchor;\n\t\t\t}\n\t\t);\n\t}\n\n\tif (reset && !scrolled) {\n\t\tscrolled = this.hooks.callSync('scroll:top', visit, { options }, (visit, { options }) => {\n\t\t\twindow.scrollTo({ top: 0, left: 0, ...options });\n\t\t\treturn true;\n\t\t});\n\t}\n\n\treturn scrolled;\n};\n","import type Swup from '../Swup.js';\nimport { nextTick } from '../utils.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Perform the in/enter animation of the next page.\n * @returns Promise<void>\n */\nexport const animatePageIn = async function (this: Swup, visit: Visit) {\n\t// Check if failed/aborted in the meantime\n\tif (visit.done) return;\n\n\tconst animation = this.hooks.call(\n\t\t'animation:in:await',\n\t\tvisit,\n\t\t{ skip: false },\n\t\t(visit, { skip }) => {\n\t\t\tif (skip) return;\n\t\t\treturn this.awaitAnimations({ selector: visit.animation.selector });\n\t\t}\n\t);\n\n\tawait nextTick();\n\n\tawait this.hooks.call('animation:in:start', visit, undefined, () => {\n\t\tthis.classes.remove('is-animating');\n\t});\n\n\tawait animation;\n\n\tawait this.hooks.call('animation:in:end', visit, undefined);\n};\n","import { updateHistoryRecord, getCurrentUrl, classify } from '../helpers.js';\nimport type Swup from '../Swup.js';\nimport type { PageData } from './fetchPage.js';\nimport { VisitState, type Visit } from './Visit.js';\n\n/**\n * Render the next page: replace the content and update scroll position.\n */\nexport const renderPage = async function (this: Swup, visit: Visit, page: PageData): Promise<void> {\n\t// Check if failed/aborted in the meantime\n\tif (visit.done) return;\n\n\tvisit.advance(VisitState.ENTERING);\n\n\tconst { url } = page;\n\n\tthis.classes.remove('is-leaving');\n\n\t// update state if the url was redirected\n\tif (!this.isSameResolvedUrl(getCurrentUrl(), url)) {\n\t\tupdateHistoryRecord(url);\n\t\tthis.currentPageUrl = getCurrentUrl();\n\t\tvisit.to.url = this.currentPageUrl;\n\t}\n\n\t// only add for animated page loads\n\tif (visit.animation.animate) {\n\t\tthis.classes.add('is-rendering');\n\t}\n\n\t// replace content: allow handlers and plugins to overwrite paga data and containers\n\tawait this.hooks.call('content:replace', visit, { page }, (visit, { page }) => {\n\t\tconst success = this.replaceContent(page, { containers: visit.containers });\n\t\tif (!success) {\n\t\t\tthrow new Error('[swup] Container mismatch, aborting');\n\t\t}\n\t\tif (visit.animation.animate) {\n\t\t\t// Make sure to add these classes to new containers as well\n\t\t\tthis.classes.add('is-changing', 'is-animating', 'is-rendering');\n\t\t\tif (visit.animation.name) {\n\t\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t\t}\n\t\t}\n\t});\n\n\t// scroll into view: either anchor or top of page\n\tawait this.hooks.call('content:scroll', visit, undefined, () => {\n\t\treturn this.scrollToContent(visit);\n\t});\n\n\tawait this.hooks.call('page:view', visit, { url: this.currentPageUrl, title: document.title });\n};\n","import type Swup from '../Swup.js';\n\nexport type Plugin = {\n\t/** Identify as a swup plugin */\n\tisSwupPlugin: true;\n\t/** Name of this plugin */\n\tname: string;\n\t/** Version of this plugin. Currently not in use, defined here for backward compatiblity. */\n\tversion?: string;\n\t/** The swup instance that mounted this plugin */\n\tswup?: Swup;\n\t/** Version requirements of this plugin. Example: `{ swup: '>=4' }` */\n\trequires?: Record<string, string | string[]>;\n\t/** Run on mount */\n\tmount: () => void;\n\t/** Run on unmount */\n\tunmount: () => void;\n\t_beforeMount?: () => void;\n\t_afterUnmount?: () => void;\n\t_checkRequirements?: () => boolean;\n};\n\nconst isSwupPlugin = (maybeInvalidPlugin: unknown): maybeInvalidPlugin is Plugin => {\n\t// @ts-ignore: this might be anything, object or no\n\treturn Boolean(maybeInvalidPlugin?.isSwupPlugin);\n};\n\n/** Install a plugin. */\nexport const use = function (this: Swup, plugin: unknown) {\n\tif (!isSwupPlugin(plugin)) {\n\t\tconsole.error('Not a swup plugin instance', plugin);\n\t\treturn;\n\t}\n\n\tplugin.swup = this;\n\tif (plugin._checkRequirements) {\n\t\tif (!plugin._checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\t}\n\tif (plugin._beforeMount) {\n\t\tplugin._beforeMount();\n\t}\n\tplugin.mount();\n\n\tthis.plugins.push(plugin);\n\n\treturn this.plugins;\n};\n\n/** Uninstall a plugin. */\nexport function unuse(this: Swup, pluginOrName: Plugin | string) {\n\tconst plugin = this.findPlugin(pluginOrName);\n\tif (!plugin) {\n\t\tconsole.error('No such plugin', plugin);\n\t\treturn;\n\t}\n\n\tplugin.unmount();\n\tif (plugin._afterUnmount) {\n\t\tplugin._afterUnmount();\n\t}\n\n\tthis.plugins = this.plugins.filter((p) => p !== plugin);\n\n\treturn this.plugins;\n}\n\n/** Find a plugin by name or reference. */\nexport function findPlugin(this: Swup, pluginOrName: Plugin | string) {\n\treturn this.plugins.find(\n\t\t(plugin) =>\n\t\t\tplugin === pluginOrName ||\n\t\t\tplugin.name === pluginOrName ||\n\t\t\tplugin.name === `Swup${String(pluginOrName)}`\n\t);\n}\n","import type Swup from '../Swup.js';\n\n/**\n * Utility function to validate and run the global option 'resolveUrl'\n * @param {string} url\n * @returns {string} the resolved url\n */\nexport function resolveUrl(this: Swup, url: string): string {\n\tif (typeof this.options.resolveUrl !== 'function') {\n\t\tconsole.warn(`[swup] options.resolveUrl expects a callback function.`);\n\t\treturn url;\n\t}\n\tconst result = this.options.resolveUrl(url);\n\tif (!result || typeof result !== 'string') {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a url`);\n\t\treturn url;\n\t}\n\tif (result.startsWith('//') || result.startsWith('http')) {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a relative url`);\n\t\treturn url;\n\t}\n\treturn result;\n}\n\n/**\n * Compares the resolved version of two paths and returns true if they are the same\n * @param {string} url1\n * @param {string} url2\n * @returns {boolean}\n */\nexport function isSameResolvedUrl(this: Swup, url1: string, url2: string): boolean {\n\treturn this.resolveUrl(url1) === this.resolveUrl(url2);\n}\n","import { type DelegateEvent } from 'delegate-it';\n\nimport version from './config/version.js';\n\nimport { delegateEvent, getCurrentUrl, Location, updateHistoryRecord } from './helpers.js';\nimport { type DelegateEventUnsubscribe } from './helpers/delegateEvent.js';\n\nimport { Cache } from './modules/Cache.js';\nimport { Classes } from './modules/Classes.js';\nimport { type Visit, createVisit } from './modules/Visit.js';\nimport { Hooks } from './modules/Hooks.js';\nimport { getAnchorElement } from './modules/getAnchorElement.js';\nimport { awaitAnimations } from './modules/awaitAnimations.js';\nimport { navigate, performNavigation, type NavigationToSelfAction } from './modules/navigate.js';\nimport { fetchPage } from './modules/fetchPage.js';\nimport { animatePageOut } from './modules/animatePageOut.js';\nimport { replaceContent } from './modules/replaceContent.js';\nimport { scrollToContent } from './modules/scrollToContent.js';\nimport { animatePageIn } from './modules/animatePageIn.js';\nimport { renderPage } from './modules/renderPage.js';\nimport { use, unuse, findPlugin, type Plugin } from './modules/plugins.js';\nimport { isSameResolvedUrl, resolveUrl } from './modules/resolveUrl.js';\nimport { nextTick } from './utils.js';\nimport { type HistoryState } from './helpers/history.js';\n\n/** Options for customizing swup's behavior. */\nexport type Options = {\n\t/** Whether history visits are animated. Default: `false` */\n\tanimateHistoryBrowsing: boolean;\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tanimationSelector: string | false;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tanimationScope: 'html' | 'containers';\n\t/** Enable in-memory page cache. Default: `true` */\n\tcache: boolean;\n\t/** Content containers to be replaced on page visits. Default: `['#swup']` */\n\tcontainers: string[];\n\t/** Callback for ignoring visits. Receives the element and event that triggered the visit. */\n\tignoreVisit: (url: string, { el, event }: { el?: Element; event?: Event }) => boolean;\n\t/** Selector for links that trigger visits. Default: `'a[href]'` */\n\tlinkSelector: string;\n\t/** How swup handles links to the same page. Default: `scroll` */\n\tlinkToSelf: NavigationToSelfAction;\n\t/** Enable native animations using the View Transitions API. */\n\tnative: boolean;\n\t/** Plugins to register on startup. */\n\tplugins: Plugin[];\n\t/** Custom headers sent along with fetch requests. */\n\trequestHeaders: Record<string, string>;\n\t/** Rewrite URLs before loading them. */\n\tresolveUrl: (url: string) => string;\n\t/** Callback for telling swup to ignore certain popstate events.  */\n\tskipPopStateHandling: (event: PopStateEvent) => boolean;\n\t/** Request timeout in milliseconds. */\n\ttimeout: number;\n};\n\nconst defaults: Options = {\n\tanimateHistoryBrowsing: false,\n\tanimationSelector: '[class*=\"transition-\"]',\n\tanimationScope: 'html',\n\tcache: true,\n\tcontainers: ['#swup'],\n\tignoreVisit: (url, { el } = {}) => !!el?.closest('[data-no-swup]'),\n\tlinkSelector: 'a[href]',\n\tlinkToSelf: 'scroll',\n\tnative: false,\n\tplugins: [],\n\tresolveUrl: (url) => url,\n\trequestHeaders: {\n\t\t'X-Requested-With': 'swup',\n\t\t'Accept': 'text/html, application/xhtml+xml'\n\t},\n\tskipPopStateHandling: (event) => (event.state as HistoryState)?.source !== 'swup',\n\ttimeout: 0\n};\n\n/** Swup page transition library. */\nexport default class Swup {\n\t/** Library version */\n\treadonly version: string = version;\n\t/** Options passed into the instance */\n\toptions: Options;\n\t/** Default options before merging user options */\n\treadonly defaults: Options = defaults;\n\t/** Registered plugin instances */\n\tplugins: Plugin[] = [];\n\t/** Data about the current visit */\n\tvisit: Visit;\n\t/** Cache instance */\n\treadonly cache: Cache;\n\t/** Hook registry */\n\treadonly hooks: Hooks;\n\t/** Animation class manager */\n\treadonly classes: Classes;\n\t/** URL of the currently visible page */\n\tcurrentPageUrl: string = getCurrentUrl();\n\t/** Index of the current history entry */\n\tprotected currentHistoryIndex: number;\n\t/** Delegated event subscription handle */\n\tprotected clickDelegate?: DelegateEventUnsubscribe;\n\t/** Navigation status */\n\tprotected navigating: boolean = false;\n\t/** Run anytime a visit ends */\n\tprotected onVisitEnd?: () => Promise<unknown>;\n\n\t/** Install a plugin */\n\tuse = use;\n\t/** Uninstall a plugin */\n\tunuse = unuse;\n\t/** Find a plugin by name or instance */\n\tfindPlugin = findPlugin;\n\n\t/** Log a message. Has no effect unless debug plugin is installed */\n\tlog: (message: string, context?: unknown) => void = () => {};\n\n\t/** Navigate to a new URL */\n\tnavigate = navigate;\n\t/** Actually perform a navigation */\n\tprotected performNavigation = performNavigation;\n\t/** Create a new context for this visit */\n\tprotected createVisit = createVisit;\n\t/** Register a delegated event listener */\n\tdelegateEvent = delegateEvent;\n\t/** Fetch a page from the server */\n\tfetchPage = fetchPage;\n\t/** Resolve when animations on the page finish */\n\tawaitAnimations = awaitAnimations;\n\tprotected renderPage = renderPage;\n\t/** Replace the content after page load */\n\treplaceContent = replaceContent;\n\tprotected animatePageIn = animatePageIn;\n\tprotected animatePageOut = animatePageOut;\n\tprotected scrollToContent = scrollToContent;\n\t/** Find the anchor element for a given hash */\n\tgetAnchorElement = getAnchorElement;\n\n\t/** Get the current page URL */\n\tgetCurrentUrl = getCurrentUrl;\n\t/** Resolve a URL to its final location */\n\tresolveUrl = resolveUrl;\n\t/** Check if two URLs resolve to the same location */\n\tprotected isSameResolvedUrl = isSameResolvedUrl;\n\n\tconstructor(options: Partial<Options> = {}) {\n\t\t// Merge defaults and options\n\t\tthis.options = { ...this.defaults, ...options };\n\n\t\tthis.handleLinkClick = this.handleLinkClick.bind(this);\n\t\tthis.handlePopState = this.handlePopState.bind(this);\n\n\t\tthis.cache = new Cache(this);\n\t\tthis.classes = new Classes(this);\n\t\tthis.hooks = new Hooks(this);\n\t\tthis.visit = this.createVisit({ to: '' });\n\n\t\tthis.currentHistoryIndex = (history.state as HistoryState)?.index ?? 1;\n\n\t\tif (!this.checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.enable();\n\t}\n\n\tprotected checkRequirements() {\n\t\tif (typeof Promise === 'undefined') {\n\t\t\tconsole.warn('Promise is not supported');\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/** Enable this instance, adding listeners and classnames. */\n\tasync enable() {\n\t\t// Add event listener\n\t\tconst { linkSelector } = this.options;\n\t\tthis.clickDelegate = this.delegateEvent(linkSelector, 'click', this.handleLinkClick);\n\n\t\twindow.addEventListener('popstate', this.handlePopState);\n\n\t\t// Set scroll restoration to manual if animating history visits\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\twindow.history.scrollRestoration = 'manual';\n\t\t}\n\n\t\t// Initial save to cache\n\t\tif (this.options.cache) {\n\t\t\t// Disabled to avoid caching modified dom state: logic moved to preload plugin\n\t\t\t// https://github.com/swup/swup/issues/475\n\t\t}\n\n\t\t// Sanitize/check native option\n\t\tthis.options.native = this.options.native && !!document.startViewTransition;\n\n\t\t// Mount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.use(plugin));\n\n\t\t// Create initial history record\n\t\tif ((history.state as HistoryState)?.source !== 'swup') {\n\t\t\tupdateHistoryRecord(null, { index: this.currentHistoryIndex });\n\t\t}\n\n\t\t// Give consumers a chance to hook into enable\n\t\tawait nextTick();\n\n\t\t// Trigger enable hook\n\t\tawait this.hooks.call('enable', undefined, undefined, () => {\n\t\t\tconst html = document.documentElement;\n\t\t\thtml.classList.add('swup-enabled');\n\t\t\thtml.classList.toggle('swup-native', this.options.native);\n\t\t});\n\t}\n\n\t/** Disable this instance, removing listeners and classnames. */\n\tasync destroy() {\n\t\t// remove delegated listener\n\t\tthis.clickDelegate!.destroy();\n\n\t\t// remove popstate listener\n\t\twindow.removeEventListener('popstate', this.handlePopState);\n\n\t\t// empty cache\n\t\tthis.cache.clear();\n\n\t\t// unmount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.unuse(plugin));\n\n\t\t// trigger disable hook\n\t\tawait this.hooks.call('disable', undefined, undefined, () => {\n\t\t\tconst html = document.documentElement;\n\t\t\thtml.classList.remove('swup-enabled');\n\t\t\thtml.classList.remove('swup-native');\n\t\t});\n\n\t\t// remove handlers\n\t\tthis.hooks.clear();\n\t}\n\n\t/** Determine if a visit should be ignored by swup, based on URL or trigger element. */\n\tshouldIgnoreVisit(href: string, { el, event }: { el?: Element; event?: Event } = {}) {\n\t\tconst { origin, url, hash } = Location.fromUrl(href);\n\n\t\t// Ignore if the new origin doesn't match the current one\n\t\tif (origin !== window.location.origin) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the link/form would open a new window (or none at all)\n\t\tif (el && this.triggerWillOpenNewWindow(el)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the visit should be ignored as per user options\n\t\tif (this.options.ignoreVisit(url + hash, { el, event })) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Finally, allow the visit\n\t\treturn false;\n\t}\n\n\tprotected handleLinkClick(event: DelegateEvent<MouseEvent>) {\n\t\tconst el = event.delegateTarget as HTMLAnchorElement;\n\t\tconst { href, url, hash } = Location.fromElement(el);\n\n\t\t// Exit early if the link should be ignored\n\t\tif (this.shouldIgnoreVisit(href, { el, event })) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore if swup is currently navigating towards the link's URL\n\t\tif (this.navigating && url === this.visit.to.url) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tconst visit = this.createVisit({ to: url, hash, el, event });\n\n\t\t// Exit early if control key pressed\n\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) {\n\t\t\tthis.hooks.callSync('link:newtab', visit, { href });\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if other than left mouse button\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hooks.callSync('link:click', visit, { el, event }, () => {\n\t\t\tconst from = visit.from.url ?? '';\n\n\t\t\tevent.preventDefault();\n\n\t\t\t// Handle links to the same page\n\t\t\tif (!url || url === from) {\n\t\t\t\tif (hash) {\n\t\t\t\t\t// With hash: scroll to anchor\n\t\t\t\t\tthis.hooks.callSync('link:anchor', visit, { hash }, () => {\n\t\t\t\t\t\tupdateHistoryRecord(url + hash);\n\t\t\t\t\t\tthis.scrollToContent(visit);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Without hash: scroll to top or load/reload page\n\t\t\t\t\tthis.hooks.callSync('link:self', visit, undefined, () => {\n\t\t\t\t\t\tif (this.options.linkToSelf === 'navigate') {\n\t\t\t\t\t\t\tthis.performNavigation(visit);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tupdateHistoryRecord(url);\n\t\t\t\t\t\t\tthis.scrollToContent(visit);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Exit early if the resolved path hasn't changed\n\t\t\tif (this.isSameResolvedUrl(url, from)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Finally, proceed with loading the page\n\t\t\tthis.performNavigation(visit);\n\t\t});\n\t}\n\n\tprotected handlePopState(event: PopStateEvent) {\n\t\tconst href: string = (event.state as HistoryState)?.url ?? location.href;\n\n\t\t// Exit early if this event should be ignored\n\t\tif (this.options.skipPopStateHandling(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if the resolved path hasn't changed\n\t\tif (this.isSameResolvedUrl(getCurrentUrl(), this.currentPageUrl)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { url, hash } = Location.fromUrl(href);\n\n\t\tconst visit = this.createVisit({ to: url, hash, event });\n\n\t\t// Mark as history visit\n\t\tvisit.history.popstate = true;\n\n\t\t// Determine direction of history visit\n\t\tconst index = (event.state as HistoryState)?.index ?? 0;\n\t\tif (index && index !== this.currentHistoryIndex) {\n\t\t\tconst direction = index - this.currentHistoryIndex > 0 ? 'forwards' : 'backwards';\n\t\t\tvisit.history.direction = direction;\n\t\t\tthis.currentHistoryIndex = index;\n\t\t}\n\n\t\t// Disable animation & scrolling for history visits\n\t\tvisit.animation.animate = false;\n\t\tvisit.scroll.reset = false;\n\t\tvisit.scroll.target = false;\n\n\t\t// Animated history visit: re-enable animation & scroll reset\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\tvisit.animation.animate = true;\n\t\t\tvisit.scroll.reset = true;\n\t\t}\n\n\t\tthis.hooks.callSync('history:popstate', visit, { event }, () => {\n\t\t\tthis.performNavigation(visit);\n\t\t});\n\t}\n\n\t/** Determine whether an element will open a new tab when clicking/activating. */\n\tprotected triggerWillOpenNewWindow(triggerEl: Element) {\n\t\tif (triggerEl.matches('[download], [target=\"_blank\"]')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n"],"names":["classify","text","fallback","String","toLowerCase","replace","getCurrentUrl","hash","location","pathname","search","createHistoryRecord","url","data","state","random","Math","source","history","pushState","updateHistoryRecord","replaceState","delegateEvent","selector","type","callback","options","controller","AbortController","signal","delegate","destroy","abort","Location","URL","constructor","base","document","baseURI","super","toString","Object","setPrototypeOf","this","prototype","fromElement","el","href","getAttribute","fromUrl","matchPath","path","match","error","Error","fetchPage","_this","_temp2","_result","status","responseUrl","response","Promise","resolve","then","html","hooks","call","visit","FetchError","finalUrl","page","cache","write","method","set","headers","requestHeaders","timeout","timedOut","timeoutId","setTimeout","_temp","fetch","_this$hooks$call","clearTimeout","_catch","name","aborted","e","reject","message","details","Cache","swup","pages","Map","size","all","copy","forEach","key","has","get","result","callSync","undefined","update","payload","delete","clear","prune","predicate","urlToResolve","resolveUrl","query","context","querySelector","queryAll","Array","from","querySelectorAll","nextTick","requestAnimationFrame","isPromise","obj","runAsPromise","func","args","forceReflow","element","body","offsetHeight","escapeCssIdentifier","ident","window","CSS","escape","toMs","s","Number","slice","Classes","swupClasses","selectors","scope","animation","containers","isArray","join","targets","trim","add","target","classList","arguments","remove","className","split","filter","c","isSwupClass","some","startsWith","Visit","id","to","trigger","scroll","currentPageUrl","event","animate","wait","native","animationScope","animationSelector","read","action","popstate","direction","reset","advance","done","createVisit","_iteratorSymbol","Symbol","iterator","pact","value","_Pact","o","_settle","bind","v","observer","onFulfilled","onRejected","thenable","Hooks","registry","init","hook","create","exists","ledger","console","on","handler","warn","registration","off","before","once","arg1","arg2","arg3","defaultHandler","parseCallArgs","after","getHandlers","run","dispatchDomEvent","runSync","registrations","_this2","results","check","step","_cycle","next","_isSettledPact","return","_fixup","TypeError","values","i","length","push","array","_forTo","_forOf","found","replaced","sort","sortRegistrations","T","index","createDefaultHandler","a","b","priority","detail","dispatchEvent","CustomEvent","bubbles","getAnchorElement","charAt","substring","decoded","decodeURIComponent","getElementById","awaitAnimations","elements","animatedElements","awaitedAnimations","map","propCount","expectedType","styles","getComputedStyle","transitionDelays","getStyleProperties","TRANSITION","transitionDurations","transitionTimeout","calculateTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","max","getTransitionInfo","endEvent","startTime","performance","now","propsTransitioned","end","removeEventListener","onEnd","includes","isTransitionOrAnimationEvent","elapsedTime","addEventListener","awaitAnimationsOnElement","Boolean","delays","durations","concat","duration","performNavigation","_exit","_temp4","_result2","navigating","referrer","classes","_exit2","_temp8","_result4","animatePageOut","_temp6","animatePageIn","_temp5","startViewTransition","_renderPage3","renderPage","_page3","finished","_renderPage2","_page2","_temp7","_renderPage","_page","onVisitEnd","_temp9","_this$fetchPage","cachedPage","newUrl","currentHistoryIndex","skipPopStateHandling","go","_temp3","navigate","shouldIgnoreVisit","skip","replaceContent","incomingDocument","DOMParser","parseFromString","title","innerText","persistedElements","currentEl","incomingEl","replaceWith","existing","replacement","scrollToContent","behavior","scrollTarget","scrolled","anchor","scrollIntoView","scrollTo","top","left","isSameResolvedUrl","use","plugin","maybeInvalidPlugin","isSwupPlugin","_checkRequirements","_beforeMount","mount","plugins","unuse","pluginOrName","findPlugin","unmount","_afterUnmount","p","find","url1","url2","defaults","animateHistoryBrowsing","ignoreVisit","closest","linkSelector","linkToSelf","Accept","Swup","version","clickDelegate","log","handleLinkClick","handlePopState","checkRequirements","enable","scrollRestoration","documentElement","toggle","origin","triggerWillOpenNewWindow","delegateTarget","preventDefault","metaKey","ctrlKey","shiftKey","altKey","button","triggerEl","matches"],"mappings":"kEACa,MAAAA,EAAWA,CAACC,EAAcC,IACvBC,OAAOF,GACpBG,cAGAC,QAAQ,YAAa,KACrBA,QAAQ,WAAY,IACpBA,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,KACLH,GAAY,GCTjBI,EAAgBA,EAAGC,QAA6B,CAAE,IACvDC,SAASC,SAAWD,SAASE,QAAUH,EAAOC,SAASD,KAAO,ICWzDI,EAAsBA,CAACC,EAAaC,EAAoB,CAAE,KAEtE,MAAMC,EAAsB,CAC3BF,IAFDA,EAAMA,GAAON,EAAc,CAAEC,MAAM,IAGlCQ,OAAQC,KAAKD,SACbE,OAAQ,UACLJ,GAEJK,QAAQC,UAAUL,EAAO,GAAIF,EAC9B,EAGaQ,EAAsBA,CAACR,EAAqB,KAAMC,EAAoB,CAAE,KACpFD,EAAMA,GAAON,EAAc,CAAEC,MAAM,IACnC,MACMO,EAAsB,IADNI,QAAQJ,OAA0B,CAAA,EAGvDF,MACAG,OAAQC,KAAKD,SACbE,OAAQ,UACLJ,GAEJK,QAAQG,aAAaP,EAAO,GAAIF,EACjC,ECxBaU,EAAgBA,CAK5BC,EACAC,EACAC,EACAC,KAEA,MAAMC,EAAa,IAAIC,gBAGvB,OAFAF,EAAU,IAAKA,EAASG,OAAQF,EAAWE,QAC3CC,EAAqCP,EAAUC,EAAMC,EAAUC,GACxD,CAAEK,QAASA,IAAMJ,EAAWK,QAAO,ECpBrC,MAAOC,UAAiBC,IAC7BC,WAAAA,CAAYvB,EAAmBwB,EAAeC,SAASC,SACtDC,MAAM3B,EAAI4B,WAAYJ,GAEtBK,OAAOC,eAAeC,KAAMV,EAASW,UACtC,CAKA,OAAIhC,GACH,OAAO+B,KAAKlC,SAAWkC,KAAKjC,MAC7B,CAOA,kBAAOmC,CAAYC,GAClB,MAAMC,EAAOD,EAAGE,aAAa,SAAWF,EAAGE,aAAa,eAAiB,GACzE,OAAW,IAAAf,EAASc,EACrB,CAOA,cAAOE,CAAQrC,GACd,OAAO,IAAIqB,EAASrB,EACrB,ECvBY,MAAAsC,EAAYA,CACxBC,EACAzB,KAEA,IACC,OAAO0B,EAASD,EAAMzB,EACtB,CAAC,MAAO2B,GACR,MAAM,IAAIC,MAAM,8BAA8BnD,OAAOgD,SAAYhD,OAAOkD,KACxE,GCwBoBE,EAAS,SAE9B3C,EACAc,EAAwB,CAAE,GAAA,UAAA8B,EAIVb,KAAI,SAAAc,EAAAC,GAuCpB,MAAMC,OAAEA,EAAQ/C,IAAKgD,GAAgBC,EAAS,OAAAC,QAAAC,QAC3BF,EAAS5D,QAAM+D,KAAA,SAA5BC,GAEN,GAAe,MAAXN,EAEH,MADAH,EAAKU,MAAMC,KAAK,cAAeC,EAAO,CAAET,SAAQE,WAAUjD,IAAKgD,QACrDS,EAAW,iBAAiBT,IAAe,CAAED,SAAQ/C,IAAKgD,IAGrE,IAAKK,EACJ,MAAM,IAAII,EAAW,mBAAmBT,IAAe,CAAED,SAAQ/C,IAAKgD,IAIvE,MAAQhD,IAAK0D,GAAarC,EAASgB,QAAQW,GACrCW,EAAO,CAAE3D,IAAK0D,EAAUL,QAO9B,OAJIG,EAAMI,MAAMC,OAAW/C,EAAQgD,QAA6B,QAAnBhD,EAAQgD,QAAqB9D,IAAQ0D,GACjFd,EAAKgB,MAAMG,IAAIJ,EAAK3D,IAAK2D,GAGnBA,CAAK,EA9DZ3D,CAAAA,EAAMqB,EAASgB,QAAQrC,GAAKA,IAE5B,MAAMwD,MAAEA,EAAQZ,EAAKY,OAAU1C,EACzBkD,EAAU,IAAKpB,EAAK9B,QAAQmD,kBAAmBnD,EAAQkD,SACvDE,EAAUpD,EAAQoD,SAAWtB,EAAK9B,QAAQoD,QAC1CnD,EAAa,IAAIC,iBACjBC,OAAEA,GAAWF,EACnBD,EAAU,IAAKA,EAASkD,UAAS/C,UAEjC,IAUIgC,EAVAkB,GAAW,EACXC,EAAkD,KAClDF,GAAWA,EAAU,IACxBE,EAAYC,WAAW,KACtBF,GAAW,EACXpD,EAAWK,MAAM,UAClB,EAAG8C,IAImB,MAAAI,0BACnBpB,QAAAC,QACcP,EAAKU,MAAMC,KAC3B,gBACAC,EACA,CAAExD,MAAKc,WACP,CAAC0C,GAASxD,MAAKc,aAAcyD,MAAMvE,EAAKc,KACxCsC,KAAAoB,SAAAA,GALDvB,EAAQuB,EAMJJ,GACHK,aAAaL,EAEd,4DAXsBM,CAAA,EAWdjC,SAAAA,GACR,GAAI0B,EAEH,MADAvB,EAAKU,MAAMC,KAAK,gBAAiBC,EAAO,CAAExD,QAChC,IAAAyD,EAAW,sBAAsBzD,IAAO,CAAEA,MAAKmE,aAE1D,GAA+B,eAA1B1B,GAAiBkC,MAAyB1D,EAAO2D,QACrD,MAAU,IAAAnB,EAAW,oBAAoBzD,IAAO,CAAEA,MAAK4E,SAAS,IAEjE,MAAMnC,CACN,UAAAS,QAAAC,QAAAmB,GAAAA,EAAAlB,KAAAkB,EAAAlB,KAAAP,GAAAA,IAwBF,CAAC,MAAAgC,UAAA3B,QAAA4B,OAAAD,EAAA,CAAA,EAzFK,MAAOpB,UAAmBf,MAK/BnB,WAAAA,CACCwD,EACAC,GAEArD,MAAMoD,GAAShD,KARhB/B,SACA+C,EAAAA,KAAAA,YACA6B,EAAAA,KAAAA,oBACAT,cAAQ,EAMPpC,KAAK4C,KAAO,aACZ5C,KAAK/B,IAAMgF,EAAQhF,IACnB+B,KAAKgB,OAASiC,EAAQjC,OACtBhB,KAAK6C,QAAUI,EAAQJ,UAAW,EAClC7C,KAAKoC,SAAWa,EAAQb,WAAY,CACrC,QC9BYc,EAOZ1D,WAAAA,CAAY2D,GAAUnD,KALZmD,UAGAC,EAAAA,KAAAA,MAAgC,IAAIC,IAG7CrD,KAAKmD,KAAOA,CACb,CAGA,QAAIG,GACH,OAAOtD,KAAKoD,MAAME,IACnB,CAGA,OAAIC,GACH,MAAMC,EAAO,IAAIH,IAIjB,OAHArD,KAAKoD,MAAMK,QAAQ,CAAC7B,EAAM8B,KACzBF,EAAKxB,IAAI0B,EAAK,IAAK9B,GACpB,GACO4B,CACR,CAGAG,GAAAA,CAAI1F,GACH,OAAO+B,KAAKoD,MAAMO,IAAI3D,KAAKoB,QAAQnD,GACpC,CAGA2F,GAAAA,CAAI3F,GACH,MAAM4F,EAAS7D,KAAKoD,MAAMQ,IAAI5D,KAAKoB,QAAQnD,IAC3C,OAAK4F,EACE,IAAKA,GADQA,CAErB,CAGA7B,GAAAA,CAAI/D,EAAa2D,GAChB3D,EAAM+B,KAAKoB,QAAQnD,GACnB2D,EAAO,IAAKA,EAAM3D,OAClB+B,KAAKoD,MAAMpB,IAAI/D,EAAK2D,GACpB5B,KAAKmD,KAAK5B,MAAMuC,SAAS,iBAAaC,EAAW,CAAEnC,QACpD,CAGAoC,MAAAA,CAAO/F,EAAagG,GACnBhG,EAAM+B,KAAKoB,QAAQnD,GACnB,MAAM2D,EAAO,IAAK5B,KAAK4D,IAAI3F,MAASgG,EAAShG,OAC7C+B,KAAKoD,MAAMpB,IAAI/D,EAAK2D,EACrB,CAGAsC,OAAOjG,GACN+B,KAAKoD,MAAMc,OAAOlE,KAAKoB,QAAQnD,GAChC,CAGAkG,KAAAA,GACCnE,KAAKoD,MAAMe,QACXnE,KAAKmD,KAAK5B,MAAMuC,SAAS,mBAAeC,OAAWA,EACpD,CAGAK,KAAAA,CAAMC,GACLrE,KAAKoD,MAAMK,QAAQ,CAAC7B,EAAM3D,KACrBoG,EAAUpG,EAAK2D,IAClB5B,KAAKkE,OAAOjG,EACZ,EAEH,CAGUmD,OAAAA,CAAQkD,GACjB,MAAMrG,IAAEA,GAAQqB,EAASgB,QAAQgE,GACjC,OAAOtE,KAAKmD,KAAKoB,WAAWtG,EAC7B,ECpFY,MAAAuG,EAAQA,CAAC5F,EAAkB6F,EAA8B/E,WAC9D+E,EAAQC,cAA2B9F,GAI9B+F,EAAWA,CACvB/F,EACA6F,EAA8B/E,WAEvBkF,MAAMC,KAAKJ,EAAQK,iBAAiBlG,IAI/BmG,EAAWA,IAChB,IAAI5D,QAASC,IACnB4D,sBAAsB,KACrBA,sBAAsB,KACrB5D,KACA,EACD,GAKG,SAAU6D,EAAaC,GAC5B,QACGA,IACc,iBAARA,GAAmC,mBAARA,IACc,mBAAzCA,EAAgC7D,IAE1C,UAIgB8D,EAAaC,EAAgBC,EAAkB,IAC9D,OAAW,IAAAlE,QAAQ,CAACC,EAAS2B,KAC5B,MAAMc,EAAkBuB,KAAQC,GAC5BJ,EAAUpB,GACbA,EAAOxC,KAAKD,EAAS2B,GAErB3B,EAAQyC,EACR,EAEH,UAOgByB,EAAYC,GAE3B,OADAA,EAAUA,GAAW7F,SAAS8F,KACvBD,GAASE,YACjB,CAGa,MAAAC,EAAuBC,GAE/BC,OAAOC,KAAOD,OAAOC,IAAIC,OACrBD,IAAIC,OAAOH,GAEZA,EAIKI,EAAQC,GAC8B,IAA3CC,OAAOD,EAAEE,MAAM,GAAI,GAAGxI,QAAQ,IAAK,YChE9ByI,EAWZ3G,WAAAA,CAAY2D,GAAUnD,KAVZmD,UAAI,EAAAnD,KACJoG,YAAc,CACvB,MACA,cACA,eACA,cACA,eACA,cAIApG,KAAKmD,KAAOA,CACb,CAEA,aAAckD,GACb,MAAMC,MAAEA,GAAUtG,KAAKmD,KAAK1B,MAAM8E,UAClC,MAAc,eAAVD,EAAmCtG,KAACmD,KAAK1B,MAAM+E,WACrC,SAAVF,EAAyB,CAAC,QAC1B1B,MAAM6B,QAAQH,GAAeA,EAC1B,EACR,CAEA,YAAc1H,GACb,OAAWoB,KAACqG,UAAUK,KAAK,IAC5B,CAEA,WAAcC,GACb,OAAK3G,KAAKpB,SAASgI,OACZjC,EAAS3E,KAAKpB,UADa,EAEnC,CAEAiI,GAAAA,GACC7G,KAAK2G,QAAQlD,QAASqD,GAAWA,EAAOC,UAAUF,OAAIX,GAAAA,MAAA1E,KAAAwF,YACvD,CAEAC,MAAAA,GACCjH,KAAK2G,QAAQlD,QAASqD,GAAWA,EAAOC,UAAUE,UAAOf,GAAAA,MAAA1E,KAAAwF,YAC1D,CAEA7C,KAAAA,GACCnE,KAAK2G,QAAQlD,QAASqD,IACrB,MAAMG,EAASH,EAAOI,UAAUC,MAAM,KAAKC,OAAQC,GAAMrH,KAAKsH,YAAYD,IAC1EP,EAAOC,UAAUE,UAAUA,EAC5B,EACD,CAEUK,WAAAA,CAAYJ,GACrB,OAAWlH,KAACoG,YAAYmB,KAAMF,GAAMH,EAAUM,WAAWH,GAC1D,QCuCYI,EAsBZjI,WAAAA,CAAY2D,EAAYpE,GAAyBiB,KApBjD0H,QAEAvJ,EAAAA,KAAAA,WAEA0G,EAAAA,KAAAA,iBAEA8C,QAAE,EAAA3H,KAEFwG,gBAAU,EAAAxG,KAEVuG,eAEAqB,EAAAA,KAAAA,aAEA/F,EAAAA,KAAAA,kBAEAtD,aAAO,EAAAyB,KAEP6H,YAAM,EAGL,MAAMF,GAAEA,EAAE9C,KAAEA,EAAO1B,EAAK2E,eAAclK,KAAEA,EAAIuC,GAAEA,EAAE4H,MAAEA,GAAUhJ,EAE5DiB,KAAK0H,GAAKrJ,KAAKD,SACf4B,KAAK7B,MAzCG,EA0CR6B,KAAK6E,KAAO,CAAE5G,IAAK4G,GACnB7E,KAAK2H,GAAK,CAAE1J,IAAK0J,EAAI/J,QACrBoC,KAAKwG,WAAarD,EAAKpE,QAAQyH,WAC/BxG,KAAKuG,UAAY,CAChByB,SAAS,EACTC,MAAM,EACNrF,UAAMmB,EACNmE,OAAQ/E,EAAKpE,QAAQmJ,OACrB5B,MAAOnD,EAAKpE,QAAQoJ,eACpBvJ,SAAUuE,EAAKpE,QAAQqJ,mBAExBpI,KAAK4H,QAAU,CAAEzH,KAAI4H,SACrB/H,KAAK6B,MAAQ,CACZwG,KAAMlF,EAAKpE,QAAQ8C,MACnBC,MAAOqB,EAAKpE,QAAQ8C,OAErB7B,KAAKzB,QAAU,CACd+J,OAAQ,OACRC,UAAU,EACVC,eAAWzE,GAEZ/D,KAAK6H,OAAS,CACbY,OAAO,EACP3B,YAAQ/C,EAEV,CAEA2E,OAAAA,CAAQvK,GACH6B,KAAK7B,MAAQA,IAChB6B,KAAK7B,MAAQA,EAEf,CAGAkB,KAAAA,GACCW,KAAK7B,MAtEG,CAuET,CAGA,QAAIwK,GACH,OAAW3I,KAAC7B,OA5EF,CA6EX,EAIe,SAAAyK,EAAwB7J,GACvC,OAAO,IAAI0I,EAAMzH,KAAMjB,EACxB,CCyQa,MAAA8J,EAAwB,oBAAAC,OAAAA,OAAAC,WAAAD,OAAAC,SAAAD,OAAA,oBAAA,wBAtRvBE,EAAA7K,EAAA8K,SACGjD,EAAA,iBACFkD,EAAA,OACKlD,EAQnB,cADKmD,EAAKC,EAAGC,KAAA,KAAAL,EAAA7K,IANC,EAAbA,MACW8K,EAAAjD,GAGZiD,EAAAA,EAAsBK,EAOnB,GAAAL,GAAAA,EAAA5H,KAEF,cADaA,KAAA+H,EAAAC,KAAA,KAAAL,EAAA7K,GAAAiL,EAAAC,KAAA,KAAAL,EAAA,IAIdA,EAAAhD,EAAA7H,QAEG,MAAAoL,EAAAP,EAAAG,EACHI,KACKP,EAEH,EA9KI,MAAEE,eAA0B,WA6GnC,SAAAA,IAAA,oEAKG,MAAApK,EAAA,EAAAX,EAAAqL,EAAAC,EACH,KAAkB,CACjB,IACUL,EAAWvF,EAAA,EAAA/E,EAAAkB,KAAAsJ,GAErB,CAA2C,MAAAxG,GACjCsG,EAAyBvF,EAAO,EAAEf,EAE5C,CACA,OAA0He,CACvG,QACG7D,mBAGD,SAAAa,aAEFoI,EAAApI,EAAAyI,EACF,EAAhBzI,EAAgBmF,IACHnC,EAAA,EAAA2F,EAAAA,EAAAP,GAAAA,GACFQ,IACM5F,EAAA,EAAA4F,EAAAR,MAETpF,EAAA,EAAAoF,SAEOnG,KACFe,EAAA,EAAAf,KAGDe,KA9IqB,iBAmL/B,OAAA6F,aAAAR,GAAA,EAAAQ,EAAA1D,CACH,CAjEY,MAAA2D,EAyCZnK,WAAAA,CAAY2D,QAvCFA,UAAI,EAAAnD,KAGJ4J,SAAyB,IAAIvG,IAAKrD,KAIzBuB,MAAoB,CACtC,sBACA,sBACA,oBACA,qBACA,qBACA,mBACA,iBACA,cACA,YACA,kBACA,iBACA,SACA,UACA,gBACA,cACA,gBACA,mBACA,aACA,YACA,cACA,cACA,YACA,YACA,aACA,gBACA,cACA,mBACA,cACA,aAIAvB,KAAKmD,KAAOA,EACZnD,KAAK6J,MACN,CAKUA,IAAAA,GACT7J,KAAKuB,MAAMkC,QAASqG,GAAS9J,KAAK+J,OAAOD,GAC1C,CAKAC,MAAAA,CAAOD,GACD9J,KAAK4J,SAASjG,IAAImG,IACtB9J,KAAK4J,SAAS5H,IAAI8H,EAAkB,IAAIzG,IAE1C,CAKA2G,MAAAA,CAAOF,GACN,OAAW9J,KAAC4J,SAASjG,IAAImG,EAC1B,CAKUlG,GAAAA,CAAwBkG,GACjC,MAAMG,EAASjK,KAAK4J,SAAShG,IAAIkG,GACjC,GAAIG,EACH,OAAOA,EAERC,QAAQxJ,uBAAuBoJ,KAChC,CAKA3F,KAAAA,GACCnE,KAAK4J,SAASnG,QAASwG,GAAWA,EAAO9F,QAC1C,CAsBAgG,EAAAA,CACCL,EACAM,EACArL,EAAsB,CAAE,GAExB,MAAMkL,EAASjK,KAAK4D,IAAIkG,GACxB,IAAKG,EAEJ,OADAC,QAAQG,cAAcP,iBACf,OAGR,MACMQ,EAAoC,IAAKvL,EAAS2I,GAD7CuC,EAAO3G,KAAO,EACmCwG,OAAMM,WAGlE,OAFAH,EAAOjI,IAAIoI,EAASE,GAEb,IAAMtK,KAAKuK,IAAIT,EAAMM,EAC7B,CAgBAI,MAAAA,CACCV,EACAM,EACArL,EAAuB,CAAE,GAEzB,YAAYoL,GAAGL,EAAMM,EAAS,IAAKrL,EAASyL,QAAQ,GACrD,CAgBA9M,OAAAA,CACCoM,EACAM,EACArL,EAAuB,CAAA,GAEvB,OAAOiB,KAAKmK,GAAGL,EAAMM,EAAS,IAAKrL,EAASrB,SAAS,GACtD,CAeA+M,IAAAA,CACCX,EACAM,EACArL,EAAuB,CAAA,GAEvB,YAAYoL,GAAGL,EAAMM,EAAS,IAAKrL,EAAS0L,MAAM,GACnD,CAaAF,GAAAA,CAAwBT,EAASM,GAChC,MAAMH,EAASjK,KAAK4D,IAAIkG,GACpBG,GAAUG,EACGH,EAAO/F,OAAOkG,IAE7BF,QAAQG,0BAA0BP,iBAEzBG,GACVA,EAAO9F,OAET,CAgBM3C,IAAAA,CACLsI,EACAY,EACAC,EACAC,OAA4B/J,MAAAA,EAEUb,MAA/ByB,EAAO4D,EAAMwF,GAAkBhK,EAAKiK,cAAchB,EAAMY,EAAMC,EAAMC,IAErEJ,OAAEA,EAAMJ,QAAEA,EAAOW,MAAEA,GAAUlK,EAAKmK,YAAYlB,EAAMe,GAAgB,OAAA1J,QAAAC,QACpEP,EAAKoK,IAAIT,EAAQ/I,EAAO4D,IAAKhE,KAAAF,WAAAA,OAAAA,QAAAC,QACZP,EAAKoK,IAAIb,EAAS3I,EAAO4D,IAAKhE,eAA9CwC,IAAO,OAAA1C,QAAAC,QACRP,EAAKoK,IAAIF,EAAOtJ,EAAO4D,IAAKhE,KAAA,WAElC,OADAR,EAAKqK,iBAAiBpB,EAAMrI,EAAO4D,GAC5BxB,CAAO,EACf,EAAA,EAAA,CAAC,MAAAf,GAAA3B,OAAAA,QAAA4B,OAAAD,EAAA,CAAA,CAgBDgB,QAAAA,CACCgG,EACAY,EACAC,EACAC,GAEA,MAAOnJ,EAAO4D,EAAMwF,GAAkB7K,KAAK8K,cAAchB,EAAMY,EAAMC,EAAMC,IACrEJ,OAAEA,EAAMJ,QAAEA,EAAOW,MAAEA,GAAU/K,KAAKgL,YAAYlB,EAAMe,GAC1D7K,KAAKmL,QAAQX,EAAQ/I,EAAO4D,GAC5B,MAAOxB,GAAU7D,KAAKmL,QAAQf,EAAS3I,EAAO4D,GAG9C,OAFArF,KAAKmL,QAAQJ,EAAOtJ,EAAO4D,GAC3BrF,KAAKkL,iBAAiBpB,EAAMrI,EAAO4D,GAC5BxB,CACR,CAKUiH,aAAAA,CACThB,EACAY,EACAC,EACAC,GAIA,OADGF,aAAgBjD,GAA2B,iBAATiD,GAAqC,mBAATC,EAMzD,CAACD,EAAMC,EAA0BC,GAHjC,MAAC7G,EAAW2G,EAA0BC,EAK/C,CAagBM,GAAAA,CACfG,EACA3J,EACA4D,GAAsB,IAAA,MAAAgG,EAKXrL,KAHLsL,EAAU,GAAG/I,WAOHuE,EAAAtB,EAAA+F,GACd,GAAE,mBAAFzE,EAAE+B,GAAA,CACH,IAAqB2C,EAAAxC,EAAAjG,EAArBgG,EAAAjC,EAAQ+B,QACR,SAAA4C,EAAA5H,GACD,IACD,OAAC2H,EAAAzC,EAAA2C,QAAA/C,MAaS,IADO9E,EAAA2B,EAAAgG,EAAAvC,SAEhBpF,EACAxC,KAAwB,KAGlBsK,EAAU9H,GAGf,mBAD0B4H,EAAA1I,IAAAA,EAAAqG,EAAAC,KAAA,KAAAL,EAAA,IAAAE,EAAA,KAD3BrF,EAAWA,EAAMyF,CAGhB,CAEAN,EACCI,EAAAJ,EAAA,EAAAnF,GAIAmF,EAAAnF,CAEF,CAAA,MAAAf,GACDsG,EAACJ,IAAAA,EAAA,IAAAE,GAAA,EAAApG,EAED,qCAMG0I,EAAA7C,MACkBI,EAAA6C,eAEhB9I,IAEH,OAAAmG,SAIsFD,EAAA3H,YACjF2H,EAAA3H,KAAOwK,EAA4E,SAAwB/I,GACjH,MAAA+I,EAAU/I,SAMV,OAAAkG,kBAIWlC,GACX,MAAI,IAAAgF,wCAGF,IAAAC,EAAA,OACMC,EAAAlF,EAAAmF,OAAAD,IACND,EAAAG,KAAApF,EAAAkF,IAEC,gBAzLIG,EAAgB3G,SAClBwD,gBACH,SAAAyC,EAAA5H,GACA,IACD,OAAAmI,EAAAG,EAAAF,YAAMpI,EAAA2B,OACA3B,EAAMxC,KAAG,CACf,IAAAsK,EAAA9H,eAiBGA,OACJ4H,EAC8B1I,IAEFA,EAAAqG,EAAAC,KAAA,KAAAL,EAAA,IAAAE,EAAA,KApB5BrF,EAAAA,EAAAyF,MA4BIN,OAELA,EAACnF,CAgBD,CAAA,MAAAf,KAMOkG,IAAMA,SAAsB,IAClC,EAEAyC,GACAzC,EA0HGoD,CAAAL,EAAA,SAAUC,GAAA,OAAAxG,EAAAuG,EAAAC,GAAA,GAjFMK,CACmCjB,EAA3C,UAAAtB,KAAEA,EAAIM,QAAEA,EAAOS,eAAEA,EAAcJ,KAAEA,IAC3C,IAAIhJ,GAAOkH,KACuB,OAA9B8B,GAAMY,EAAKd,IAAIT,EAAMM,GAASjJ,QAAAC,QACb+D,EAAaiF,EAAS,CAC1C3I,GAAS4J,EAAKlI,KAAK1B,MACnB4D,EACAwF,KACCxJ,KAJIwC,SAAAA,GAKNyH,EAAQY,KAAKrI,EAAQ,EACrB,GAAA1C,OAAAA,QAAAC,QAAAmB,GAAAA,EAAAlB,KAAAkB,EAAAlB,KAAA,WACD,OAAOiK,CAAQ,GAARA,EACR,CAAC,MAAAxI,GAAA3B,OAAAA,QAAA4B,OAAAD,EAAA,CAAA,CAaSqI,OAAAA,CACTC,EACA3J,EACA4D,GAEA,MAAMiG,EAAU,GAChB,IAAK,MAAMxB,KAAEA,EAAIM,QAAEA,EAAOS,eAAEA,EAAcJ,KAAEA,KAAUW,EAAe,CACpE,GAAI3J,GAAOkH,KAAM,SACb8B,GAAMzK,KAAKuK,IAAIT,EAAMM,GACzB,MAAMvG,EAAUuG,EAAkC3I,GAASzB,KAAKmD,KAAK1B,MAAO4D,EAAMwF,GAClFS,EAAQY,KAAKrI,GACToB,EAAUpB,IACbqG,QAAQG,KACP,uDAAuDP,2CAIzD,CACD,OAAOwB,CACR,CASUN,WAAAA,CAAgClB,EAASe,GAClD,MAAMZ,EAASjK,KAAK4D,IAAIkG,GACxB,IAAKG,EACJ,MAAO,CAAEqC,OAAO,EAAO9B,OAAQ,GAAIJ,QAAS,GAAIW,MAAO,GAAIwB,UAAU,GAGtE,MAAMnB,EAAgBxG,MAAMC,KAAKoF,EAAO8B,UAIlCS,EAAOxM,KAAKyM,kBAGZjC,EAASY,EAAchE,OAAO,EAAGoD,SAAQ9M,aAAc8M,IAAW9M,GAAS8O,KAAKA,GAChF9O,EAAU0N,EAAchE,OAAO,EAAG1J,aAAcA,GAAS0J,OALlDsF,IAA4E,GAKdF,KAAKA,GAC1EzB,EAAQK,EAAchE,OAAO,EAAGoD,SAAQ9M,cAAe8M,IAAW9M,GAAS8O,KAAKA,GAChFD,EAAW7O,EAAQuO,OAAS,EAIlC,IAAI7B,EAAwD,GAC5D,GAAIS,IACHT,EAAU,CAAC,CAAE1C,GAAI,EAAGoC,OAAMM,QAASS,IAC/B0B,GAAU,CACb,MAAMI,EAAQjP,EAAQuO,OAAS,EAEzBW,EAAwBD,IAC7B,MAAMjB,EAAOhO,EAAQiP,EAAQ,GAC7B,OAAIjB,EACI,CAACjK,EAAO4D,IACdqG,EAAKtB,QAAQ3I,EAAO4D,EAAMuH,EAAqBD,EAAQ,IAEjD9B,CACP,EAGFT,EAAU,CACT,CAAE1C,GAAI,EAAGoC,OAAMM,QAZS1M,EAAQiP,GAAOvC,QAYGS,eAFd+B,EAAqBD,IAIlD,CAGF,MAAO,CAAEL,OAAO,EAAM9B,SAAQJ,UAASW,QAAOwB,WAC/C,CAQUE,iBAAAA,CACTI,EACAC,GAIA,OAFkBD,EAAEE,UAAY,IAAMD,EAAEC,UAAY,IACzCF,EAAEnF,GAAKoF,EAAEpF,IACK,CAC1B,CAMUwD,gBAAAA,CACTpB,EACArI,EACA4D,GAEA,GAAI5D,GAAOkH,KAAM,OAEjB,MAAMqE,EAA0B,CAAElD,OAAMzE,OAAM5D,MAAOA,GAASzB,KAAKmD,KAAK1B,OACxE/B,SAASuN,cACR,IAAIC,YAAuC,WAAE,CAAEF,SAAQG,SAAS,KAEjEzN,SAASuN,cACR,IAAIC,oBAAqCpD,IAAQ,CAAEkD,SAAQG,SAAS,IAEtE,ECpiBY,MAAAC,EAAoBxP,IAKhC,GAJIA,GAA2B,MAAnBA,EAAKyP,OAAO,KACvBzP,EAAOA,EAAK0P,UAAU,KAGlB1P,EACJ,OAAO,KAGR,MAAM2P,EAAUC,mBAAmB5P,GACnC,IAAI2H,EACH7F,SAAS+N,eAAe7P,IACxB8B,SAAS+N,eAAeF,IACxB/I,EAAiB,WAAAsB,EAAOlI,SACxB4G,aAAiBsB,EAAOyH,QAMzB,OAJKhI,GAAoB,QAAT3H,IACf2H,EAAU7F,SAAS8F,MAGbD,GCZcmI,EAAe,UAEpCC,SACCA,EAAQ/O,SACRA,QAOD,IAAiB,IAAbA,IAAuB+O,EAC1B,OAAAxM,QAAAC,UAID,IAAIwM,EAAkC,GACtC,GAAID,EACHC,EAAmBhJ,MAAMC,KAAK8I,QACxB,GAAI/O,IACVgP,EAAmBjJ,EAAS/F,EAAUc,SAAS8F,OAE1CoI,EAAiB3B,QAErB,OADA/B,QAAQG,8DAA8DzL,OACtEuC,QAAAC,UAIF,MAAMyM,EAAoBD,EAAiBE,IAAK3N,GAcjD,SAAkCoF,GACjC,MAAM1G,KAAEA,EAAIsD,QAAEA,EAAO4L,UAAEA,GAiDR,SAAkBxI,EAAkByI,GACnD,MAAMC,EAASrI,OAAOsI,iBAAiB3I,GAEjC4I,EAAmBC,EAAmBH,EAAW,GAAAI,UACjDC,EAAsBF,EAAmBH,EAAW,GAAAI,aACpDE,EAAoBC,EAAiBL,EAAkBG,GACvDG,EAAkBL,EAAmBH,EAAW,GAAAS,UAChDC,EAAqBP,EAAmBH,EAAW,GAAAS,aACnDE,EAAmBJ,EAAiBC,EAAiBE,GAE3D,IAAI9P,EAA8B,KAC9BsD,EAAU,EACV4L,EAAY,EAwBhB,OAtBIC,IAAiBK,EAChBE,EAAoB,IACvB1P,EAAOwP,EACPlM,EAAUoM,EACVR,EAAYO,EAAoBrC,QAEvB+B,IAAiBU,EACvBE,EAAmB,IACtB/P,EAAO6P,EACPvM,EAAUyM,EACVb,EAAYY,EAAmB1C,SAGhC9J,EAAU9D,KAAKwQ,IAAIN,EAAmBK,GACtC/P,EAAOsD,EAAU,EAAKoM,EAAoBK,EAAmBP,EAAaK,EAAa,KACvFX,EAAYlP,EACTA,IAASwP,EACRC,EAAoBrC,OACpB0C,EAAmB1C,OACpB,GAGG,CACNpN,OACAsD,UACA4L,YAEF,CA1FsCe,CAAkBvJ,GAGvD,SAAK1G,IAASsD,IAIH,IAAAhB,QAASC,IACnB,MAAM2N,EAAc,GAAAlQ,OACdmQ,EAAYC,YAAYC,MAC9B,IAAIC,EAAoB,EAExB,MAAMC,EAAMA,KACX7J,EAAQ8J,oBAAoBN,EAAUO,GACtClO,KAGKkO,EAAwBvH,IAE7B,GAAIA,EAAMjB,SAAWvB,EAArB,CAIA,IAqEH,SAAsCwC,GACrC,MAAO,CAAI,GAAAsG,UAAoBK,QAAgBa,SAASxH,EAAMlJ,KAC/D,CAvEQ2Q,CAA6BzH,GACjC,MAAM,IAAIpH,MAAM,yCAIIsO,YAAYC,MAAQF,GAAa,IACpCjH,EAAM0H,eAKlBN,GAAqBpB,GAC1BqB,GAdA,CAeA,EAGF9M,WAAW,KACN6M,EAAoBpB,GACvBqB,GACA,EACCjN,EAAU,GAEboD,EAAQmK,iBAAiBX,EAAUO,EACpC,EACD,CA9DwDK,CAAyBxP,IAEhF,OADsB0N,EAAkBzG,OAAOwI,SAAS3D,OAAS,EAQhE9K,QAAAC,QAEKD,QAAQoC,IAAIsK,IAAkBxM,oBAR/BzC,GACHsL,QAAQG,wEAC4DzL,OAGrEuC,QAAAC,UAIF,CAAC,MAAA0B,GAAA,OAAA3B,QAAA4B,OAAAD,EAAA,CAAA,EAtDKuL,EAAa,aACbK,EAAY,YAwJlB,SAASN,EAAmBH,EAAoCvK,GAC/D,OAAQuK,EAAOvK,IAAQ,IAAIyD,MAAM,KAClC,CAEA,SAASqH,EAAiBqB,EAAkBC,GAC3C,KAAOD,EAAO5D,OAAS6D,EAAU7D,QAChC4D,EAASA,EAAOE,OAAOF,GAGxB,OAAOxR,KAAKwQ,OAAOiB,EAAUhC,IAAI,CAACkC,EAAUhE,IAAMjG,EAAKiK,GAAYjK,EAAK8J,EAAO7D,KAChF,CCpGA,MAAsBiE,EAAiB,SAEtCxO,EACA1C,EAA4C,CAAE,OAAAmR,IAAAA,EAAArP,MAAAA,EAE1Cb,KAAI,SAAAmQ,EAAAC,MAAAF,EAAA,OAAAE,EAaRvP,EAAKwP,YAAa,EAClBxP,EAAKY,MAAQA,EAEb,MAAMtB,GAAEA,GAAOsB,EAAMmG,QACrB7I,EAAQuR,SAAWvR,EAAQuR,UAAYzP,EAAKiH,gBAEpB,IAApB/I,EAAQiJ,UACXvG,EAAM8E,UAAUyB,SAAU,GAItBvG,EAAM8E,UAAUyB,SACpBnH,EAAK0P,QAAQpM,QAId,MAAM5F,EAAUQ,EAAQR,SAAW4B,GAAIE,aAAa,2BAAwB0D,EACxExF,GAAW,CAAC,OAAQ,WAAWgR,SAAShR,KAC3CkD,EAAMlD,QAAQ+J,OAAS/J,GAIxB,MAAMgI,EAAYxH,EAAQwH,WAAapG,GAAIE,aAAa,6BAA0B0D,EAa7D,OAZjBwC,IACH9E,EAAM8E,UAAU3D,KAAO2D,GAIK,iBAAlBxH,EAAQ8C,OAClBJ,EAAMI,MAAMwG,KAAOtJ,EAAQ8C,MAAMwG,MAAQ5G,EAAMI,MAAMwG,KACrD5G,EAAMI,MAAMC,MAAQ/C,EAAQ8C,MAAMC,OAASL,EAAMI,MAAMC,YAC3BiC,IAAlBhF,EAAQ8C,QAClBJ,EAAMI,MAAQ,CAAEwG,OAAQtJ,EAAQ8C,MAAOC,QAAS/C,EAAQ8C,eAGlD9C,EAAQ8C,8BAEXV,QAAAC,QACGP,EAAKU,MAAMC,KAAK,cAAeC,OAAOsC,IAAU1C,KAAA,WAAA,SAAAP,IAmDtD,IAAIW,EAAMkH,KAAa,OAAAxH,QAAAC,QAGjBP,EAAKU,MAAMC,KAAK,mBAAoBC,OAAOsC,EAAS,WAAA,IAAayM,IAAAA,WAAAC,EAAAC,GAAAF,OAAAA,EAAAE,GAStEjP,EAAMiH,QJ3GC,GI2G2BvH,QAAAC,QAC5BP,EAAK8P,eAAelP,IAAMJ,yBAAAuP,IAAA,OAAAzP,QAAAC,QAQ1BP,EAAKgQ,cAAcpP,IAAMJ,yBAAAyP,EAAA,WAAA,GAP3BrP,EAAM8E,UAAU2B,QAAUxI,SAASqR,oBAAmB,OAAA5P,QAAAC,QACnD1B,SAASqR,yCAAmBC,EACfnQ,EAAKoQ,WAAU9P,OAAAA,QAAAC,QAAcQ,GAAIP,KAAA,SAAA6P,GAAA/P,OAAAA,QAAAC,QAAA4P,EAAAxP,KAAAX,EAAjBY,EAAKyP,YAAApO,GAAA,OAAA3B,QAAA4B,OAAAD,EAAa,CAAA,GACnDqO,UAAQ9P,KAAA+P,WAAAA,GAAAA,CAAAA,MAAAA,EAEJvQ,EAAKoQ,WAAU,OAAA9P,QAAAC,QAAcQ,GAAIP,KAAA,SAAAgQ,GAAA,OAAAlQ,QAAAC,QAAAgQ,EAAA5P,KAAAX,EAAjBY,EAAK4P,IAAAhQ,sBAEG,UAFHyP,GAAAA,EAAAzP,KAAAyP,EAAAzP,KAAAuP,GAAAA,GAAAU,GAAAA,CAAAA,MAAAA,EAdxB,WAAA,IAAC7P,EAAM8E,UAAUyB,eAAO7G,QAAAC,QACrBP,EAAKU,MAAMC,KAAK,sBAAkBuC,IAAU1C,KAAA,WAAA,MAAAkQ,EAC5C1Q,EAAKoQ,kBAAU9P,QAAAC,QAAcQ,GAAIP,cAAAmQ,GAAA,OAAArQ,QAAAC,QAAAmQ,EAAA/P,KAAAX,EAAjBY,EAAK+P,IAAAnQ,KAAAmP,WAAAA,UAFxB,UAEwBrP,QAAAC,QAAAkQ,GAAAA,EAAAjQ,KAAAiQ,EAAAjQ,KAAAoP,GAAAA,EAAAa,GAe7B,CAAC,MAAAxO,GAAA,OAAA3B,QAAA4B,OAAAD,OAACzB,KAGF,WAAA,IAAII,EAAMkH,KAAa,OAAAxH,QAAAC,QAGjBP,EAAKU,MAAMC,KAAK,YAAaC,OAAOsC,EAAW,IAAMlD,EAAK0P,QAAQpM,UAAQ9C,KAAA,WAChFI,EAAMtD,MJzHI,EI0HV0C,EAAKwP,YAAa,EAGdxP,EAAK4Q,aACR5Q,EAAK4Q,aACL5Q,EAAK4Q,gBAAa1N,EArFnBtC,EAAAA,EAAAA,CAAAA,EAAMtD,MJ9CE,EIiDR,MAAMyD,EAAOf,EAAKU,MAAMC,KAAK,YAAaC,EAAO,CAAE1C,WAAS,SAAS0C,EAAO4D,GAAQ,IAAA,SAAAqM,EAAAC,GAUnF,OAHAtM,EAAKzD,KAAI+P,EACTtM,EAAKxD,QAAU+P,EAERvM,EAAKzD,IAAK,CARjB,IAAIgQ,EAKkB,OAJlBnQ,EAAMI,MAAMwG,OACfuJ,EAAa/Q,EAAKgB,MAAM+B,IAAInC,EAAMkG,GAAG1J,MAGhBkD,QAAAC,QAAVwQ,EAAUF,EAAVE,GAAUzQ,QAAAC,QAAWP,EAAKD,UAAUa,EAAMkG,GAAG1J,IAAKoH,EAAKtG,UAAQsC,KAAAqQ,GAI5E,CAAC,MAAA5O,UAAA3B,QAAA4B,OAAAD,EAAC,CAAA,GASF,GANAlB,EAAKP,KAAK,EAAGC,WACZG,EAAMiH,QJ9DA,GI+DNjH,EAAMkG,GAAGrG,KAAOA,CACjB,IAGKG,EAAMlD,QAAQgK,SAAU,CAE5B,MAAMsJ,EAASpQ,EAAMkG,GAAG1J,IAAMwD,EAAMkG,GAAG/J,KACV,YAAzB6D,EAAMlD,QAAQ+J,QAAwB7G,EAAMkG,GAAG1J,MAAQ4C,EAAKiH,eAC/DrJ,EAAoBoT,IAEpBhR,EAAKiR,sBACL9T,EAAoB6T,EAAQ,CAAElF,MAAO9L,EAAKiR,sBAE3C,CAEDjR,EAAKiH,eAAiBnK,IAGlB8D,EAAMlD,QAAQgK,UACjB1H,EAAK0P,QAAQ1J,IAAI,eAEdpF,EAAM8E,UAAU3D,MACnB/B,EAAK0P,QAAQ1J,UAAUxJ,EAASoE,EAAM8E,UAAU3D,SAChD,MAAAL,EAAA,WAAA,GAGGd,EAAM8E,UAAU0B,YAAI9G,QAAAC,QACjBQ,GAAIP,KAAAkB,WAAAA,EAAAA,CAJV,GAIUA,OAAAA,GAAAA,EAAAlB,KAAAkB,EAAAlB,KAAAP,GAAAA,GAAA,4DAlDS6B,CAAA,EA2FZjC,SAAAA,GAEHA,IAAUA,GAAsBmC,SAKrCpB,EAAMtD,MJtIC,EIyIP+L,QAAQxJ,MAAMA,GAGdG,EAAK9B,QAAQgT,qBAAuB,KACnCnM,OAAO/H,SAASuC,KAAOqB,EAAMkG,GAAG1J,IAAMwD,EAAMkG,GAAG/J,MAEhD,GAGAgI,OAAOrH,QAAQyT,IAAI,IAhBlBvQ,EAAMtD,MJnIC,CIoJR,EAAA,CAAA,MAAA8T,EA/JGpR,WAAAA,GAAAA,EAAKwP,kCACJxP,EAAKY,MAAMtD,OJQN,GILuD,OAAAgD,QAAAC,QAIzDP,EAAKU,MAAMC,KAAK,cAAeX,EAAKY,WAAOsC,IAAU1C,KAAA,WAC3DR,EAAKY,MAAMtD,MJEJ,CIF+B,GANtCsD,EAAMtD,MJEA,EIDN0C,EAAK4Q,WAAa,IAAM5Q,EAAKoP,kBAAkBxO,EAAO1C,GAASmR,EAAA,CAKzB,GAAA,CATpCrP,GASoC,OAAAM,QAAAC,QAAA6Q,GAAAA,EAAA5Q,KAAA4Q,EAAA5Q,KAAA8O,GAAAA,EAAA8B,GAuJzC,CAAC,MAAAnP,GAAA3B,OAAAA,QAAA4B,OAAAD,EAAA,CAAA,EAtMe,SAAAoP,EAEfjU,EACAc,EAA4C,GAC5C8K,EAAqC,CAAE,GAEvC,GAAmB,iBAAR5L,EACV,MAAU,IAAA0C,MAAM,4CAIjB,GAAIX,KAAKmS,kBAAkBlU,EAAK,CAAEkC,GAAI0J,EAAK1J,GAAI4H,MAAO8B,EAAK9B,QAE1D,YADAnC,OAAO/H,SAASuC,KAAOnC,GAIxB,MAAQA,IAAK0J,EAAE/J,KAAEA,GAAS0B,EAASgB,QAAQrC,GAErCwD,EAAQzB,KAAK4I,YAAY,IAAKiB,EAAMlC,KAAI/J,SAC9CoC,KAAKiQ,kBAAkBxO,EAAO1C,EAC/B,CC/Ca,MAAA4R,EAAc,SAA+BlP,GAAY,IAAA,MAAAZ,EAC/Db,KAAI,OAAAmB,QAAAC,QAAJP,EAAKU,MAAMC,KAAK,sBAAuBC,OAAOsC,EAAW,KAC9DlD,EAAK0P,QAAQ1J,IAAI,cAAe,eAAgB,aACjD,IAAExF,KAAAF,WAAAA,OAAAA,QAAAC,QAEIP,EAAKU,MAAMC,KAAK,sBAAuBC,EAAO,CAAE2Q,MAAM,GAAS,CAAC3Q,GAAS2Q,WAC9E,IAAIA,EACJ,OAAOvR,EAAK6M,gBAAgB,CAAE9O,SAAU6C,EAAM8E,UAAU3H,UAAU,IACjEyC,KAAA,WAAA,OAAAF,QAAAC,QAEIP,EAAKU,MAAMC,KAAK,oBAAqBC,OAAOsC,IAAU1C,KAC7D,WAAA,EAAA,EAAA,EAAA,CAAC,MAAAyB,GAAA3B,OAAAA,QAAA4B,OAAAD,EAAA,CAAA,ECLYuP,EAAiB,UAE7B/Q,KAAEA,IACFkF,WAAEA,GAAsDxG,KAAKjB,SAE7D,MAAMuT,GAAmB,IAAIC,WAAYC,gBAAgBlR,EAAM,aAGzDmR,EAAQH,EAAiB5N,cAAc,UAAUgO,WAAa,GACpEhT,SAAS+S,MAAQA,EAGjB,MAAME,EAAoBhO,EAAS,mDAG7B4H,EAAW/F,EACfsH,IAAKlP,IACL,MAAMgU,EAAYlT,SAASgF,cAAc9F,GACnCiU,EAAaP,EAAiB5N,cAAc9F,GAClD,OAAIgU,GAAaC,GAChBD,EAAUE,YAAYD,IACf,IAEHD,GACJ1I,QAAQG,sDAAsDzL,KAE1DiU,GACJ3I,QAAQG,uDAAuDzL,MAEzD,KAEPwI,OAAOwI,SAYT,OATA+C,EAAkBlP,QAASsP,IAC1B,MAAMrP,EAAMqP,EAAS1S,aAAa,qBAC5B2S,EAAcxO,yBAA6Bd,OAC7CsP,GAAeA,IAAgBD,GAClCC,EAAYF,YAAYC,EACxB,GAIKxG,EAASN,SAAWzF,EAAWyF,MACvC,EClDagH,EAAkB,SAAsBxR,GACpD,MAAM1C,EAAiC,CAAEmU,SAAU,SAC7CpM,OAAEA,EAAM2B,MAAEA,GAAUhH,EAAMoG,OAC1BsL,EAAerM,GAAUrF,EAAMkG,GAAG/J,KAExC,IAAIwV,GAAW,EAwBf,OAtBID,IACHC,EAAWpT,KAAKuB,MAAMuC,SACrB,gBACArC,EACA,CAAE7D,KAAMuV,EAAcpU,WACtB,CAAC0C,GAAS7D,OAAMmB,cACf,MAAMsU,EAASrT,KAAKoN,iBAAiBxP,GAIrC,OAHIyV,GACHA,EAAOC,eAAevU,KAEdsU,KAKR5K,IAAU2K,IACbA,EAAWpT,KAAKuB,MAAMuC,SAAS,aAAcrC,EAAO,CAAE1C,WAAW,CAAC0C,GAAS1C,cAC1E6G,OAAO2N,SAAS,CAAEC,IAAK,EAAGC,KAAM,KAAM1U,UAKjCqU,CACR,EC7BavC,EAAa,SAA+BpP,GAAY,IAAAZ,MAAAA,EAIlDb,KAFlB,GAAIyB,EAAMkH,KAAM,OAAAxH,QAAAC,UAEhB,MAAMmF,EAAY1F,EAAKU,MAAMC,KAC5B,qBACAC,EACA,CAAE2Q,MAAM,GACR,CAAC3Q,GAAS2Q,WACT,IAAIA,EACJ,OAAOvR,EAAK6M,gBAAgB,CAAE9O,SAAU6C,EAAM8E,UAAU3H,UAAU,GAElE,OAAAuC,QAAAC,QAEI2D,KAAU1D,KAAA,WAAA,OAAAF,QAAAC,QAEVP,EAAKU,MAAMC,KAAK,qBAAsBC,OAAOsC,EAAW,KAC7DlD,EAAK0P,QAAQtJ,OAAO,mBACnB5F,uBAAAF,QAAAC,QAEImF,GAASlF,KAAAF,WAAAA,OAAAA,QAAAC,QAETP,EAAKU,MAAMC,KAAK,mBAAoBC,OAAOsC,IAAU1C,KAAA,WAAA,EAAA,EAAA,EAAA,EAC5D,CAAC,MAAAyB,GAAA3B,OAAAA,QAAA4B,OAAAD,EAAA,CAAA,ECvBYmO,EAAU,SAA+BxP,EAAcG,OAAcf,MAAAA,EAQjFb,KANA,GAAIyB,EAAMkH,KAAM,OAAAxH,QAAAC,UAEhBK,EAAMiH,QTqEI,GSnEV,MAAMzK,IAAEA,GAAQ2D,EAcf,OAZDf,EAAK0P,QAAQtJ,OAAO,cAGfpG,EAAK6S,kBAAkB/V,IAAiBM,KAC5CQ,EAAoBR,GACpB4C,EAAKiH,eAAiBnK,IACtB8D,EAAMkG,GAAG1J,IAAM4C,EAAKiH,gBAIjBrG,EAAM8E,UAAUyB,SACnBnH,EAAK0P,QAAQ1J,IAAI,gBACjB1F,QAAAC,QAGKP,EAAKU,MAAMC,KAAK,kBAAmBC,EAAO,CAAEG,QAAQ,CAACH,GAASG,WAEnE,IADgBf,EAAKwR,eAAezQ,EAAM,CAAE4E,WAAY/E,EAAM+E,aAE7D,MAAM,IAAI7F,MAAM,uCAEbc,EAAM8E,UAAUyB,UAEnBnH,EAAK0P,QAAQ1J,IAAI,cAAe,eAAgB,gBAC5CpF,EAAM8E,UAAU3D,MACnB/B,EAAK0P,QAAQ1J,UAAUxJ,EAASoE,EAAM8E,UAAU3D,SAEjD,IACAvB,KAAA,WAAA,OAAAF,QAAAC,QAGIP,EAAKU,MAAMC,KAAK,iBAAkBC,OAAOsC,EAAW,IAClDlD,EAAKoS,gBAAgBxR,KAC3BJ,KAAA,WAAA,OAAAF,QAAAC,QAEIP,EAAKU,MAAMC,KAAK,YAAaC,EAAO,CAAExD,IAAK4C,EAAKiH,eAAgB2K,MAAO/S,SAAS+S,SAAQpR,KAAA,WAAA,EAAA,EAAA,EAC/F,CAAC,MAAAyB,GAAA3B,OAAAA,QAAA4B,OAAAD,EAAA,CAAA,ECvBY6Q,EAAM,SAAsBC,GANnBC,MAOrB,GAPqBA,EAOHD,EALXhE,QAAQiE,GAAoBC,eAWnC,GADAF,EAAOzQ,KAAOnD,MACV4T,EAAOG,oBACLH,EAAOG,qBAWb,OAPIH,EAAOI,cACVJ,EAAOI,eAERJ,EAAOK,QAEPjU,KAAKkU,QAAQhI,KAAK0H,GAEX5T,KAAKkU,aAjBXhK,QAAQxJ,MAAM,6BAA8BkT,EAkB9C,EAGgB,SAAAO,EAAkBC,GACjC,MAAMR,EAAS5T,KAAKqU,WAAWD,GAC/B,GAAKR,EAYL,OAPAA,EAAOU,UACHV,EAAOW,eACVX,EAAOW,gBAGRvU,KAAKkU,QAAUlU,KAAKkU,QAAQ9M,OAAQoN,GAAMA,IAAMZ,GAEzC5T,KAAKkU,QAXXhK,QAAQxJ,MAAM,iBAAkBkT,EAYlC,CAGM,SAAUS,EAAuBD,GACtC,OAAWpU,KAACkU,QAAQO,KAClBb,GACAA,IAAWQ,GACXR,EAAOhR,OAASwR,GAChBR,EAAOhR,OAAgB,OAAApF,OAAO4W,KAEjC,CCrEM,SAAU7P,EAAuBtG,GACtC,GAAuC,mBAAxB+B,KAACjB,QAAQwF,WAEvB,OADA2F,QAAQG,KAAK,0DACNpM,EAER,MAAM4F,EAAS7D,KAAKjB,QAAQwF,WAAWtG,GACvC,OAAK4F,GAA4B,iBAAXA,EAIlBA,EAAO2D,WAAW,OAAS3D,EAAO2D,WAAW,SAChD0C,QAAQG,KAAK,4DACNpM,GAED4F,GAPNqG,QAAQG,KAAK,mDACNpM,EAOT,CAQgB,SAAAyV,EAA8BgB,EAAcC,GAC3D,OAAW3U,KAACuE,WAAWmQ,KAAU1U,KAAKuE,WAAWoQ,EAClD,CCyBA,MAAMC,EAAoB,CACzBC,wBAAwB,EACxBzM,kBAAmB,yBACnBD,eAAgB,OAChBtG,OAAO,EACP2E,WAAY,CAAC,SACbsO,YAAaA,CAAC7W,GAAOkC,MAAO,CAAA,MAASA,GAAI4U,QAAQ,kBACjDC,aAAc,UACdC,WAAY,SACZ/M,QAAQ,EACRgM,QAAS,GACT3P,WAAatG,GAAQA,EACrBiE,eAAgB,CACf,mBAAoB,OACpBgT,OAAU,oCAEXnD,qBAAuBhK,GAAoD,SAAzCA,EAAM5J,OAAwBG,OAChE6D,QAAS,SAIWgT,EAkEpB3V,WAAAA,CAAYT,EAA4B,CAAE,QAhEjCqW,gBAETrW,KAAAA,aAES6V,EAAAA,KAAAA,SAAoBA,EAAQ5U,KAErCkU,QAAoB,QAEpBzS,WAAK,EAAAzB,KAEI6B,WAAK,EAAA7B,KAELuB,WAEAgP,EAAAA,KAAAA,oBAETzI,eAAyBnK,IAEfmU,KAAAA,gCAEAuD,mBAAa,EAAArV,KAEbqQ,YAAsB,OAEtBoB,gBAAU,EAAAzR,KAGpB2T,IAAMA,EAENQ,KAAAA,MAAQA,EAAKnU,KAEbqU,WAAaA,EAGbiB,KAAAA,IAAoD,OAGpDpD,KAAAA,SAAWA,EAAQlS,KAETiQ,kBAAoBA,EAEpBrH,KAAAA,YAAcA,EAAW5I,KAEnCrB,cAAgBA,EAEhBiC,KAAAA,UAAYA,EAASZ,KAErB0N,gBAAkBA,OACRuD,WAAaA,EAAUjR,KAEjCqS,eAAiBA,OACPxB,cAAgBA,EAChBF,KAAAA,eAAiBA,OACjBsC,gBAAkBA,EAE5B7F,KAAAA,iBAAmBA,EAAgBpN,KAGnCrC,cAAgBA,EAEhB4G,KAAAA,WAAaA,EAAUvE,KAEb0T,kBAAoBA,EAI7B1T,KAAKjB,QAAU,IAAKiB,KAAK4U,YAAa7V,GAEtCiB,KAAKuV,gBAAkBvV,KAAKuV,gBAAgBlM,KAAKrJ,MACjDA,KAAKwV,eAAiBxV,KAAKwV,eAAenM,KAAKrJ,MAE/CA,KAAK6B,MAAQ,IAAIqB,EAAMlD,MACvBA,KAAKuQ,QAAU,IAAIpK,EAAQnG,MAC3BA,KAAKuB,MAAQ,IAAIoI,EAAM3J,MACvBA,KAAKyB,MAAQzB,KAAK4I,YAAY,CAAEjB,GAAI,KAEpC3H,KAAK8R,oBAAuBvT,QAAQJ,OAAwBwO,OAAS,EAEhE3M,KAAKyV,qBAIVzV,KAAK0V,QACN,CAEUD,iBAAAA,GACT,MAAuB,oBAAZtU,UACV+I,QAAQG,KAAK,+BAIf,CAGMqL,MAAAA,GAAM,UAAA7U,EAEcb,MAAnBgV,aAAEA,GAAiBnU,EAAK9B,QAyB7B,OAxBD8B,EAAKwU,cAAgBxU,EAAKlC,cAAcqW,EAAc,QAASnU,EAAK0U,iBAEpE3P,OAAO8J,iBAAiB,WAAY7O,EAAK2U,gBAGrC3U,EAAK9B,QAAQ8V,yBAChBjP,OAAOrH,QAAQoX,kBAAoB,UAUpC9U,EAAK9B,QAAQmJ,OAASrH,EAAK9B,QAAQmJ,UAAYxI,SAASqR,oBAGxDlQ,EAAK9B,QAAQmV,QAAQzQ,QAASmQ,GAAW/S,EAAK8S,IAAIC,IAGF,SAA3CrV,QAAQJ,OAAwBG,QACpCG,EAAoB,KAAM,CAAEkO,MAAO9L,EAAKiR,sBACxC3Q,QAAAC,QAGK2D,KAAU1D,KAAA,WAAA,OAAAF,QAAAC,QAGVP,EAAKU,MAAMC,KAAK,cAAUuC,OAAWA,EAAW,KACrD,MAAMzC,EAAO5B,SAASkW,gBACtBtU,EAAKyF,UAAUF,IAAI,gBACnBvF,EAAKyF,UAAU8O,OAAO,cAAehV,EAAK9B,QAAQmJ,OACnD,IAAE7G,KACH,WAAA,EAAA,EAAA,CAAC,MAAAyB,GAAA,OAAA3B,QAAA4B,OAAAD,IAGK1D,OAAAA,OAAOiM,MAAAA,EAEZrL,KAS6D,OAT7DqL,EAAKgK,cAAejW,UAGpBwG,OAAOyJ,oBAAoB,WAAYhE,EAAKmK,gBAG5CnK,EAAKxJ,MAAMsC,QAGXkH,EAAKtM,QAAQmV,QAAQzQ,QAASmQ,GAAWvI,EAAK8I,MAAMP,IAASzS,QAAAC,QAGvDiK,EAAK9J,MAAMC,KAAK,eAAWuC,OAAWA,EAAW,KACtD,MAAMzC,EAAO5B,SAASkW,gBACtBtU,EAAKyF,UAAUE,OAAO,gBACtB3F,EAAKyF,UAAUE,OAAO,cACvB,IAAE5F,KAAA,WAGFgK,EAAK9J,MAAM4C,OAAQ,EACpB,CAAC,MAAArB,UAAA3B,QAAA4B,OAAAD,EAGDqP,CAAAA,CAAAA,iBAAAA,CAAkB/R,GAAcD,GAAEA,EAAE4H,MAAEA,GAA2C,CAAE,GAClF,MAAM+N,OAAEA,EAAM7X,IAAEA,EAAGL,KAAEA,GAAS0B,EAASgB,QAAQF,GAG/C,OAAI0V,IAAWlQ,OAAO/H,SAASiY,WAK3B3V,IAAMH,KAAK+V,yBAAyB5V,OAKpCH,KAAKjB,QAAQ+V,YAAY7W,EAAML,EAAM,CAAEuC,KAAI4H,SAMhD,CAEUwN,eAAAA,CAAgBxN,GACzB,MAAM5H,EAAK4H,EAAMiO,gBACX5V,KAAEA,EAAInC,IAAEA,EAAGL,KAAEA,GAAS0B,EAASY,YAAYC,GAGjD,GAAIH,KAAKmS,kBAAkB/R,EAAM,CAAED,KAAI4H,UACtC,OAID,GAAI/H,KAAKqQ,YAAcpS,IAAQ+B,KAAKyB,MAAMkG,GAAG1J,IAE5C,YADA8J,EAAMkO,iBAIP,MAAMxU,EAAQzB,KAAK4I,YAAY,CAAEjB,GAAI1J,EAAKL,OAAMuC,KAAI4H,UAGhDA,EAAMmO,SAAWnO,EAAMoO,SAAWpO,EAAMqO,UAAYrO,EAAMsO,OAC7DrW,KAAKuB,MAAMuC,SAAS,cAAerC,EAAO,CAAErB,SAKxB,IAAjB2H,EAAMuO,QAIVtW,KAAKuB,MAAMuC,SAAS,aAAcrC,EAAO,CAAEtB,KAAI4H,SAAS,KACvD,MAAMlD,EAAOpD,EAAMoD,KAAK5G,KAAO,GAE/B8J,EAAMkO,iBAGDhY,GAAOA,IAAQ4G,EAsBhB7E,KAAK0T,kBAAkBzV,EAAK4G,IAKhC7E,KAAKiQ,kBAAkBxO,GA1BlB7D,EAEHoC,KAAKuB,MAAMuC,SAAS,cAAerC,EAAO,CAAE7D,QAAQ,KACnDa,EAAoBR,EAAML,GAC1BoC,KAAKiT,gBAAgBxR,EACtB,GAGAzB,KAAKuB,MAAMuC,SAAS,YAAarC,OAAOsC,EAAW,KAClB,aAA5B/D,KAAKjB,QAAQkW,WAChBjV,KAAKiQ,kBAAkBxO,IAEvBhD,EAAoBR,GACpB+B,KAAKiT,gBAAgBxR,GACrB,IAcN,CAEU+T,cAAAA,CAAezN,GACxB,MAAM3H,EAAgB2H,EAAM5J,OAAwBF,KAAOJ,SAASuC,KAGpE,GAAIJ,KAAKjB,QAAQgT,qBAAqBhK,GACrC,OAID,GAAI/H,KAAK0T,kBAAkB/V,IAAiBqC,KAAK8H,gBAChD,OAGD,MAAM7J,IAAEA,EAAGL,KAAEA,GAAS0B,EAASgB,QAAQF,GAEjCqB,EAAQzB,KAAK4I,YAAY,CAAEjB,GAAI1J,EAAKL,OAAMmK,UAGhDtG,EAAMlD,QAAQgK,UAAW,EAGzB,MAAMoE,EAAS5E,EAAM5J,OAAwBwO,OAAS,EAClDA,GAASA,IAAU3M,KAAK8R,sBAE3BrQ,EAAMlD,QAAQiK,UADImE,EAAQ3M,KAAK8R,oBAAsB,EAAI,WAAa,YAEtE9R,KAAK8R,oBAAsBnF,GAI5BlL,EAAM8E,UAAUyB,SAAU,EAC1BvG,EAAMoG,OAAOY,OAAQ,EACrBhH,EAAMoG,OAAOf,QAAS,EAGlB9G,KAAKjB,QAAQ8V,yBAChBpT,EAAM8E,UAAUyB,SAAU,EAC1BvG,EAAMoG,OAAOY,OAAQ,GAGtBzI,KAAKuB,MAAMuC,SAAS,mBAAoBrC,EAAO,CAAEsG,SAAS,KACzD/H,KAAKiQ,kBAAkBxO,IAEzB,CAGUsU,wBAAAA,CAAyBQ,GAClC,QAAIA,EAAUC,QAAQ,gCAIvB"}